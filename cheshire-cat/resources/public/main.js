if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0; i < tuples.length; i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.reflect");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.define("goog.userAgent.ASSUME_IPOD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode != null && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
  return undefined;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {
    return goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0;
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.HtmlElement");
goog.dom.HtmlElement = function() {
};
goog.provide("goog.dom.TagName");
goog.require("goog.dom.HtmlElement");
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.provide("goog.dom.asserts");
goog.require("goog.asserts");
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.Location || !(o instanceof win.Element)), "Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLAnchorElement != "undefined" && typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLAnchorElement || !(o instanceof win.Location || o instanceof win.Element)), "Argument is not a HTMLAnchorElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLLinkElement != "undefined" && typeof win.Location != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLLinkElement || !(o instanceof win.Location || o instanceof win.Element)), "Argument is not a HTMLLinkElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLImageElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLImageElement || !(o instanceof win.Element)), "Argument is not a HTMLImageElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLEmbedElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLEmbedElement || !(o instanceof win.Element)), "Argument is not a HTMLEmbedElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLFrameElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLFrameElement || !(o instanceof win.Element)), "Argument is not a HTMLFrameElement (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLIFrameElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLIFrameElement || !(o instanceof win.Element)), "Argument is not a HTMLIFrameElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLObjectElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLObjectElement || !(o instanceof win.Element)), "Argument is not a HTMLObjectElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (typeof win.HTMLScriptElement != "undefined" && typeof win.Element != "undefined") {
      goog.asserts.assert(o && (o instanceof win.HTMLScriptElement || !(o instanceof win.Element)), "Argument is not a HTMLScriptElement (or a non-Element mock); " + "got: %s", goog.dom.asserts.debugStringForType_(o));
    }
  }
  return o;
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
  } else {
    return value === undefined ? "undefined" : value === null ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  var doc = o && o.ownerDocument;
  var win = doc && (doc.defaultView || doc.parentWindow);
  return win || goog.global;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return goog.global.URL;
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return goog.global.webkitURL;
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return goog.global;
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿" + "‎Ⰰ-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-߿‏יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var result = goog.html.TrustedResourceUrl.format_(format, args);
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.format_ = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw new Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  return formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw new Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found ' + "in args: " + JSON.stringify(args));
    }
    var arg = args[id];
    if (arg instanceof goog.string.Const) {
      return goog.string.Const.unwrap(arg);
    } else {
      return encodeURIComponent(String(arg));
    }
  });
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = /^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank(#|$)/i;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, params) {
  var url = goog.html.TrustedResourceUrl.format_(format, args);
  var separator = /\?/.test(url) ? "\x26" : "?";
  for (var key in params) {
    if (params[key] == null) {
      continue;
    }
    url += separator + encodeURIComponent(key) + "\x3d" + encodeURIComponent(String(params[key]));
    separator = "\x26";
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp("^(?:audio/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|" + "image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|" + "text/csv|" + "video/(?:mpeg|mp4|ogg|webm))$", "i");
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url))) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyValue;
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (goog.isArray(value)) {
      value = goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ");
    } else {
      value = goog.html.SafeStyle.sanitizePropertyValue_(value);
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  goog.asserts.assert(!/[{;}]/.test(result), "Value does not allow [{;}].");
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeUrl.FUNCTIONS_RE_, "$1").replace(goog.html.SafeUrl.URL_RE_, "url");
  if (!goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)) {
    goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value);
    return goog.html.SafeStyle.INNOCUOUS_STRING;
  } else {
    if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
      goog.asserts.fail("String value requires balanced quotes, got: " + value);
      return goog.html.SafeStyle.INNOCUOUS_STRING;
    }
  }
  return goog.html.SafeStyle.sanitizeUrl_(value);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeUrl.URL_RE_ = new RegExp("\\b(url\\([ \t\n]*)(" + "'[ -\x26(-\\[\\]-~]*'" + '|"[ !#-\\[\\]-~]*"' + "|[!#-\x26*-\\[\\]-~]*" + ")([ \t\n]*\\))", "g");
goog.html.SafeUrl.FUNCTIONS_RE_ = new RegExp("\\b(hsl|hsla|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?)" + "\\([-0-9a-z.%, ]+\\)", "g");
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeUrl.URL_RE_, function(match, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeStyle");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.contains(selector, "\x3c")) {
    throw Error("Selector does not allow '\x3c', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and " + "strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw Error("() and [] in selector must be balanced, got: " + selector);
  }
  if (!(style instanceof goog.html.SafeStyle)) {
    style = goog.html.SafeStyle.create(style);
  }
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style) + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  var brackets = {"(":")", "[":"]"};
  var expectedBrackets = [];
  for (var i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch)) {
        if (expectedBrackets.pop() != ch) {
          return false;
        }
      }
    }
  }
  return expectedBrackets.length == 0;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error("The browser does not support sandboxed iframes.");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if (attrLower == "language" || attrLower == "src" || attrLower == "text" || attrLower == "type") {
      throw Error('Cannot set "' + attrLower + '" attribute');
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.dom.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {"MATH":true, "SCRIPT":true, "STYLE":true, "SVG":true, "TEMPLATE":true};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrap(content);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.prototype.equals = function(other) {
  return other instanceof goog.math.Coordinate && goog.math.Coordinate.equals(this, other);
};
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += Number(tx);
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || document;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    retVal = goog.dom.getElementByTagNameAndClass_(document, "*", className, opt_el);
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el; el = els[i]; i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el; el = els[i]; i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.getElementByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tag = opt_tag && opt_tag != "*" ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {
    return parent.querySelector(tag + (opt_class ? "." + opt_class : ""));
  }
  var elements = goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);
  return elements[0] || null;
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (val && val.implementsGoogStringTypedString) {
      val = val.getTypedStringValue();
    }
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "nonce":"nonce", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeightForWindow = function(win) {
  return goog.dom.getDocumentHeight_(win);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = String(args[0]);
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex; i < args.length; i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return goog.dom.createElement_(document, name);
};
goog.dom.createElement_ = function(doc, name) {
  return doc.createElement(String(name));
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);
  var tbody = table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));
  for (var i = 0; i < rows; i++) {
    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);
    for (var j = 0; j < columns; j++) {
      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.constHtmlToNode = function(var_args) {
  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);
  var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a " + "Node later, so it will be automatically balanced."), stringArray.join(""));
  return goog.dom.safeHtmlToNode(safeHtml);
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case String(goog.dom.TagName.APPLET):
    case String(goog.dom.TagName.AREA):
    case String(goog.dom.TagName.BASE):
    case String(goog.dom.TagName.BR):
    case String(goog.dom.TagName.COL):
    case String(goog.dom.TagName.COMMAND):
    case String(goog.dom.TagName.EMBED):
    case String(goog.dom.TagName.FRAME):
    case String(goog.dom.TagName.HR):
    case String(goog.dom.TagName.IMG):
    case String(goog.dom.TagName.INPUT):
    case String(goog.dom.TagName.IFRAME):
    case String(goog.dom.TagName.ISINDEX):
    case String(goog.dom.TagName.KEYGEN):
    case String(goog.dom.TagName.LINK):
    case String(goog.dom.TagName.NOFRAMES):
    case String(goog.dom.TagName.NOSCRIPT):
    case String(goog.dom.TagName.META):
    case String(goog.dom.TagName.OBJECT):
    case String(goog.dom.TagName.PARAM):
    case String(goog.dom.TagName.SCRIPT):
    case String(goog.dom.TagName.SOURCE):
    case String(goog.dom.TagName.STYLE):
    case String(goog.dom.TagName.TRACK):
    case String(goog.dom.TagName.WBR):
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return element.removeNode(false);
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return goog.dom.removeNode(element);
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return node.firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return node.lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return node.nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return node.previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return node;
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (!parent || !descendant) {
    return false;
  }
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0; i < count; i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0; i < minLength; i++) {
    var first = paths[0][i];
    for (var j = 1; j < count; j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;
};
goog.dom.getFrameContentDocument = function(frame) {
  return frame.contentDocument || frame.contentWindow.document;
};
goog.dom.getFrameContentWindow = function(frame) {
  try {
    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);
  } catch (e) {
  }
  return null;
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = String(text);
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = String(text);
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  goog.asserts.assert(element !== null, "goog.dom.getOuterHtml expects a non-null value for element");
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9")) {
    var attrNode = element.getAttributeNode("tabindex");
    return goog.isDefAndNotNull(attrNode) && attrNode.specified;
  } else {
    return element.hasAttribute("tabindex");
  }
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect;
  if (!goog.isFunction(element["getBoundingClientRect"]) || goog.userAgent.IE && element.parentElement == null) {
    rect = {"height":element.offsetHeight, "width":element.offsetWidth};
  } else {
    rect = element.getBoundingClientRect();
  }
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1; i >= 0; i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps);
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (element && !opt_includeNode) {
    element = element.parentNode;
  }
  var steps = 0;
  while (element && (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var dpiPerDppx = 96;
  var query = "(min-resolution: " + pixelRatio + "dppx)," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio * dpiPerDppx + "dpi)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.getCanvasContext2D = function(canvas) {
  return canvas.getContext("2d");
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || this.document_;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return goog.dom.createElement_(this.document_, name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;
goog.provide("goog.userAgent.product");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.userAgent");
goog.define("goog.userAgent.product.ASSUME_FIREFOX", false);
goog.define("goog.userAgent.product.ASSUME_IPHONE", false);
goog.define("goog.userAgent.product.ASSUME_IPAD", false);
goog.define("goog.userAgent.product.ASSUME_ANDROID", false);
goog.define("goog.userAgent.product.ASSUME_CHROME", false);
goog.define("goog.userAgent.product.ASSUME_SAFARI", false);
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.define("goog.json.TRY_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.errorLogger_ = goog.nullFunction;
goog.json.setErrorLogger = function(errorLogger) {
  goog.json.errorLogger_ = errorLogger;
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(s) {
  var error;
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global["JSON"]["parse"](s);
    } catch (ex) {
      error = ex;
    }
  }
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      var result = eval("(" + o + ")");
      if (error) {
        goog.json.errorLogger_("Invalid JSON: " + o, error);
      }
      return result;
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(s) {
  var error;
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global["JSON"]["parse"](s);
    } catch (ex) {
      error = ex;
    }
  }
  var result = eval("(" + s + ")");
  if (error) {
    goog.json.errorLogger_("Invalid JSON: " + s, error);
  }
  return result;
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (object == null) {
    sb.push("null");
    return;
  }
  if (typeof object == "object") {
    if (goog.isArray(object)) {
      this.serializeArray(object, sb);
      return;
    } else {
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_(object, sb);
        return;
      }
    }
  }
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(String(object));
      break;
    case "function":
      sb.push("null");
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("￿") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    var rv = goog.json.Serializer.charToJsonCharCache_[c];
    if (!rv) {
      rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1);
      goog.json.Serializer.charToJsonCharCache_[c] = rv;
    }
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0; i < l; i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.520";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  var and__4120__auto__ = typeof setTimeout !== "undefined";
  if (and__4120__auto__) {
    var and__4120__auto____$1 = setTimeout(f, 0);
    if (cljs.core.truth_(and__4120__auto____$1)) {
      return true;
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4120__auto__ = ty;
    if (cljs.core.truth_(and__4120__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4120__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5718__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5718__auto__)) {
    var s = temp__5718__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__1994 = arguments.length;
  switch(G__1994) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___1996 = arguments.length;
      var i__4731__auto___1997 = 0;
      while (true) {
        if (i__4731__auto___1997 < len__4730__auto___1996) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___1997]);
          var G__1998 = i__4731__auto___1997 + 1;
          i__4731__auto___1997 = G__1998;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4607__auto___1999 = dimarray.length;
  var i_2000 = 0;
  while (true) {
    if (i_2000 < n__4607__auto___1999) {
      dimarray[i_2000] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__2001 = i_2000 + 1;
      i_2000 = G__2001;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq1991) {
  var G__1992 = cljs.core.first(seq1991);
  var seq1991__$1 = cljs.core.next(seq1991);
  var G__1993 = cljs.core.first(seq1991__$1);
  var seq1991__$2 = cljs.core.next(seq1991__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1992, G__1993, seq1991__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4607__auto___2002 = len;
  var i_2003 = 0;
  while (true) {
    if (i_2003 < n__4607__auto___2002) {
      new_arr[i_2003] = arr[i_2003];
      var G__2004 = i_2003 + 1;
      i_2003 = G__2004;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__2005 = i + 1;
      i = G__2005;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__2010 = arguments.length;
  switch(G__2010) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2013 = arguments.length;
      var i__4731__auto___2014 = 0;
      while (true) {
        if (i__4731__auto___2014 < len__4730__auto___2013) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2014]);
          var G__2015 = i__4731__auto___2014 + 1;
          i__4731__auto___2014 = G__2015;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.array_QMARK_(array);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2011) {
    var e_2016 = e2011;
    cljs.core.maybe_warn(e_2016);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq2007) {
  var G__2008 = cljs.core.first(seq2007);
  var seq2007__$1 = cljs.core.next(seq2007);
  var G__2009 = cljs.core.first(seq2007__$1);
  var seq2007__$2 = cljs.core.next(seq2007__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2008, G__2009, seq2007__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__2022 = arguments.length;
  switch(G__2022) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2025 = arguments.length;
      var i__4731__auto___2026 = 0;
      while (true) {
        if (i__4731__auto___2026 < len__4730__auto___2025) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2026]);
          var G__2027 = i__4731__auto___2026 + 1;
          i__4731__auto___2026 = G__2027;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.array_QMARK_(array);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2023) {
    var e_2028 = e2023;
    cljs.core.maybe_warn(e_2028);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq2018) {
  var G__2019 = cljs.core.first(seq2018);
  var seq2018__$1 = cljs.core.next(seq2018);
  var G__2020 = cljs.core.first(seq2018__$1);
  var seq2018__$2 = cljs.core.next(seq2018__$1);
  var G__2021 = cljs.core.first(seq2018__$2);
  var seq2018__$3 = cljs.core.next(seq2018__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2019, G__2020, G__2021, seq2018__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__2033 = arguments.length;
  switch(G__2033) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2035 = arguments.length;
      var i__4731__auto___2036 = 0;
      while (true) {
        if (i__4731__auto___2036 < len__4730__auto___2035) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2036]);
          var G__2037 = i__4731__auto___2036 + 1;
          i__4731__auto___2036 = G__2037;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = cljs.core.array_QMARK_(array);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2030) {
  var G__2031 = cljs.core.first(seq2030);
  var seq2030__$1 = cljs.core.next(seq2030);
  var G__2032 = cljs.core.first(seq2030__$1);
  var seq2030__$2 = cljs.core.next(seq2030__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2031, G__2032, seq2030__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__2043 = arguments.length;
  switch(G__2043) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2045 = arguments.length;
      var i__4731__auto___2046 = 0;
      while (true) {
        if (i__4731__auto___2046 < len__4730__auto___2045) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2046]);
          var G__2047 = i__4731__auto___2046 + 1;
          i__4731__auto___2046 = G__2047;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = cljs.core.array_QMARK_(array);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2039) {
  var G__2040 = cljs.core.first(seq2039);
  var seq2039__$1 = cljs.core.next(seq2039);
  var G__2041 = cljs.core.first(seq2039__$1);
  var seq2039__$2 = cljs.core.next(seq2039__$1);
  var G__2042 = cljs.core.first(seq2039__$2);
  var seq2039__$3 = cljs.core.next(seq2039__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2040, G__2041, G__2042, seq2039__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__2052 = arguments.length;
  switch(G__2052) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2054 = arguments.length;
      var i__4731__auto___2055 = 0;
      while (true) {
        if (i__4731__auto___2055 < len__4730__auto___2054) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2055]);
          var G__2056 = i__4731__auto___2055 + 1;
          i__4731__auto___2055 = G__2056;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq2049) {
  var G__2050 = cljs.core.first(seq2049);
  var seq2049__$1 = cljs.core.next(seq2049);
  var G__2051 = cljs.core.first(seq2049__$1);
  var seq2049__$2 = cljs.core.next(seq2049__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2050, G__2051, seq2049__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__2062 = arguments.length;
  switch(G__2062) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2064 = arguments.length;
      var i__4731__auto___2065 = 0;
      while (true) {
        if (i__4731__auto___2065 < len__4730__auto___2064) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2065]);
          var G__2066 = i__4731__auto___2065 + 1;
          i__4731__auto___2065 = G__2066;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq2058) {
  var G__2059 = cljs.core.first(seq2058);
  var seq2058__$1 = cljs.core.next(seq2058);
  var G__2060 = cljs.core.first(seq2058__$1);
  var seq2058__$2 = cljs.core.next(seq2058__$1);
  var G__2061 = cljs.core.first(seq2058__$2);
  var seq2058__$3 = cljs.core.next(seq2058__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2059, G__2060, G__2061, seq2058__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__2068 = arguments.length;
  switch(G__2068) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2073 = arguments.length;
  var i__4731__auto___2074 = 0;
  while (true) {
    if (i__4731__auto___2074 < len__4730__auto___2073) {
      args__4736__auto__.push(arguments[i__4731__auto___2074]);
      var G__2075 = i__4731__auto___2074 + 1;
      i__4731__auto___2074 = G__2075;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq2070) {
  var G__2071 = cljs.core.first(seq2070);
  var seq2070__$1 = cljs.core.next(seq2070);
  var G__2072 = cljs.core.first(seq2070__$1);
  var seq2070__$2 = cljs.core.next(seq2070__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2071, G__2072, seq2070__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__2077 = arguments.length;
  switch(G__2077) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4434__auto__.call(null, this$, a);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4431__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4434__auto__.call(null, this$, a, b);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4431__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4434__auto__.call(null, this$, a, b, c);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4431__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4434__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4431__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4434__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4431__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4434__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4431__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4433__auto__ = value == null ? null : value;
    var m__4434__auto__ = cljs.core._clone[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4434__auto__.call(null, value);
    } else {
      var m__4431__auto__ = cljs.core._clone["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4431__auto__.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._count[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._count["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._empty[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._empty["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._conj[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4434__auto__.call(null, coll, o);
    } else {
      var m__4431__auto__ = cljs.core._conj["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4431__auto__.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__2080 = arguments.length;
  switch(G__2080) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._nth[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4434__auto__.call(null, coll, n);
    } else {
      var m__4431__auto__ = cljs.core._nth["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4431__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._nth[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4434__auto__.call(null, coll, n, not_found);
    } else {
      var m__4431__auto__ = cljs.core._nth["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4431__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._rest[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._rest["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._next[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._next["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__2083 = arguments.length;
  switch(G__2083) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._lookup[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4434__auto__.call(null, o, k);
    } else {
      var m__4431__auto__ = cljs.core._lookup["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4431__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._lookup[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4434__auto__.call(null, o, k, not_found);
    } else {
      var m__4431__auto__ = cljs.core._lookup["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4431__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._assoc[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4434__auto__.call(null, coll, k, v);
    } else {
      var m__4431__auto__ = cljs.core._assoc["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4431__auto__.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._find[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._find["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._dissoc[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._dissoc["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._key[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._key["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._val[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._val["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._disjoin[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4434__auto__.call(null, coll, v);
    } else {
      var m__4431__auto__ = cljs.core._disjoin["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4431__auto__.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._peek[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._peek["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._pop[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._pop["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._assoc_n[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4434__auto__.call(null, coll, n, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_n["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4431__auto__.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._deref[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._deref["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4434__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4431__auto__ = cljs.core._deref_with_timeout["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4431__auto__.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._meta[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._meta["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._with_meta[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4434__auto__.call(null, o, meta);
    } else {
      var m__4431__auto__ = cljs.core._with_meta["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4431__auto__.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__2086 = arguments.length;
  switch(G__2086) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4434__auto__.call(null, coll, f);
    } else {
      var m__4431__auto__ = cljs.core._reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4431__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4434__auto__.call(null, coll, f, start);
    } else {
      var m__4431__auto__ = cljs.core._reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4431__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4434__auto__.call(null, coll, f, init);
    } else {
      var m__4431__auto__ = cljs.core._kv_reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4431__auto__.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._equiv[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4434__auto__.call(null, o, other);
    } else {
      var m__4431__auto__ = cljs.core._equiv["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4431__auto__.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._hash[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._hash["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._seq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._seq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._rseq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._rseq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4434__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core._sorted_seq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4431__auto__.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4434__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core._sorted_seq_from["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4431__auto__.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._entry_key[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4434__auto__.call(null, coll, entry);
    } else {
      var m__4431__auto__ = cljs.core._entry_key["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4431__auto__.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._comparator[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._comparator["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4433__auto__ = writer == null ? null : writer;
    var m__4434__auto__ = cljs.core._write[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4434__auto__.call(null, writer, s);
    } else {
      var m__4431__auto__ = cljs.core._write["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4431__auto__.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4433__auto__ = writer == null ? null : writer;
    var m__4434__auto__ = cljs.core._flush[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4434__auto__.call(null, writer);
    } else {
      var m__4431__auto__ = cljs.core._flush["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4431__auto__.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._pr_writer[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4434__auto__.call(null, o, writer, opts);
    } else {
      var m__4431__auto__ = cljs.core._pr_writer["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4431__auto__.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._realized_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._notify_watches[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4434__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4431__auto__ = cljs.core._notify_watches["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4431__auto__.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._add_watch[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4434__auto__.call(null, this$, key, f);
    } else {
      var m__4431__auto__ = cljs.core._add_watch["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4431__auto__.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._remove_watch[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4434__auto__.call(null, this$, key);
    } else {
      var m__4431__auto__ = cljs.core._remove_watch["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4431__auto__.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._as_transient[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._as_transient["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4434__auto__.call(null, tcoll, val);
    } else {
      var m__4431__auto__ = cljs.core._conj_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4431__auto__.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4434__auto__.call(null, tcoll);
    } else {
      var m__4431__auto__ = cljs.core._persistent_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4431__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4434__auto__.call(null, tcoll, key, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4431__auto__.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4434__auto__.call(null, tcoll, key);
    } else {
      var m__4431__auto__ = cljs.core._dissoc_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4431__auto__.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4434__auto__.call(null, tcoll, n, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4431__auto__.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4434__auto__.call(null, tcoll);
    } else {
      var m__4431__auto__ = cljs.core._pop_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4431__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4434__auto__.call(null, tcoll, v);
    } else {
      var m__4431__auto__ = cljs.core._disjoin_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4431__auto__.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._compare[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4434__auto__.call(null, x, y);
    } else {
      var m__4431__auto__ = cljs.core._compare["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4431__auto__.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._drop_first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._drop_first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_rest["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_next[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_next["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._name[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._name["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._namespace[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._namespace["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4434__auto__.call(null, o, new_value);
    } else {
      var m__4431__auto__ = cljs.core._reset_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4431__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__2089 = arguments.length;
  switch(G__2089) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4434__auto__.call(null, o, f);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4431__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4434__auto__.call(null, o, f, a);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4431__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4434__auto__.call(null, o, f, a, b);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4431__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4434__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4431__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4434__auto__.call(null, o, new_value);
    } else {
      var m__4431__auto__ = cljs.core._vreset_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4431__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._iterator[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._iterator["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__2091 = i + 2;
        var G__2092 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__2091;
        h1 = G__2092;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__2095 = i + 1;
          var G__2096 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__2095;
          hash = G__2096;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return cljs.core._hash(o) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__2100 = o;
        switch(G__2100) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = cljs.core.not(a.ns);
      if (and__4120__auto__) {
        return b.ns;
      } else {
        return and__4120__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2102 = a.ns;
            var G__2103 = b.ns;
            return goog.array.defaultCompare(G__2102, G__2103);
          }();
          if (0 === nsc) {
            var G__2104 = a.name;
            var G__2105 = b.name;
            return goog.array.defaultCompare(G__2104, G__2105);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2106 = a.name;
        var G__2107 = b.name;
        return goog.array.defaultCompare(G__2106, G__2107);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__2109 = null;
  var G__2109__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__2109__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__2109 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2109__2.call(this, self__, coll);
      case 3:
        return G__2109__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2109.cljs$core$IFn$_invoke$arity$2 = G__2109__2;
  G__2109.cljs$core$IFn$_invoke$arity$3 = G__2109__3;
  return G__2109;
}();
cljs.core.Symbol.prototype.apply = function(self__, args2108) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2108)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4243__auto__ = self__._hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__2111 = arguments.length;
  switch(G__2111) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__2113 = name.fqn;
            name = G__2113;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__2157 = null;
  var G__2157__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2115 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2115.cljs$core$IFn$_invoke$arity$0 ? fexpr__2115.cljs$core$IFn$_invoke$arity$0() : fexpr__2115.call(null);
  };
  var G__2157__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2116 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2116.cljs$core$IFn$_invoke$arity$1 ? fexpr__2116.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2116.call(null, a);
  };
  var G__2157__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2117 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2117.cljs$core$IFn$_invoke$arity$2 ? fexpr__2117.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2117.call(null, a, b);
  };
  var G__2157__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2118 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2118.cljs$core$IFn$_invoke$arity$3 ? fexpr__2118.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2118.call(null, a, b, c);
  };
  var G__2157__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2119 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2119.cljs$core$IFn$_invoke$arity$4 ? fexpr__2119.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2119.call(null, a, b, c, d);
  };
  var G__2157__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2120 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2120.cljs$core$IFn$_invoke$arity$5 ? fexpr__2120.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2120.call(null, a, b, c, d, e);
  };
  var G__2157__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2121 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2121.cljs$core$IFn$_invoke$arity$6 ? fexpr__2121.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2121.call(null, a, b, c, d, e, f);
  };
  var G__2157__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2122 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2122.cljs$core$IFn$_invoke$arity$7 ? fexpr__2122.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2122.call(null, a, b, c, d, e, f, g);
  };
  var G__2157__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2123 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2123.cljs$core$IFn$_invoke$arity$8 ? fexpr__2123.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2123.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2157__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2124 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2124.cljs$core$IFn$_invoke$arity$9 ? fexpr__2124.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2124.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2157__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2125 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2125.cljs$core$IFn$_invoke$arity$10 ? fexpr__2125.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2125.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2157__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2126 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2126.cljs$core$IFn$_invoke$arity$11 ? fexpr__2126.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2126.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2157__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2127 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2127.cljs$core$IFn$_invoke$arity$12 ? fexpr__2127.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2127.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2157__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2128 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2128.cljs$core$IFn$_invoke$arity$13 ? fexpr__2128.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2128.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2157__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2129 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2129.cljs$core$IFn$_invoke$arity$14 ? fexpr__2129.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2129.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2157__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2130 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2130.cljs$core$IFn$_invoke$arity$15 ? fexpr__2130.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2130.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2157__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2131 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2131.cljs$core$IFn$_invoke$arity$16 ? fexpr__2131.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2131.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2157__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2132 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2132.cljs$core$IFn$_invoke$arity$17 ? fexpr__2132.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2132.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2157__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2133 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2133.cljs$core$IFn$_invoke$arity$18 ? fexpr__2133.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2133.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2157__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2134 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2134.cljs$core$IFn$_invoke$arity$19 ? fexpr__2134.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2134.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2157__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2135 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2135.cljs$core$IFn$_invoke$arity$20 ? fexpr__2135.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2135.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2157__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2157 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2157__1.call(this, self__);
      case 2:
        return G__2157__2.call(this, self__, a);
      case 3:
        return G__2157__3.call(this, self__, a, b);
      case 4:
        return G__2157__4.call(this, self__, a, b, c);
      case 5:
        return G__2157__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2157__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2157__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2157__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2157__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2157__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2157__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2157__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2157__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2157__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2157__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2157__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2157__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2157__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2157__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2157__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2157__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2157__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2157.cljs$core$IFn$_invoke$arity$1 = G__2157__1;
  G__2157.cljs$core$IFn$_invoke$arity$2 = G__2157__2;
  G__2157.cljs$core$IFn$_invoke$arity$3 = G__2157__3;
  G__2157.cljs$core$IFn$_invoke$arity$4 = G__2157__4;
  G__2157.cljs$core$IFn$_invoke$arity$5 = G__2157__5;
  G__2157.cljs$core$IFn$_invoke$arity$6 = G__2157__6;
  G__2157.cljs$core$IFn$_invoke$arity$7 = G__2157__7;
  G__2157.cljs$core$IFn$_invoke$arity$8 = G__2157__8;
  G__2157.cljs$core$IFn$_invoke$arity$9 = G__2157__9;
  G__2157.cljs$core$IFn$_invoke$arity$10 = G__2157__10;
  G__2157.cljs$core$IFn$_invoke$arity$11 = G__2157__11;
  G__2157.cljs$core$IFn$_invoke$arity$12 = G__2157__12;
  G__2157.cljs$core$IFn$_invoke$arity$13 = G__2157__13;
  G__2157.cljs$core$IFn$_invoke$arity$14 = G__2157__14;
  G__2157.cljs$core$IFn$_invoke$arity$15 = G__2157__15;
  G__2157.cljs$core$IFn$_invoke$arity$16 = G__2157__16;
  G__2157.cljs$core$IFn$_invoke$arity$17 = G__2157__17;
  G__2157.cljs$core$IFn$_invoke$arity$18 = G__2157__18;
  G__2157.cljs$core$IFn$_invoke$arity$19 = G__2157__19;
  G__2157.cljs$core$IFn$_invoke$arity$20 = G__2157__20;
  G__2157.cljs$core$IFn$_invoke$arity$21 = G__2157__21;
  G__2157.cljs$core$IFn$_invoke$arity$22 = G__2157__22;
  return G__2157;
}();
cljs.core.Var.prototype.apply = function(self__, args2114) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2114)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__2136 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2136.cljs$core$IFn$_invoke$arity$0 ? fexpr__2136.cljs$core$IFn$_invoke$arity$0() : fexpr__2136.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__2137 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2137.cljs$core$IFn$_invoke$arity$1 ? fexpr__2137.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2137.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__2138 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2138.cljs$core$IFn$_invoke$arity$2 ? fexpr__2138.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2138.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__2139 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2139.cljs$core$IFn$_invoke$arity$3 ? fexpr__2139.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2139.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__2140 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2140.cljs$core$IFn$_invoke$arity$4 ? fexpr__2140.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2140.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__2141 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2141.cljs$core$IFn$_invoke$arity$5 ? fexpr__2141.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2141.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__2142 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2142.cljs$core$IFn$_invoke$arity$6 ? fexpr__2142.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2142.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__2143 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2143.cljs$core$IFn$_invoke$arity$7 ? fexpr__2143.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2143.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__2144 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2144.cljs$core$IFn$_invoke$arity$8 ? fexpr__2144.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2144.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__2145 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2145.cljs$core$IFn$_invoke$arity$9 ? fexpr__2145.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2145.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__2146 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2146.cljs$core$IFn$_invoke$arity$10 ? fexpr__2146.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2146.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__2147 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2147.cljs$core$IFn$_invoke$arity$11 ? fexpr__2147.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2147.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__2148 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2148.cljs$core$IFn$_invoke$arity$12 ? fexpr__2148.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2148.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__2149 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2149.cljs$core$IFn$_invoke$arity$13 ? fexpr__2149.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2149.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__2150 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2150.cljs$core$IFn$_invoke$arity$14 ? fexpr__2150.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2150.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__2151 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2151.cljs$core$IFn$_invoke$arity$15 ? fexpr__2151.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2151.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__2152 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2152.cljs$core$IFn$_invoke$arity$16 ? fexpr__2152.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2152.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__2153 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2153.cljs$core$IFn$_invoke$arity$17 ? fexpr__2153.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2153.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__2154 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2154.cljs$core$IFn$_invoke$arity$18 ? fexpr__2154.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2154.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__2155 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2155.cljs$core$IFn$_invoke$arity$19 ? fexpr__2155.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2155.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__2156 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2156.cljs$core$IFn$_invoke$arity$20 ? fexpr__2156.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2156.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return cljs.core._seq(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return cljs.core._first(coll);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return cljs.core._rest(coll);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return cljs.core._next(coll);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__2168 = arguments.length;
  switch(G__2168) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2170 = arguments.length;
      var i__4731__auto___2171 = 0;
      while (true) {
        if (i__4731__auto___2171 < len__4730__auto___2170) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2171]);
          var G__2172 = i__4731__auto___2171 + 1;
          i__4731__auto___2171 = G__2172;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__2173 = y;
        var G__2174 = cljs.core.first(more);
        var G__2175 = cljs.core.next(more);
        x = G__2173;
        y = G__2174;
        more = G__2175;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq2165) {
  var G__2166 = cljs.core.first(seq2165);
  var seq2165__$1 = cljs.core.next(seq2165);
  var G__2167 = cljs.core.first(seq2165__$1);
  var seq2165__$2 = cljs.core.next(seq2165__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2166, G__2167, seq2165__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2176 = n + 1;
      var G__2177 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2178 = cljs.core.next(coll__$1);
      n = G__2176;
      hash_code = G__2177;
      coll__$1 = G__2178;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2179 = n + 1;
      var G__2180 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2181 = cljs.core.next(coll__$1);
      n = G__2179;
      hash_code = G__2180;
      coll__$1 = G__2181;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
var G__2182_2185 = cljs.core._count;
var G__2183_2186 = "null";
var G__2184_2187 = function(G__2182_2185, G__2183_2186) {
  return function(_) {
    return 0;
  };
}(G__2182_2185, G__2183_2186);
goog.object.set(G__2182_2185, G__2183_2186, G__2184_2187);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__2188 = this$__$1.valueOf();
    var G__2189 = other.valueOf();
    return goog.array.defaultCompare(G__2188, G__2189);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__4433__auto__ = inst == null ? null : inst;
    var m__4434__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4434__auto__.call(null, inst);
    } else {
      var m__4431__auto__ = cljs.core.inst_ms_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4431__auto__.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
var G__2191_2194 = cljs.core._equiv;
var G__2192_2195 = "number";
var G__2193_2196 = function(G__2191_2194, G__2192_2195) {
  return function(x, o) {
    return x === o;
  };
}(G__2191_2194, G__2192_2195);
goog.object.set(G__2191_2194, G__2192_2195, G__2193_2196);
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
var G__2197_2200 = cljs.core._meta;
var G__2198_2201 = "function";
var G__2199_2202 = function(G__2197_2200, G__2198_2201) {
  return function(_) {
    return null;
  };
}(G__2197_2200, G__2198_2201);
goog.object.set(G__2197_2200, G__2198_2201, G__2199_2202);
goog.object.set(cljs.core.IHash, "_", true);
var G__2203_2206 = cljs.core._hash;
var G__2204_2207 = "_";
var G__2205_2208 = function(G__2203_2206, G__2204_2207) {
  return function(o) {
    return goog.getUid(o);
  };
}(G__2203_2206, G__2204_2207);
goog.object.set(G__2203_2206, G__2204_2207, G__2205_2208);
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__2210 = arguments.length;
  switch(G__2210) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2211 = val;
          var G__2212 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2211, G__2212) : f.call(null, G__2211, G__2212);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2218 = nval;
          var G__2219 = n + 1;
          val = G__2218;
          n = G__2219;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2213 = val__$1;
        var G__2214 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2213, G__2214) : f.call(null, G__2213, G__2214);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2220 = nval;
        var G__2221 = n + 1;
        val__$1 = G__2220;
        n = G__2221;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2215 = val__$1;
        var G__2216 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2215, G__2216) : f.call(null, G__2215, G__2216);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2222 = nval;
        var G__2223 = n + 1;
        val__$1 = G__2222;
        n = G__2223;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__2225 = arguments.length;
  switch(G__2225) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2226 = val;
          var G__2227 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2226, G__2227) : f.call(null, G__2226, G__2227);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2233 = nval;
          var G__2234 = n + 1;
          val = G__2233;
          n = G__2234;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2228 = val__$1;
        var G__2229 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2228, G__2229) : f.call(null, G__2228, G__2229);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2235 = nval;
        var G__2236 = n + 1;
        val__$1 = G__2235;
        n = G__2236;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2230 = val__$1;
        var G__2231 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2230, G__2231) : f.call(null, G__2230, G__2231);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2237 = nval;
        var G__2238 = n + 1;
        val__$1 = G__2237;
        n = G__2238;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__2242 = arguments.length;
  switch(G__2242) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4219__auto__ = 0;
      var y__4220__auto__ = start + len;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2244 = idx + 1;
          idx = G__2244;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__2246 = arguments.length;
  switch(G__2246) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4222__auto__ = len - 1;
      var y__4223__auto__ = start;
      return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2248 = idx - 1;
          idx = G__2248;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__2249 = null;
  var G__2249__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2249__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2249 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2249__1.call(this, x);
      case 2:
        return G__2249__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2249.cljs$core$IFn$_invoke$arity$1 = G__2249__1;
  G__2249.cljs$core$IFn$_invoke$arity$2 = G__2249__2;
  return G__2249;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__2250 = null;
  var G__2250__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2250__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2250 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2250__1.call(this, x);
      case 2:
        return G__2250__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2250.cljs$core$IFn$_invoke$arity$1 = G__2250__1;
  G__2250.cljs$core$IFn$_invoke$arity$2 = G__2250__2;
  return G__2250;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4219__auto__ = 0;
  var y__4220__auto__ = self__.arr.length - self__.i;
  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
var G__2251_2254 = cljs.core.IndexedSeq.prototype;
var G__2252_2255 = cljs.core.ITER_SYMBOL;
var G__2253_2256 = function(G__2251_2254, G__2252_2255) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2251_2254, G__2252_2255);
goog.object.set(G__2251_2254, G__2252_2255, G__2253_2256);
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__2258 = arguments.length;
  switch(G__2258) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__2261 = arguments.length;
  switch(G__2261) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__2263 = null;
  var G__2263__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2263__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2263 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2263__1.call(this, x);
      case 2:
        return G__2263__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2263.cljs$core$IFn$_invoke$arity$1 = G__2263__1;
  G__2263.cljs$core$IFn$_invoke$arity$2 = G__2263__2;
  return G__2263;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__2264 = null;
  var G__2264__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2264__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2264 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2264__1.call(this, x);
      case 2:
        return G__2264__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2264.cljs$core$IFn$_invoke$arity$1 = G__2264__1;
  G__2264.cljs$core$IFn$_invoke$arity$2 = G__2264__2;
  return G__2264;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
var G__2265_2268 = cljs.core.RSeq.prototype;
var G__2266_2269 = cljs.core.ITER_SYMBOL;
var G__2267_2270 = function(G__2265_2268, G__2266_2269) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2265_2268, G__2266_2269);
goog.object.set(G__2265_2268, G__2266_2269, G__2267_2270);
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__2271 = sn;
      s = G__2271;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
var G__2272_2275 = cljs.core._equiv;
var G__2273_2276 = "_";
var G__2274_2277 = function(G__2272_2275, G__2273_2276) {
  return function(x, o) {
    return x === o;
  };
}(G__2272_2275, G__2273_2276);
goog.object.set(G__2272_2275, G__2273_2276, G__2274_2277);
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__2282 = arguments.length;
  switch(G__2282) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2284 = arguments.length;
      var i__4731__auto___2285 = 0;
      while (true) {
        if (i__4731__auto___2285 < len__4730__auto___2284) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2285]);
          var G__2286 = i__4731__auto___2285 + 1;
          i__4731__auto___2285 = G__2286;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__2287 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__2288 = cljs.core.first(xs);
      var G__2289 = cljs.core.next(xs);
      coll = G__2287;
      x = G__2288;
      xs = G__2289;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq2279) {
  var G__2280 = cljs.core.first(seq2279);
  var seq2279__$1 = cljs.core.next(seq2279);
  var G__2281 = cljs.core.first(seq2279__$1);
  var seq2279__$2 = cljs.core.next(seq2279__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2280, G__2281, seq2279__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return cljs.core._empty(coll);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__2292 = cljs.core.next(s);
      var G__2293 = acc + 1;
      s = G__2292;
      acc = G__2293;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return cljs.core._count(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__2297 = arguments.length;
  switch(G__2297) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2299 = cljs.core.next(coll);
            var G__2300 = n - 1;
            coll = G__2299;
            n = G__2300;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2301 = cljs.core.next(coll);
            var G__2302 = n - 1;
            var G__2303 = not_found;
            coll = G__2301;
            n = G__2302;
            not_found = G__2303;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__2305 = arguments.length;
  switch(G__2305) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4131__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4131__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5718__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5718__auto__) {
      var xs__$1 = temp__5718__auto__;
      var G__2315 = n__$1 - 1;
      var G__2316 = cljs.core.rest(xs__$1);
      n__$1 = G__2315;
      xs = G__2316;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__2318 = arguments.length;
  switch(G__2318) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__2327 = arguments.length;
  switch(G__2327) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2329 = arguments.length;
      var i__4731__auto___2330 = 0;
      while (true) {
        if (i__4731__auto___2330 < len__4730__auto___2329) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2330]);
          var G__2331 = i__4731__auto___2330 + 1;
          i__4731__auto___2330 = G__2331;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__2332 = ret;
      var G__2333 = cljs.core.first(kvs);
      var G__2334 = cljs.core.second(kvs);
      var G__2335 = cljs.core.nnext(kvs);
      coll = G__2332;
      k = G__2333;
      v = G__2334;
      kvs = G__2335;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq2323) {
  var G__2324 = cljs.core.first(seq2323);
  var seq2323__$1 = cljs.core.next(seq2323);
  var G__2325 = cljs.core.first(seq2323__$1);
  var seq2323__$2 = cljs.core.next(seq2323__$1);
  var G__2326 = cljs.core.first(seq2323__$2);
  var seq2323__$3 = cljs.core.next(seq2323__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2324, G__2325, G__2326, seq2323__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__2340 = arguments.length;
  switch(G__2340) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2342 = arguments.length;
      var i__4731__auto___2343 = 0;
      while (true) {
        if (i__4731__auto___2343 < len__4730__auto___2342) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2343]);
          var G__2344 = i__4731__auto___2343 + 1;
          i__4731__auto___2343 = G__2344;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2345 = ret;
        var G__2346 = cljs.core.first(ks);
        var G__2347 = cljs.core.next(ks);
        coll = G__2345;
        k = G__2346;
        ks = G__2347;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq2337) {
  var G__2338 = cljs.core.first(seq2337);
  var seq2337__$1 = cljs.core.next(seq2337);
  var G__2339 = cljs.core.first(seq2337__$1);
  var seq2337__$2 = cljs.core.next(seq2337__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2338, G__2339, seq2337__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4131__auto__ = goog.isFunction(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__2351 = null;
  var G__2351__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__2351__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__2351__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__2351__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__2351__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__2351__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__2351__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__2351__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__2351__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2351__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2351__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2351__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2351__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2351__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2351__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2351__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2351__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2351__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2351__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2351__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2351__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2351__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2351 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2351__1.call(this, self__);
      case 2:
        return G__2351__2.call(this, self__, a);
      case 3:
        return G__2351__3.call(this, self__, a, b);
      case 4:
        return G__2351__4.call(this, self__, a, b, c);
      case 5:
        return G__2351__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2351__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2351__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2351__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2351__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2351__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2351__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2351__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2351__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2351__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2351__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2351__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2351__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2351__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2351__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2351__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2351__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2351__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2351.cljs$core$IFn$_invoke$arity$1 = G__2351__1;
  G__2351.cljs$core$IFn$_invoke$arity$2 = G__2351__2;
  G__2351.cljs$core$IFn$_invoke$arity$3 = G__2351__3;
  G__2351.cljs$core$IFn$_invoke$arity$4 = G__2351__4;
  G__2351.cljs$core$IFn$_invoke$arity$5 = G__2351__5;
  G__2351.cljs$core$IFn$_invoke$arity$6 = G__2351__6;
  G__2351.cljs$core$IFn$_invoke$arity$7 = G__2351__7;
  G__2351.cljs$core$IFn$_invoke$arity$8 = G__2351__8;
  G__2351.cljs$core$IFn$_invoke$arity$9 = G__2351__9;
  G__2351.cljs$core$IFn$_invoke$arity$10 = G__2351__10;
  G__2351.cljs$core$IFn$_invoke$arity$11 = G__2351__11;
  G__2351.cljs$core$IFn$_invoke$arity$12 = G__2351__12;
  G__2351.cljs$core$IFn$_invoke$arity$13 = G__2351__13;
  G__2351.cljs$core$IFn$_invoke$arity$14 = G__2351__14;
  G__2351.cljs$core$IFn$_invoke$arity$15 = G__2351__15;
  G__2351.cljs$core$IFn$_invoke$arity$16 = G__2351__16;
  G__2351.cljs$core$IFn$_invoke$arity$17 = G__2351__17;
  G__2351.cljs$core$IFn$_invoke$arity$18 = G__2351__18;
  G__2351.cljs$core$IFn$_invoke$arity$19 = G__2351__19;
  G__2351.cljs$core$IFn$_invoke$arity$20 = G__2351__20;
  G__2351.cljs$core$IFn$_invoke$arity$21 = G__2351__21;
  G__2351.cljs$core$IFn$_invoke$arity$22 = G__2351__22;
  return G__2351;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args2350) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2350)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4120__auto__ = !(o == null);
    if (and__4120__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4120__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__2358 = arguments.length;
  switch(G__2358) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2360 = arguments.length;
      var i__4731__auto___2361 = 0;
      while (true) {
        if (i__4731__auto___2361 < len__4730__auto___2360) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2361]);
          var G__2362 = i__4731__auto___2361 + 1;
          i__4731__auto___2361 = G__2362;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2363 = ret;
        var G__2364 = cljs.core.first(ks);
        var G__2365 = cljs.core.next(ks);
        coll = G__2363;
        k = G__2364;
        ks = G__2365;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq2355) {
  var G__2356 = cljs.core.first(seq2355);
  var seq2355__$1 = cljs.core.next(seq2355);
  var G__2357 = cljs.core.first(seq2355__$1);
  var seq2355__$2 = cljs.core.next(seq2355__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2356, G__2357, seq2355__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__2379 = arguments.length;
  switch(G__2379) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2383 = arguments.length;
      var i__4731__auto___2384 = 0;
      while (true) {
        if (i__4731__auto___2384 < len__4730__auto___2383) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2384]);
          var G__2385 = i__4731__auto___2384 + 1;
          i__4731__auto___2384 = G__2385;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4752__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq2378) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2378));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2386 = i__$1 + 1;
      var G__2387 = j__$1 + 1;
      var G__2388 = len__$1 - 1;
      i__$1 = G__2386;
      j__$1 = G__2387;
      len__$1 = G__2388;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2389 = i__$1 - 1;
      var G__2390 = j__$1 - 1;
      var G__2391 = len__$1 - 1;
      i__$1 = G__2389;
      j__$1 = G__2390;
      len__$1 = G__2391;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4131__auto__ = s == null;
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4131__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__2404 = arguments.length;
  switch(G__2404) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2406 = arguments.length;
      var i__4731__auto___2407 = 0;
      while (true) {
        if (i__4731__auto___2407 < len__4730__auto___2406) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2407]);
          var G__2408 = i__4731__auto___2407 + 1;
          i__4731__auto___2407 = G__2408;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__2409 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__2410 = etc;
          s = G__2409;
          xs = G__2410;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq2401) {
  var G__2402 = cljs.core.first(seq2401);
  var seq2401__$1 = cljs.core.next(seq2401);
  var G__2403 = cljs.core.first(seq2401__$1);
  var seq2401__$2 = cljs.core.next(seq2401__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2402, G__2403, seq2401__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__2413 = arguments.length;
  switch(G__2413) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__2415 = xs;
      var G__2416 = ys;
      var G__2417 = len;
      var G__2418 = n + 1;
      xs = G__2415;
      ys = G__2416;
      len = G__2417;
      n = G__2418;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__2420 = arguments.length;
  switch(G__2420) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    var G__2421_2424 = a;
    var G__2422_2425 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__2421_2424, G__2422_2425);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__2427 = arguments.length;
  switch(G__2427) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__2429 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__2430 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__2428 = cljs.core.fn__GT_comparator(comp);
    return fexpr__2428.cljs$core$IFn$_invoke$arity$2 ? fexpr__2428.cljs$core$IFn$_invoke$arity$2(G__2429, G__2430) : fexpr__2428.call(null, G__2429, G__2430);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__2433 = arguments.length;
  switch(G__2433) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var s = temp__5718__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__2434 = val__$1;
        var G__2435 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2434, G__2435) : f.call(null, G__2434, G__2435);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2437 = nval;
        var G__2438 = cljs.core.next(coll__$1);
        val__$1 = G__2437;
        coll__$1 = G__2438;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__2440 = arguments.length;
  switch(G__2440) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__2441 = acc;
          var G__2442 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2441, G__2442) : f.call(null, G__2441, G__2442);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__2446 = nacc;
          acc = G__2446;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__2443 = acc;
        var G__2444 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2443, G__2444) : f.call(null, G__2443, G__2444);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__2447 = nacc;
        acc = G__2447;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__2449 = arguments.length;
  switch(G__2449) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__2454 = arguments.length;
  switch(G__2454) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__2456 = null;
    var G__2456__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__2456__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__2456__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__2456 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__2456__0.call(this);
        case 1:
          return G__2456__1.call(this, x);
        case 2:
          return G__2456__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2456.cljs$core$IFn$_invoke$arity$0 = G__2456__0;
    G__2456.cljs$core$IFn$_invoke$arity$1 = G__2456__1;
    G__2456.cljs$core$IFn$_invoke$arity$2 = G__2456__2;
    return G__2456;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__2458 = arguments.length;
  switch(G__2458) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__2464 = arguments.length;
  switch(G__2464) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2466 = arguments.length;
      var i__4731__auto___2467 = 0;
      while (true) {
        if (i__4731__auto___2467 < len__4730__auto___2466) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2467]);
          var G__2468 = i__4731__auto___2467 + 1;
          i__4731__auto___2467 = G__2468;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq2461) {
  var G__2462 = cljs.core.first(seq2461);
  var seq2461__$1 = cljs.core.next(seq2461);
  var G__2463 = cljs.core.first(seq2461__$1);
  var seq2461__$2 = cljs.core.next(seq2461__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2462, G__2463, seq2461__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__2473 = arguments.length;
  switch(G__2473) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2475 = arguments.length;
      var i__4731__auto___2476 = 0;
      while (true) {
        if (i__4731__auto___2476 < len__4730__auto___2475) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2476]);
          var G__2477 = i__4731__auto___2476 + 1;
          i__4731__auto___2476 = G__2477;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq2470) {
  var G__2471 = cljs.core.first(seq2470);
  var seq2470__$1 = cljs.core.next(seq2470);
  var G__2472 = cljs.core.first(seq2470__$1);
  var seq2470__$2 = cljs.core.next(seq2470__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2471, G__2472, seq2470__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__2482 = arguments.length;
  switch(G__2482) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2484 = arguments.length;
      var i__4731__auto___2485 = 0;
      while (true) {
        if (i__4731__auto___2485 < len__4730__auto___2484) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2485]);
          var G__2486 = i__4731__auto___2485 + 1;
          i__4731__auto___2485 = G__2486;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq2479) {
  var G__2480 = cljs.core.first(seq2479);
  var seq2479__$1 = cljs.core.next(seq2479);
  var G__2481 = cljs.core.first(seq2479__$1);
  var seq2479__$2 = cljs.core.next(seq2479__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2480, G__2481, seq2479__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__2491 = arguments.length;
  switch(G__2491) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2493 = arguments.length;
      var i__4731__auto___2494 = 0;
      while (true) {
        if (i__4731__auto___2494 < len__4730__auto___2493) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2494]);
          var G__2495 = i__4731__auto___2494 + 1;
          i__4731__auto___2494 = G__2495;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq2488) {
  var G__2489 = cljs.core.first(seq2488);
  var seq2488__$1 = cljs.core.next(seq2488);
  var G__2490 = cljs.core.first(seq2488__$1);
  var seq2488__$2 = cljs.core.next(seq2488__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2489, G__2490, seq2488__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__2500 = arguments.length;
  switch(G__2500) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2502 = arguments.length;
      var i__4731__auto___2503 = 0;
      while (true) {
        if (i__4731__auto___2503 < len__4730__auto___2502) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2503]);
          var G__2504 = i__4731__auto___2503 + 1;
          i__4731__auto___2503 = G__2504;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__2505 = y;
        var G__2506 = cljs.core.first(more);
        var G__2507 = cljs.core.next(more);
        x = G__2505;
        y = G__2506;
        more = G__2507;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq2497) {
  var G__2498 = cljs.core.first(seq2497);
  var seq2497__$1 = cljs.core.next(seq2497);
  var G__2499 = cljs.core.first(seq2497__$1);
  var seq2497__$2 = cljs.core.next(seq2497__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2498, G__2499, seq2497__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__2512 = arguments.length;
  switch(G__2512) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2514 = arguments.length;
      var i__4731__auto___2515 = 0;
      while (true) {
        if (i__4731__auto___2515 < len__4730__auto___2514) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2515]);
          var G__2516 = i__4731__auto___2515 + 1;
          i__4731__auto___2515 = G__2516;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__2517 = y;
        var G__2518 = cljs.core.first(more);
        var G__2519 = cljs.core.next(more);
        x = G__2517;
        y = G__2518;
        more = G__2519;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq2509) {
  var G__2510 = cljs.core.first(seq2509);
  var seq2509__$1 = cljs.core.next(seq2509);
  var G__2511 = cljs.core.first(seq2509__$1);
  var seq2509__$2 = cljs.core.next(seq2509__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2510, G__2511, seq2509__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__2524 = arguments.length;
  switch(G__2524) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2526 = arguments.length;
      var i__4731__auto___2527 = 0;
      while (true) {
        if (i__4731__auto___2527 < len__4730__auto___2526) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2527]);
          var G__2528 = i__4731__auto___2527 + 1;
          i__4731__auto___2527 = G__2528;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__2529 = y;
        var G__2530 = cljs.core.first(more);
        var G__2531 = cljs.core.next(more);
        x = G__2529;
        y = G__2530;
        more = G__2531;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq2521) {
  var G__2522 = cljs.core.first(seq2521);
  var seq2521__$1 = cljs.core.next(seq2521);
  var G__2523 = cljs.core.first(seq2521__$1);
  var seq2521__$2 = cljs.core.next(seq2521__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2522, G__2523, seq2521__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__2536 = arguments.length;
  switch(G__2536) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2538 = arguments.length;
      var i__4731__auto___2539 = 0;
      while (true) {
        if (i__4731__auto___2539 < len__4730__auto___2538) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2539]);
          var G__2540 = i__4731__auto___2539 + 1;
          i__4731__auto___2539 = G__2540;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__2541 = y;
        var G__2542 = cljs.core.first(more);
        var G__2543 = cljs.core.next(more);
        x = G__2541;
        y = G__2542;
        more = G__2543;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq2533) {
  var G__2534 = cljs.core.first(seq2533);
  var seq2533__$1 = cljs.core.next(seq2533);
  var G__2535 = cljs.core.first(seq2533__$1);
  var seq2533__$2 = cljs.core.next(seq2533__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2534, G__2535, seq2533__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__2548 = arguments.length;
  switch(G__2548) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2550 = arguments.length;
      var i__4731__auto___2551 = 0;
      while (true) {
        if (i__4731__auto___2551 < len__4730__auto___2550) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2551]);
          var G__2552 = i__4731__auto___2551 + 1;
          i__4731__auto___2551 = G__2552;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4219__auto__ = x;
  var y__4220__auto__ = y;
  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4219__auto__ = x;
    var y__4220__auto__ = y;
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq2545) {
  var G__2546 = cljs.core.first(seq2545);
  var seq2545__$1 = cljs.core.next(seq2545);
  var G__2547 = cljs.core.first(seq2545__$1);
  var seq2545__$2 = cljs.core.next(seq2545__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2546, G__2547, seq2545__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__2557 = arguments.length;
  switch(G__2557) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2559 = arguments.length;
      var i__4731__auto___2560 = 0;
      while (true) {
        if (i__4731__auto___2560 < len__4730__auto___2559) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2560]);
          var G__2561 = i__4731__auto___2560 + 1;
          i__4731__auto___2560 = G__2561;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4222__auto__ = x;
  var y__4223__auto__ = y;
  return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4222__auto__ = x;
    var y__4223__auto__ = y;
    return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq2554) {
  var G__2555 = cljs.core.first(seq2554);
  var seq2554__$1 = cljs.core.next(seq2554);
  var G__2556 = cljs.core.first(seq2554__$1);
  var seq2554__$2 = cljs.core.next(seq2554__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2555, G__2556, seq2554__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__2566 = arguments.length;
  switch(G__2566) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2568 = arguments.length;
      var i__4731__auto___2569 = 0;
      while (true) {
        if (i__4731__auto___2569 < len__4730__auto___2568) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2569]);
          var G__2570 = i__4731__auto___2569 + 1;
          i__4731__auto___2569 = G__2570;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq2563) {
  var G__2564 = cljs.core.first(seq2563);
  var seq2563__$1 = cljs.core.next(seq2563);
  var G__2565 = cljs.core.first(seq2563__$1);
  var seq2563__$2 = cljs.core.next(seq2563__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2564, G__2565, seq2563__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__2575 = arguments.length;
  switch(G__2575) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2577 = arguments.length;
      var i__4731__auto___2578 = 0;
      while (true) {
        if (i__4731__auto___2578 < len__4730__auto___2577) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2578]);
          var G__2579 = i__4731__auto___2578 + 1;
          i__4731__auto___2578 = G__2579;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq2572) {
  var G__2573 = cljs.core.first(seq2572);
  var seq2572__$1 = cljs.core.next(seq2572);
  var G__2574 = cljs.core.first(seq2572__$1);
  var seq2572__$2 = cljs.core.next(seq2572__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2573, G__2574, seq2572__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__2584 = arguments.length;
  switch(G__2584) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2586 = arguments.length;
      var i__4731__auto___2587 = 0;
      while (true) {
        if (i__4731__auto___2587 < len__4730__auto___2586) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2587]);
          var G__2588 = i__4731__auto___2587 + 1;
          i__4731__auto___2587 = G__2588;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq2581) {
  var G__2582 = cljs.core.first(seq2581);
  var seq2581__$1 = cljs.core.next(seq2581);
  var G__2583 = cljs.core.first(seq2581__$1);
  var seq2581__$2 = cljs.core.next(seq2581__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2582, G__2583, seq2581__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__2593 = arguments.length;
  switch(G__2593) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2595 = arguments.length;
      var i__4731__auto___2596 = 0;
      while (true) {
        if (i__4731__auto___2596 < len__4730__auto___2595) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2596]);
          var G__2597 = i__4731__auto___2596 + 1;
          i__4731__auto___2596 = G__2597;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq2590) {
  var G__2591 = cljs.core.first(seq2590);
  var seq2590__$1 = cljs.core.next(seq2590);
  var G__2592 = cljs.core.first(seq2590__$1);
  var seq2590__$2 = cljs.core.next(seq2590__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2591, G__2592, seq2590__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__2602 = arguments.length;
  switch(G__2602) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2604 = arguments.length;
      var i__4731__auto___2605 = 0;
      while (true) {
        if (i__4731__auto___2605 < len__4730__auto___2604) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2605]);
          var G__2606 = i__4731__auto___2605 + 1;
          i__4731__auto___2605 = G__2606;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq2599) {
  var G__2600 = cljs.core.first(seq2599);
  var seq2599__$1 = cljs.core.next(seq2599);
  var G__2601 = cljs.core.first(seq2599__$1);
  var seq2599__$2 = cljs.core.next(seq2599__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2600, G__2601, seq2599__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__2611 = arguments.length;
  switch(G__2611) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2613 = arguments.length;
      var i__4731__auto___2614 = 0;
      while (true) {
        if (i__4731__auto___2614 < len__4730__auto___2613) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2614]);
          var G__2615 = i__4731__auto___2614 + 1;
          i__4731__auto___2614 = G__2615;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq2608) {
  var G__2609 = cljs.core.first(seq2608);
  var seq2608__$1 = cljs.core.next(seq2608);
  var G__2610 = cljs.core.first(seq2608__$1);
  var seq2608__$2 = cljs.core.next(seq2608__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2609, G__2610, seq2608__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__2620 = arguments.length;
  switch(G__2620) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2622 = arguments.length;
      var i__4731__auto___2623 = 0;
      while (true) {
        if (i__4731__auto___2623 < len__4730__auto___2622) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2623]);
          var G__2624 = i__4731__auto___2623 + 1;
          i__4731__auto___2623 = G__2624;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq2617) {
  var G__2618 = cljs.core.first(seq2617);
  var seq2617__$1 = cljs.core.next(seq2617);
  var G__2619 = cljs.core.first(seq2617__$1);
  var seq2617__$2 = cljs.core.next(seq2617__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2618, G__2619, seq2617__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__2629 = arguments.length;
  switch(G__2629) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2631 = arguments.length;
      var i__4731__auto___2632 = 0;
      while (true) {
        if (i__4731__auto___2632 < len__4730__auto___2631) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2632]);
          var G__2633 = i__4731__auto___2632 + 1;
          i__4731__auto___2632 = G__2633;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq2626) {
  var G__2627 = cljs.core.first(seq2626);
  var seq2626__$1 = cljs.core.next(seq2626);
  var G__2628 = cljs.core.first(seq2626__$1);
  var seq2626__$2 = cljs.core.next(seq2626__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2627, G__2628, seq2626__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__2638 = arguments.length;
  switch(G__2638) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2640 = arguments.length;
      var i__4731__auto___2641 = 0;
      while (true) {
        if (i__4731__auto___2641 < len__4730__auto___2640) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2641]);
          var G__2642 = i__4731__auto___2641 + 1;
          i__4731__auto___2641 = G__2642;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq2635) {
  var G__2636 = cljs.core.first(seq2635);
  var seq2635__$1 = cljs.core.next(seq2635);
  var G__2637 = cljs.core.first(seq2635__$1);
  var seq2635__$2 = cljs.core.next(seq2635__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2636, G__2637, seq2635__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__2647 = arguments.length;
  switch(G__2647) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2649 = arguments.length;
      var i__4731__auto___2650 = 0;
      while (true) {
        if (i__4731__auto___2650 < len__4730__auto___2649) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2650]);
          var G__2651 = i__4731__auto___2650 + 1;
          i__4731__auto___2650 = G__2651;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq2644) {
  var G__2645 = cljs.core.first(seq2644);
  var seq2644__$1 = cljs.core.next(seq2644);
  var G__2646 = cljs.core.first(seq2644__$1);
  var seq2644__$2 = cljs.core.next(seq2644__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2645, G__2646, seq2644__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__2656 = arguments.length;
  switch(G__2656) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2658 = arguments.length;
      var i__4731__auto___2659 = 0;
      while (true) {
        if (i__4731__auto___2659 < len__4730__auto___2658) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2659]);
          var G__2660 = i__4731__auto___2659 + 1;
          i__4731__auto___2659 = G__2660;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq2653) {
  var G__2654 = cljs.core.first(seq2653);
  var seq2653__$1 = cljs.core.next(seq2653);
  var G__2655 = cljs.core.first(seq2653__$1);
  var seq2653__$2 = cljs.core.next(seq2653__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2654, G__2655, seq2653__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__2665 = arguments.length;
  switch(G__2665) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2667 = arguments.length;
      var i__4731__auto___2668 = 0;
      while (true) {
        if (i__4731__auto___2668 < len__4730__auto___2667) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2668]);
          var G__2669 = i__4731__auto___2668 + 1;
          i__4731__auto___2668 = G__2669;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__2670 = y;
        var G__2671 = cljs.core.first(more);
        var G__2672 = cljs.core.next(more);
        x = G__2670;
        y = G__2671;
        more = G__2672;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq2662) {
  var G__2663 = cljs.core.first(seq2662);
  var seq2662__$1 = cljs.core.next(seq2662);
  var G__2664 = cljs.core.first(seq2662__$1);
  var seq2662__$2 = cljs.core.next(seq2662__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2663, G__2664, seq2662__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__2673 = n__$1 - 1;
      var G__2674 = cljs.core.next(xs);
      n__$1 = G__2673;
      xs = G__2674;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__2678 = arguments.length;
  switch(G__2678) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2680 = arguments.length;
      var i__4731__auto___2681 = 0;
      while (true) {
        if (i__4731__auto___2681 < len__4730__auto___2680) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2681]);
          var G__2682 = i__4731__auto___2681 + 1;
          i__4731__auto___2681 = G__2682;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__2683 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__2684 = cljs.core.next(more);
      sb = G__2683;
      more = G__2684;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq2676) {
  var G__2677 = cljs.core.first(seq2676);
  var seq2676__$1 = cljs.core.next(seq2676);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2677, seq2676__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__2686 = arguments.length;
  switch(G__2686) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__2688 = cljs.core.next(xs);
            var G__2689 = cljs.core.next(ys);
            xs = G__2688;
            ys = G__2689;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__2690 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__2691 = cljs.core.next(s);
        res = G__2690;
        s = G__2691;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__2692 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__2693 = cljs.core.next(s);
      h = G__2692;
      s = G__2693;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__2694 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__2695 = cljs.core.next(s__$1);
      h = G__2694;
      s__$1 = G__2695;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__2696_2712 = cljs.core.seq(fn_map);
  var chunk__2697_2713 = null;
  var count__2698_2714 = 0;
  var i__2699_2715 = 0;
  while (true) {
    if (i__2699_2715 < count__2698_2714) {
      var vec__2706_2716 = chunk__2697_2713.cljs$core$IIndexed$_nth$arity$2(null, i__2699_2715);
      var key_name_2717 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2706_2716, 0, null);
      var f_2718 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2706_2716, 1, null);
      var str_name_2719 = cljs.core.name(key_name_2717);
      goog.object.set(obj, str_name_2719, f_2718);
      var G__2720 = seq__2696_2712;
      var G__2721 = chunk__2697_2713;
      var G__2722 = count__2698_2714;
      var G__2723 = i__2699_2715 + 1;
      seq__2696_2712 = G__2720;
      chunk__2697_2713 = G__2721;
      count__2698_2714 = G__2722;
      i__2699_2715 = G__2723;
      continue;
    } else {
      var temp__5720__auto___2724 = cljs.core.seq(seq__2696_2712);
      if (temp__5720__auto___2724) {
        var seq__2696_2725__$1 = temp__5720__auto___2724;
        if (cljs.core.chunked_seq_QMARK_(seq__2696_2725__$1)) {
          var c__4550__auto___2726 = cljs.core.chunk_first(seq__2696_2725__$1);
          var G__2727 = cljs.core.chunk_rest(seq__2696_2725__$1);
          var G__2728 = c__4550__auto___2726;
          var G__2729 = cljs.core.count(c__4550__auto___2726);
          var G__2730 = 0;
          seq__2696_2712 = G__2727;
          chunk__2697_2713 = G__2728;
          count__2698_2714 = G__2729;
          i__2699_2715 = G__2730;
          continue;
        } else {
          var vec__2709_2731 = cljs.core.first(seq__2696_2725__$1);
          var key_name_2732 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2709_2731, 0, null);
          var f_2733 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2709_2731, 1, null);
          var str_name_2734 = cljs.core.name(key_name_2732);
          goog.object.set(obj, str_name_2734, f_2733);
          var G__2735 = cljs.core.next(seq__2696_2725__$1);
          var G__2736 = null;
          var G__2737 = 0;
          var G__2738 = 0;
          seq__2696_2712 = G__2735;
          chunk__2697_2713 = G__2736;
          count__2698_2714 = G__2737;
          i__2699_2715 = G__2738;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__2739 = null;
  var G__2739__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2739__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2739 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2739__1.call(this, x);
      case 2:
        return G__2739__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2739.cljs$core$IFn$_invoke$arity$1 = G__2739__1;
  G__2739.cljs$core$IFn$_invoke$arity$2 = G__2739__2;
  return G__2739;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__2740 = null;
  var G__2740__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__2740__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2740 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2740__1.call(this, x);
      case 2:
        return G__2740__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2740.cljs$core$IFn$_invoke$arity$1 = G__2740__1;
  G__2740.cljs$core$IFn$_invoke$arity$2 = G__2740__2;
  return G__2740;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
var G__2742_2745 = cljs.core.List.prototype;
var G__2743_2746 = cljs.core.ITER_SYMBOL;
var G__2744_2747 = function(G__2742_2745, G__2743_2746) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2742_2745, G__2743_2746);
goog.object.set(G__2742_2745, G__2743_2746, G__2744_2747);
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__2748 = null;
  var G__2748__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2748__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2748 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2748__1.call(this, x);
      case 2:
        return G__2748__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2748.cljs$core$IFn$_invoke$arity$1 = G__2748__1;
  G__2748.cljs$core$IFn$_invoke$arity$2 = G__2748__2;
  return G__2748;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__2749 = null;
  var G__2749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2749__1.call(this, x);
      case 2:
        return G__2749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2749.cljs$core$IFn$_invoke$arity$1 = G__2749__1;
  G__2749.cljs$core$IFn$_invoke$arity$2 = G__2749__2;
  return G__2749;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__2750_2753 = cljs.core.EmptyList.prototype;
var G__2751_2754 = cljs.core.ITER_SYMBOL;
var G__2752_2755 = function(G__2750_2753, G__2751_2754) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2750_2753, G__2751_2754);
goog.object.set(G__2750_2753, G__2751_2754, G__2752_2755);
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4131__auto__ = cljs.core.rseq(coll);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2758 = arguments.length;
  var i__4731__auto___2759 = 0;
  while (true) {
    if (i__4731__auto___2759 < len__4730__auto___2758) {
      args__4736__auto__.push(arguments[i__4731__auto___2759]);
      var G__2760 = i__4731__auto___2759 + 1;
      i__4731__auto___2759 = G__2760;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__2761 = cljs.core._next(xs__$1);
        xs__$1 = G__2761;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__2762 = i - 1;
      var G__2763 = cljs.core._conj(r, arr[i - 1]);
      i = G__2762;
      r = G__2763;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq2757) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2757));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__2764 = null;
  var G__2764__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2764__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2764 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2764__1.call(this, x);
      case 2:
        return G__2764__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2764.cljs$core$IFn$_invoke$arity$1 = G__2764__1;
  G__2764.cljs$core$IFn$_invoke$arity$2 = G__2764__2;
  return G__2764;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__2765 = null;
  var G__2765__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2765__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2765 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2765__1.call(this, x);
      case 2:
        return G__2765__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2765.cljs$core$IFn$_invoke$arity$1 = G__2765__1;
  G__2765.cljs$core$IFn$_invoke$arity$2 = G__2765__2;
  return G__2765;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
var G__2766_2769 = cljs.core.Cons.prototype;
var G__2767_2770 = cljs.core.ITER_SYMBOL;
var G__2768_2771 = function(G__2766_2769, G__2767_2770) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2766_2769, G__2767_2770);
goog.object.set(G__2766_2769, G__2767_2770, G__2768_2771);
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = cljs.core.not(a.ns);
      if (and__4120__auto__) {
        return b.ns;
      } else {
        return and__4120__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2773 = a.ns;
            var G__2774 = b.ns;
            return goog.array.defaultCompare(G__2773, G__2774);
          }();
          if (0 === nsc) {
            var G__2775 = a.name;
            var G__2776 = b.name;
            return goog.array.defaultCompare(G__2775, G__2776);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2777 = a.name;
        var G__2778 = b.name;
        return goog.array.defaultCompare(G__2777, G__2778);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__2780 = null;
  var G__2780__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__2780__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__2780 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2780__2.call(this, self__, coll);
      case 3:
        return G__2780__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2780.cljs$core$IFn$_invoke$arity$2 = G__2780__2;
  G__2780.cljs$core$IFn$_invoke$arity$3 = G__2780__3;
  return G__2780;
}();
cljs.core.Keyword.prototype.apply = function(self__, args2779) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2779)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4243__auto__ = self__._hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return cljs.core._namespace(x);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = cljs.core.ident_QMARK_(x);
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = x instanceof cljs.core.Symbol;
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = x instanceof cljs.core.Keyword;
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__2783 = arguments.length;
  switch(G__2783) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__2785 = null;
  var G__2785__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2785__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2785 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2785__1.call(this, x);
      case 2:
        return G__2785__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2785.cljs$core$IFn$_invoke$arity$1 = G__2785__1;
  G__2785.cljs$core$IFn$_invoke$arity$2 = G__2785__2;
  return G__2785;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__2786 = null;
  var G__2786__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2786__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2786 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2786__1.call(this, x);
      case 2:
        return G__2786__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2786.cljs$core$IFn$_invoke$arity$1 = G__2786__1;
  G__2786.cljs$core$IFn$_invoke$arity$2 = G__2786__2;
  return G__2786;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__2787 = ls.sval();
        ls = G__2787;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function(coll__$1) {
      return function() {
        return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
      };
    }(coll__$1), null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
var G__2788_2791 = cljs.core.LazySeq.prototype;
var G__2789_2792 = cljs.core.ITER_SYMBOL;
var G__2790_2793 = function(G__2788_2791, G__2789_2792) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2788_2791, G__2789_2792);
goog.object.set(G__2788_2791, G__2789_2792, G__2790_2793);
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__2795 = arguments.length;
  switch(G__2795) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__2797 = null;
  var G__2797__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2797__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2797 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2797__1.call(this, x);
      case 2:
        return G__2797__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2797.cljs$core$IFn$_invoke$arity$1 = G__2797__1;
  G__2797.cljs$core$IFn$_invoke$arity$2 = G__2797__2;
  return G__2797;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__2798 = null;
  var G__2798__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2798__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2798 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2798__1.call(this, x);
      case 2:
        return G__2798__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2798.cljs$core$IFn$_invoke$arity$1 = G__2798__1;
  G__2798.cljs$core$IFn$_invoke$arity$2 = G__2798__2;
  return G__2798;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
var G__2799_2802 = cljs.core.ChunkedCons.prototype;
var G__2800_2803 = cljs.core.ITER_SYMBOL;
var G__2801_2804 = function(G__2799_2802, G__2800_2803) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2799_2802, G__2800_2803);
goog.object.set(G__2799_2802, G__2800_2803, G__2801_2804);
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__2806 = cljs.core.next(s);
      s = G__2806;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_2807 = 0;
  var xs_2808 = cljs.core.seq(coll);
  while (true) {
    if (xs_2808 == null) {
    } else {
      ret[i_2807] = cljs.core.to_array(cljs.core.first(xs_2808));
      var G__2809 = i_2807 + 1;
      var G__2810 = cljs.core.next(xs_2808);
      i_2807 = G__2809;
      xs_2808 = G__2810;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__2812 = arguments.length;
  switch(G__2812) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2814 = i + 1;
        var G__2815 = cljs.core.next(s__$1);
        i = G__2814;
        s__$1 = G__2815;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2816 = size;
    var i_2817 = 0;
    while (true) {
      if (i_2817 < n__4607__auto___2816) {
        a[i_2817] = init_val_or_seq;
        var G__2818 = i_2817 + 1;
        i_2817 = G__2818;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__2820 = arguments.length;
  switch(G__2820) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2822 = i + 1;
        var G__2823 = cljs.core.next(s__$1);
        i = G__2822;
        s__$1 = G__2823;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2824 = size;
    var i_2825 = 0;
    while (true) {
      if (i_2825 < n__4607__auto___2824) {
        a[i_2825] = init_val_or_seq;
        var G__2826 = i_2825 + 1;
        i_2825 = G__2826;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__2828 = arguments.length;
  switch(G__2828) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2830 = i + 1;
        var G__2831 = cljs.core.next(s__$1);
        i = G__2830;
        s__$1 = G__2831;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2832 = size;
    var i_2833 = 0;
    while (true) {
      if (i_2833 < n__4607__auto___2832) {
        a[i_2833] = init_val_or_seq;
        var G__2834 = i_2833 + 1;
        i_2833 = G__2834;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__2836 = arguments.length;
  switch(G__2836) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2838 = i + 1;
        var G__2839 = cljs.core.next(s__$1);
        i = G__2838;
        s__$1 = G__2839;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2840 = size;
    var i_2841 = 0;
    while (true) {
      if (i_2841 < n__4607__auto___2840) {
        a[i_2841] = init_val_or_seq;
        var G__2842 = i_2841 + 1;
        i_2841 = G__2842;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__2843 = i + 1;
        var G__2844 = cljs.core.next(s);
        i = G__2843;
        s = G__2844;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__2849 = arguments.length;
  switch(G__2849) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2851 = arguments.length;
      var i__4731__auto___2852 = 0;
      while (true) {
        if (i__4731__auto___2852 < len__4730__auto___2851) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2852]);
          var G__2853 = i__4731__auto___2852 + 1;
          i__4731__auto___2852 = G__2853;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq2846) {
  var G__2847 = cljs.core.first(seq2846);
  var seq2846__$1 = cljs.core.next(seq2846);
  var G__2848 = cljs.core.first(seq2846__$1);
  var seq2846__$2 = cljs.core.next(seq2846__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2847, G__2848, seq2846__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__2860 = arguments.length;
  switch(G__2860) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2862 = arguments.length;
      var i__4731__auto___2863 = 0;
      while (true) {
        if (i__4731__auto___2863 < len__4730__auto___2862) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2863]);
          var G__2864 = i__4731__auto___2863 + 1;
          i__4731__auto___2863 = G__2864;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq2855) {
  var G__2856 = cljs.core.first(seq2855);
  var seq2855__$1 = cljs.core.next(seq2855);
  var G__2857 = cljs.core.first(seq2855__$1);
  var seq2855__$2 = cljs.core.next(seq2855__$1);
  var G__2858 = cljs.core.first(seq2855__$2);
  var seq2855__$3 = cljs.core.next(seq2855__$2);
  var G__2859 = cljs.core.first(seq2855__$3);
  var seq2855__$4 = cljs.core.next(seq2855__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2856, G__2857, G__2858, G__2859, seq2855__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__2869 = arguments.length;
  switch(G__2869) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2871 = arguments.length;
      var i__4731__auto___2872 = 0;
      while (true) {
        if (i__4731__auto___2872 < len__4730__auto___2871) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2872]);
          var G__2873 = i__4731__auto___2872 + 1;
          i__4731__auto___2872 = G__2873;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2874 = ntcoll;
      var G__2875 = cljs.core.first(vals);
      var G__2876 = cljs.core.next(vals);
      tcoll = G__2874;
      val = G__2875;
      vals = G__2876;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq2866) {
  var G__2867 = cljs.core.first(seq2866);
  var seq2866__$1 = cljs.core.next(seq2866);
  var G__2868 = cljs.core.first(seq2866__$1);
  var seq2866__$2 = cljs.core.next(seq2866__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2867, G__2868, seq2866__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__2882 = arguments.length;
  switch(G__2882) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2884 = arguments.length;
      var i__4731__auto___2885 = 0;
      while (true) {
        if (i__4731__auto___2885 < len__4730__auto___2884) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2885]);
          var G__2886 = i__4731__auto___2885 + 1;
          i__4731__auto___2885 = G__2886;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__2887 = ntcoll;
      var G__2888 = cljs.core.first(kvs);
      var G__2889 = cljs.core.second(kvs);
      var G__2890 = cljs.core.nnext(kvs);
      tcoll = G__2887;
      key = G__2888;
      val = G__2889;
      kvs = G__2890;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq2878) {
  var G__2879 = cljs.core.first(seq2878);
  var seq2878__$1 = cljs.core.next(seq2878);
  var G__2880 = cljs.core.first(seq2878__$1);
  var seq2878__$2 = cljs.core.next(seq2878__$1);
  var G__2881 = cljs.core.first(seq2878__$2);
  var seq2878__$3 = cljs.core.next(seq2878__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2879, G__2880, G__2881, seq2878__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__2895 = arguments.length;
  switch(G__2895) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2897 = arguments.length;
      var i__4731__auto___2898 = 0;
      while (true) {
        if (i__4731__auto___2898 < len__4730__auto___2897) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2898]);
          var G__2899 = i__4731__auto___2898 + 1;
          i__4731__auto___2898 = G__2899;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__2900 = ntcoll;
      var G__2901 = cljs.core.first(ks);
      var G__2902 = cljs.core.next(ks);
      tcoll = G__2900;
      key = G__2901;
      ks = G__2902;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq2892) {
  var G__2893 = cljs.core.first(seq2892);
  var seq2892__$1 = cljs.core.next(seq2892);
  var G__2894 = cljs.core.first(seq2892__$1);
  var seq2892__$2 = cljs.core.next(seq2892__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2893, G__2894, seq2892__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__2907 = arguments.length;
  switch(G__2907) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2909 = arguments.length;
      var i__4731__auto___2910 = 0;
      while (true) {
        if (i__4731__auto___2910 < len__4730__auto___2909) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2910]);
          var G__2911 = i__4731__auto___2910 + 1;
          i__4731__auto___2910 = G__2911;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2912 = ntcoll;
      var G__2913 = cljs.core.first(vals);
      var G__2914 = cljs.core.next(vals);
      tcoll = G__2912;
      val = G__2913;
      vals = G__2914;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq2904) {
  var G__2905 = cljs.core.first(seq2904);
  var seq2904__$1 = cljs.core.next(seq2904);
  var G__2906 = cljs.core.first(seq2904__$1);
  var seq2904__$2 = cljs.core.next(seq2904__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2905, G__2906, seq2904__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a254 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a254) : f.call(null, a254);
    } else {
      var b255 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a254, b255) : f.call(null, a254, b255);
      } else {
        var c256 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a254, b255, c256) : f.call(null, a254, b255, c256);
        } else {
          var d257 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a254, b255, c256, d257) : f.call(null, a254, b255, c256, d257);
          } else {
            var e258 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a254, b255, c256, d257, e258) : f.call(null, a254, b255, c256, d257, e258);
            } else {
              var f259 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a254, b255, c256, d257, e258, f259) : f.call(null, a254, b255, c256, d257, e258, f259);
              } else {
                var g260 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a254, b255, c256, d257, e258, f259, g260) : f.call(null, a254, b255, c256, d257, e258, f259, g260);
                } else {
                  var h261 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a254, b255, c256, d257, e258, f259, g260, h261) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261);
                  } else {
                    var i262 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a254, b255, c256, d257, e258, f259, g260, h261, i262) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262);
                    } else {
                      var j263 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263);
                      } else {
                        var k264 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264);
                        } else {
                          var l265 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265);
                          } else {
                            var m266 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266);
                            } else {
                              var n267 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267);
                              } else {
                                var o268 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268);
                                } else {
                                  var p269 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269);
                                  } else {
                                    var q270 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270);
                                    } else {
                                      var r271 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271);
                                      } else {
                                        var s272 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272);
                                        } else {
                                          var t273 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__2917 = arguments.length;
  switch(G__2917) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4655__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4656__auto___2919 = next_19;
                                    while (true) {
                                      if (s__4656__auto___2919) {
                                        arr__4655__auto__.push(cljs.core._first(s__4656__auto___2919));
                                        var G__2920 = cljs.core.next(s__4656__auto___2919);
                                        s__4656__auto___2919 = G__2920;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4655__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__2928 = arguments.length;
  switch(G__2928) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2930 = arguments.length;
      var i__4731__auto___2931 = 0;
      while (true) {
        if (i__4731__auto___2931 < len__4730__auto___2930) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2931]);
          var G__2932 = i__4731__auto___2931 + 1;
          i__4731__auto___2931 = G__2932;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4752__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq2922) {
  var G__2923 = cljs.core.first(seq2922);
  var seq2922__$1 = cljs.core.next(seq2922);
  var G__2924 = cljs.core.first(seq2922__$1);
  var seq2922__$2 = cljs.core.next(seq2922__$1);
  var G__2925 = cljs.core.first(seq2922__$2);
  var seq2922__$3 = cljs.core.next(seq2922__$2);
  var G__2926 = cljs.core.first(seq2922__$3);
  var seq2922__$4 = cljs.core.next(seq2922__$3);
  var G__2927 = cljs.core.first(seq2922__$4);
  var seq2922__$5 = cljs.core.next(seq2922__$4);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2923, G__2924, G__2925, G__2926, G__2927, seq2922__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__2941 = arguments.length;
  switch(G__2941) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2958 = arguments.length;
      var i__4731__auto___2959 = 0;
      while (true) {
        if (i__4731__auto___2959 < len__4730__auto___2958) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2959]);
          var G__2960 = i__4731__auto___2959 + 1;
          i__4731__auto___2959 = G__2960;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__2942 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2942) : f.call(null, G__2942);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__2943 = cljs.core.meta(obj);
    var G__2944 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2943, G__2944) : f.call(null, G__2943, G__2944);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__2945 = cljs.core.meta(obj);
    var G__2946 = a;
    var G__2947 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2945, G__2946, G__2947) : f.call(null, G__2945, G__2946, G__2947);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__2948 = cljs.core.meta(obj);
    var G__2949 = a;
    var G__2950 = b;
    var G__2951 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2948, G__2949, G__2950, G__2951) : f.call(null, G__2948, G__2949, G__2950, G__2951);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__2952 = cljs.core.meta(obj);
    var G__2953 = a;
    var G__2954 = b;
    var G__2955 = c;
    var G__2956 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2952, G__2953, G__2954, G__2955, G__2956) : f.call(null, G__2952, G__2953, G__2954, G__2955, G__2956);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq2934) {
  var G__2935 = cljs.core.first(seq2934);
  var seq2934__$1 = cljs.core.next(seq2934);
  var G__2936 = cljs.core.first(seq2934__$1);
  var seq2934__$2 = cljs.core.next(seq2934__$1);
  var G__2937 = cljs.core.first(seq2934__$2);
  var seq2934__$3 = cljs.core.next(seq2934__$2);
  var G__2938 = cljs.core.first(seq2934__$3);
  var seq2934__$4 = cljs.core.next(seq2934__$3);
  var G__2939 = cljs.core.first(seq2934__$4);
  var seq2934__$5 = cljs.core.next(seq2934__$4);
  var G__2940 = cljs.core.first(seq2934__$5);
  var seq2934__$6 = cljs.core.next(seq2934__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2935, G__2936, G__2937, G__2938, G__2939, G__2940, seq2934__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__2965 = arguments.length;
  switch(G__2965) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2967 = arguments.length;
      var i__4731__auto___2968 = 0;
      while (true) {
        if (i__4731__auto___2968 < len__4730__auto___2967) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2968]);
          var G__2969 = i__4731__auto___2968 + 1;
          i__4731__auto___2968 = G__2969;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq2962) {
  var G__2963 = cljs.core.first(seq2962);
  var seq2962__$1 = cljs.core.next(seq2962);
  var G__2964 = cljs.core.first(seq2962__$1);
  var seq2962__$2 = cljs.core.next(seq2962__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2963, G__2964, seq2962__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core2970 !== "undefined") {
  } else {
    cljs.core.t_cljs$core2970 = function(meta2971) {
      this.meta2971 = meta2971;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core2970.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2972, meta2971__$1) {
      var self__ = this;
      var _2972__$1 = this;
      return new cljs.core.t_cljs$core2970(meta2971__$1);
    };
    cljs.core.t_cljs$core2970.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2972) {
      var self__ = this;
      var _2972__$1 = this;
      return self__.meta2971;
    };
    cljs.core.t_cljs$core2970.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core2970.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core2970.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core2970.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2971", "meta2971", -870384503, null)], null);
    };
    cljs.core.t_cljs$core2970.cljs$lang$type = true;
    cljs.core.t_cljs$core2970.cljs$lang$ctorStr = "cljs.core/t_cljs$core2970";
    cljs.core.t_cljs$core2970.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write(writer__4375__auto__, "cljs.core/t_cljs$core2970");
    };
    cljs.core.__GT_t_cljs$core2970 = function cljs$core$nil_iter_$___GT_t_cljs$core2970(meta2971) {
      return new cljs.core.t_cljs$core2970(meta2971);
    };
  }
  return new cljs.core.t_cljs$core2970(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__2973 = cljs.core.next(iters__$1);
        iters__$1 = G__2973;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4607__auto___2974 = self__.iters.length;
  var i_2975 = 0;
  while (true) {
    if (i_2975 < n__4607__auto___2974) {
      nexts[i_2975] = self__.iters[i_2975].next();
      var G__2976 = i_2975 + 1;
      i_2975 = G__2976;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4120__auto__)) {
            return n < 32;
          } else {
            return and__4120__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__2977 = n + 1;
          n = G__2977;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__2978 = null;
                var G__2979 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__2978, G__2979) : self__.xf.call(null, G__2978, G__2979);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
var G__2980_2983 = cljs.core.TransformerIterator.prototype;
var G__2981_2984 = cljs.core.ITER_SYMBOL;
var G__2982_2985 = function(G__2980_2983, G__2981_2984) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2980_2983, G__2981_2984);
goog.object.set(G__2980_2983, G__2981_2984, G__2982_2985);
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__2986 = function(iterator) {
      return function() {
        var G__2987 = null;
        var G__2987__0 = function() {
          return null;
        };
        var G__2987__1 = function(acc) {
          return acc;
        };
        var G__2987__2 = function(acc, o) {
          iterator.buffer = iterator.buffer.add(o);
          return acc;
        };
        G__2987 = function(acc, o) {
          switch(arguments.length) {
            case 0:
              return G__2987__0.call(this);
            case 1:
              return G__2987__1.call(this, acc);
            case 2:
              return G__2987__2.call(this, acc, o);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__2987.cljs$core$IFn$_invoke$arity$0 = G__2987__0;
        G__2987.cljs$core$IFn$_invoke$arity$1 = G__2987__1;
        G__2987.cljs$core$IFn$_invoke$arity$2 = G__2987__2;
        return G__2987;
      }();
    }(iterator);
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2986) : xform.call(null, G__2986);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__2992 = arguments.length;
  switch(G__2992) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2994 = arguments.length;
      var i__4731__auto___2995 = 0;
      while (true) {
        if (i__4731__auto___2995 < len__4730__auto___2994) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2995]);
          var G__2996 = i__4731__auto___2995 + 1;
          i__4731__auto___2995 = G__2996;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4131__auto__ = cljs.core.seq(coll);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4131__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4131__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq2989) {
  var G__2990 = cljs.core.first(seq2989);
  var seq2989__$1 = cljs.core.next(seq2989);
  var G__2991 = cljs.core.first(seq2989__$1);
  var seq2989__$2 = cljs.core.next(seq2989__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2990, G__2991, seq2989__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__2997 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2997) : pred.call(null, G__2997);
      }())) {
        var G__2998 = pred;
        var G__2999 = cljs.core.next(coll);
        pred = G__2998;
        coll = G__2999;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var or__4131__auto__ = function() {
        var G__3001 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3001) : pred.call(null, G__3001);
      }();
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var G__3002 = pred;
        var G__3003 = cljs.core.next(s);
        pred = G__3002;
        coll = G__3003;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__3004 = null;
    var G__3004__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__3004__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__3004__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__3004__3 = function() {
      var G__3005__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__3005 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__3006__i = 0, G__3006__a = new Array(arguments.length - 2);
          while (G__3006__i < G__3006__a.length) {
            G__3006__a[G__3006__i] = arguments[G__3006__i + 2];
            ++G__3006__i;
          }
          zs = new cljs.core.IndexedSeq(G__3006__a, 0, null);
        }
        return G__3005__delegate.call(this, x, y, zs);
      };
      G__3005.cljs$lang$maxFixedArity = 2;
      G__3005.cljs$lang$applyTo = function(arglist__3007) {
        var x = cljs.core.first(arglist__3007);
        arglist__3007 = cljs.core.next(arglist__3007);
        var y = cljs.core.first(arglist__3007);
        var zs = cljs.core.rest(arglist__3007);
        return G__3005__delegate(x, y, zs);
      };
      G__3005.cljs$core$IFn$_invoke$arity$variadic = G__3005__delegate;
      return G__3005;
    }();
    G__3004 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__3004__0.call(this);
        case 1:
          return G__3004__1.call(this, x);
        case 2:
          return G__3004__2.call(this, x, y);
        default:
          var G__3008 = null;
          if (arguments.length > 2) {
            var G__3009__i = 0, G__3009__a = new Array(arguments.length - 2);
            while (G__3009__i < G__3009__a.length) {
              G__3009__a[G__3009__i] = arguments[G__3009__i + 2];
              ++G__3009__i;
            }
            G__3008 = new cljs.core.IndexedSeq(G__3009__a, 0, null);
          }
          return G__3004__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__3008);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3004.cljs$lang$maxFixedArity = 2;
    G__3004.cljs$lang$applyTo = G__3004__3.cljs$lang$applyTo;
    G__3004.cljs$core$IFn$_invoke$arity$0 = G__3004__0;
    G__3004.cljs$core$IFn$_invoke$arity$1 = G__3004__1;
    G__3004.cljs$core$IFn$_invoke$arity$2 = G__3004__2;
    G__3004.cljs$core$IFn$_invoke$arity$variadic = G__3004__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__3004;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__3010__delegate = function(args) {
      return x;
    };
    var G__3010 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3011__i = 0, G__3011__a = new Array(arguments.length - 0);
        while (G__3011__i < G__3011__a.length) {
          G__3011__a[G__3011__i] = arguments[G__3011__i + 0];
          ++G__3011__i;
        }
        args = new cljs.core.IndexedSeq(G__3011__a, 0, null);
      }
      return G__3010__delegate.call(this, args);
    };
    G__3010.cljs$lang$maxFixedArity = 0;
    G__3010.cljs$lang$applyTo = function(arglist__3012) {
      var args = cljs.core.seq(arglist__3012);
      return G__3010__delegate(args);
    };
    G__3010.cljs$core$IFn$_invoke$arity$variadic = G__3010__delegate;
    return G__3010;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__3018 = arguments.length;
  switch(G__3018) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3036 = arguments.length;
      var i__4731__auto___3037 = 0;
      while (true) {
        if (i__4731__auto___3037 < len__4730__auto___3036) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3037]);
          var G__3038 = i__4731__auto___3037 + 1;
          i__4731__auto___3037 = G__3038;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__3039 = null;
    var G__3039__0 = function() {
      var G__3019 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3019) : f.call(null, G__3019);
    };
    var G__3039__1 = function(x) {
      var G__3020 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3020) : f.call(null, G__3020);
    };
    var G__3039__2 = function(x, y) {
      var G__3021 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3021) : f.call(null, G__3021);
    };
    var G__3039__3 = function(x, y, z) {
      var G__3022 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3022) : f.call(null, G__3022);
    };
    var G__3039__4 = function() {
      var G__3040__delegate = function(x, y, z, args) {
        var G__3023 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3023) : f.call(null, G__3023);
      };
      var G__3040 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3041__i = 0, G__3041__a = new Array(arguments.length - 3);
          while (G__3041__i < G__3041__a.length) {
            G__3041__a[G__3041__i] = arguments[G__3041__i + 3];
            ++G__3041__i;
          }
          args = new cljs.core.IndexedSeq(G__3041__a, 0, null);
        }
        return G__3040__delegate.call(this, x, y, z, args);
      };
      G__3040.cljs$lang$maxFixedArity = 3;
      G__3040.cljs$lang$applyTo = function(arglist__3042) {
        var x = cljs.core.first(arglist__3042);
        arglist__3042 = cljs.core.next(arglist__3042);
        var y = cljs.core.first(arglist__3042);
        arglist__3042 = cljs.core.next(arglist__3042);
        var z = cljs.core.first(arglist__3042);
        var args = cljs.core.rest(arglist__3042);
        return G__3040__delegate(x, y, z, args);
      };
      G__3040.cljs$core$IFn$_invoke$arity$variadic = G__3040__delegate;
      return G__3040;
    }();
    G__3039 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3039__0.call(this);
        case 1:
          return G__3039__1.call(this, x);
        case 2:
          return G__3039__2.call(this, x, y);
        case 3:
          return G__3039__3.call(this, x, y, z);
        default:
          var G__3043 = null;
          if (arguments.length > 3) {
            var G__3044__i = 0, G__3044__a = new Array(arguments.length - 3);
            while (G__3044__i < G__3044__a.length) {
              G__3044__a[G__3044__i] = arguments[G__3044__i + 3];
              ++G__3044__i;
            }
            G__3043 = new cljs.core.IndexedSeq(G__3044__a, 0, null);
          }
          return G__3039__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3043);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3039.cljs$lang$maxFixedArity = 3;
    G__3039.cljs$lang$applyTo = G__3039__4.cljs$lang$applyTo;
    G__3039.cljs$core$IFn$_invoke$arity$0 = G__3039__0;
    G__3039.cljs$core$IFn$_invoke$arity$1 = G__3039__1;
    G__3039.cljs$core$IFn$_invoke$arity$2 = G__3039__2;
    G__3039.cljs$core$IFn$_invoke$arity$3 = G__3039__3;
    G__3039.cljs$core$IFn$_invoke$arity$variadic = G__3039__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3039;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__3045 = null;
    var G__3045__0 = function() {
      var G__3024 = function() {
        var G__3025 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3025) : g.call(null, G__3025);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3024) : f.call(null, G__3024);
    };
    var G__3045__1 = function(x) {
      var G__3026 = function() {
        var G__3027 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3027) : g.call(null, G__3027);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3026) : f.call(null, G__3026);
    };
    var G__3045__2 = function(x, y) {
      var G__3028 = function() {
        var G__3029 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3029) : g.call(null, G__3029);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3028) : f.call(null, G__3028);
    };
    var G__3045__3 = function(x, y, z) {
      var G__3030 = function() {
        var G__3031 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3031) : g.call(null, G__3031);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3030) : f.call(null, G__3030);
    };
    var G__3045__4 = function() {
      var G__3046__delegate = function(x, y, z, args) {
        var G__3032 = function() {
          var G__3033 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3033) : g.call(null, G__3033);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3032) : f.call(null, G__3032);
      };
      var G__3046 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3047__i = 0, G__3047__a = new Array(arguments.length - 3);
          while (G__3047__i < G__3047__a.length) {
            G__3047__a[G__3047__i] = arguments[G__3047__i + 3];
            ++G__3047__i;
          }
          args = new cljs.core.IndexedSeq(G__3047__a, 0, null);
        }
        return G__3046__delegate.call(this, x, y, z, args);
      };
      G__3046.cljs$lang$maxFixedArity = 3;
      G__3046.cljs$lang$applyTo = function(arglist__3048) {
        var x = cljs.core.first(arglist__3048);
        arglist__3048 = cljs.core.next(arglist__3048);
        var y = cljs.core.first(arglist__3048);
        arglist__3048 = cljs.core.next(arglist__3048);
        var z = cljs.core.first(arglist__3048);
        var args = cljs.core.rest(arglist__3048);
        return G__3046__delegate(x, y, z, args);
      };
      G__3046.cljs$core$IFn$_invoke$arity$variadic = G__3046__delegate;
      return G__3046;
    }();
    G__3045 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3045__0.call(this);
        case 1:
          return G__3045__1.call(this, x);
        case 2:
          return G__3045__2.call(this, x, y);
        case 3:
          return G__3045__3.call(this, x, y, z);
        default:
          var G__3049 = null;
          if (arguments.length > 3) {
            var G__3050__i = 0, G__3050__a = new Array(arguments.length - 3);
            while (G__3050__i < G__3050__a.length) {
              G__3050__a[G__3050__i] = arguments[G__3050__i + 3];
              ++G__3050__i;
            }
            G__3049 = new cljs.core.IndexedSeq(G__3050__a, 0, null);
          }
          return G__3045__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3049);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3045.cljs$lang$maxFixedArity = 3;
    G__3045.cljs$lang$applyTo = G__3045__4.cljs$lang$applyTo;
    G__3045.cljs$core$IFn$_invoke$arity$0 = G__3045__0;
    G__3045.cljs$core$IFn$_invoke$arity$1 = G__3045__1;
    G__3045.cljs$core$IFn$_invoke$arity$2 = G__3045__2;
    G__3045.cljs$core$IFn$_invoke$arity$3 = G__3045__3;
    G__3045.cljs$core$IFn$_invoke$arity$variadic = G__3045__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3045;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__3051__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__3052 = function() {
              var fexpr__3034 = cljs.core.first(fs__$2);
              return fexpr__3034.cljs$core$IFn$_invoke$arity$1 ? fexpr__3034.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__3034.call(null, ret);
            }();
            var G__3053 = cljs.core.next(fs__$2);
            ret = G__3052;
            fs__$2 = G__3053;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__3051 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__3054__i = 0, G__3054__a = new Array(arguments.length - 0);
          while (G__3054__i < G__3054__a.length) {
            G__3054__a[G__3054__i] = arguments[G__3054__i + 0];
            ++G__3054__i;
          }
          args = new cljs.core.IndexedSeq(G__3054__a, 0, null);
        }
        return G__3051__delegate.call(this, args);
      };
      G__3051.cljs$lang$maxFixedArity = 0;
      G__3051.cljs$lang$applyTo = function(arglist__3055) {
        var args = cljs.core.seq(arglist__3055);
        return G__3051__delegate(args);
      };
      G__3051.cljs$core$IFn$_invoke$arity$variadic = G__3051__delegate;
      return G__3051;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq3014) {
  var G__3015 = cljs.core.first(seq3014);
  var seq3014__$1 = cljs.core.next(seq3014);
  var G__3016 = cljs.core.first(seq3014__$1);
  var seq3014__$2 = cljs.core.next(seq3014__$1);
  var G__3017 = cljs.core.first(seq3014__$2);
  var seq3014__$3 = cljs.core.next(seq3014__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3015, G__3016, G__3017, seq3014__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__3062 = arguments.length;
  switch(G__3062) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3064 = arguments.length;
      var i__4731__auto___3065 = 0;
      while (true) {
        if (i__4731__auto___3065 < len__4730__auto___3064) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3065]);
          var G__3066 = i__4731__auto___3065 + 1;
          i__4731__auto___3065 = G__3066;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__3067 = null;
    var G__3067__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__3067__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__3067__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__3067__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__3067__4 = function() {
      var G__3068__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__3068 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3069__i = 0, G__3069__a = new Array(arguments.length - 3);
          while (G__3069__i < G__3069__a.length) {
            G__3069__a[G__3069__i] = arguments[G__3069__i + 3];
            ++G__3069__i;
          }
          args = new cljs.core.IndexedSeq(G__3069__a, 0, null);
        }
        return G__3068__delegate.call(this, x, y, z, args);
      };
      G__3068.cljs$lang$maxFixedArity = 3;
      G__3068.cljs$lang$applyTo = function(arglist__3070) {
        var x = cljs.core.first(arglist__3070);
        arglist__3070 = cljs.core.next(arglist__3070);
        var y = cljs.core.first(arglist__3070);
        arglist__3070 = cljs.core.next(arglist__3070);
        var z = cljs.core.first(arglist__3070);
        var args = cljs.core.rest(arglist__3070);
        return G__3068__delegate(x, y, z, args);
      };
      G__3068.cljs$core$IFn$_invoke$arity$variadic = G__3068__delegate;
      return G__3068;
    }();
    G__3067 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3067__0.call(this);
        case 1:
          return G__3067__1.call(this, x);
        case 2:
          return G__3067__2.call(this, x, y);
        case 3:
          return G__3067__3.call(this, x, y, z);
        default:
          var G__3071 = null;
          if (arguments.length > 3) {
            var G__3072__i = 0, G__3072__a = new Array(arguments.length - 3);
            while (G__3072__i < G__3072__a.length) {
              G__3072__a[G__3072__i] = arguments[G__3072__i + 3];
              ++G__3072__i;
            }
            G__3071 = new cljs.core.IndexedSeq(G__3072__a, 0, null);
          }
          return G__3067__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3071);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3067.cljs$lang$maxFixedArity = 3;
    G__3067.cljs$lang$applyTo = G__3067__4.cljs$lang$applyTo;
    G__3067.cljs$core$IFn$_invoke$arity$0 = G__3067__0;
    G__3067.cljs$core$IFn$_invoke$arity$1 = G__3067__1;
    G__3067.cljs$core$IFn$_invoke$arity$2 = G__3067__2;
    G__3067.cljs$core$IFn$_invoke$arity$3 = G__3067__3;
    G__3067.cljs$core$IFn$_invoke$arity$variadic = G__3067__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3067;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__3073 = null;
    var G__3073__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__3073__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__3073__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__3073__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__3073__4 = function() {
      var G__3074__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__3074 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3075__i = 0, G__3075__a = new Array(arguments.length - 3);
          while (G__3075__i < G__3075__a.length) {
            G__3075__a[G__3075__i] = arguments[G__3075__i + 3];
            ++G__3075__i;
          }
          args = new cljs.core.IndexedSeq(G__3075__a, 0, null);
        }
        return G__3074__delegate.call(this, x, y, z, args);
      };
      G__3074.cljs$lang$maxFixedArity = 3;
      G__3074.cljs$lang$applyTo = function(arglist__3076) {
        var x = cljs.core.first(arglist__3076);
        arglist__3076 = cljs.core.next(arglist__3076);
        var y = cljs.core.first(arglist__3076);
        arglist__3076 = cljs.core.next(arglist__3076);
        var z = cljs.core.first(arglist__3076);
        var args = cljs.core.rest(arglist__3076);
        return G__3074__delegate(x, y, z, args);
      };
      G__3074.cljs$core$IFn$_invoke$arity$variadic = G__3074__delegate;
      return G__3074;
    }();
    G__3073 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3073__0.call(this);
        case 1:
          return G__3073__1.call(this, x);
        case 2:
          return G__3073__2.call(this, x, y);
        case 3:
          return G__3073__3.call(this, x, y, z);
        default:
          var G__3077 = null;
          if (arguments.length > 3) {
            var G__3078__i = 0, G__3078__a = new Array(arguments.length - 3);
            while (G__3078__i < G__3078__a.length) {
              G__3078__a[G__3078__i] = arguments[G__3078__i + 3];
              ++G__3078__i;
            }
            G__3077 = new cljs.core.IndexedSeq(G__3078__a, 0, null);
          }
          return G__3073__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3077);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3073.cljs$lang$maxFixedArity = 3;
    G__3073.cljs$lang$applyTo = G__3073__4.cljs$lang$applyTo;
    G__3073.cljs$core$IFn$_invoke$arity$0 = G__3073__0;
    G__3073.cljs$core$IFn$_invoke$arity$1 = G__3073__1;
    G__3073.cljs$core$IFn$_invoke$arity$2 = G__3073__2;
    G__3073.cljs$core$IFn$_invoke$arity$3 = G__3073__3;
    G__3073.cljs$core$IFn$_invoke$arity$variadic = G__3073__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3073;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__3079 = null;
    var G__3079__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__3079__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__3079__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__3079__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__3079__4 = function() {
      var G__3080__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__3080 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3081__i = 0, G__3081__a = new Array(arguments.length - 3);
          while (G__3081__i < G__3081__a.length) {
            G__3081__a[G__3081__i] = arguments[G__3081__i + 3];
            ++G__3081__i;
          }
          args = new cljs.core.IndexedSeq(G__3081__a, 0, null);
        }
        return G__3080__delegate.call(this, x, y, z, args);
      };
      G__3080.cljs$lang$maxFixedArity = 3;
      G__3080.cljs$lang$applyTo = function(arglist__3082) {
        var x = cljs.core.first(arglist__3082);
        arglist__3082 = cljs.core.next(arglist__3082);
        var y = cljs.core.first(arglist__3082);
        arglist__3082 = cljs.core.next(arglist__3082);
        var z = cljs.core.first(arglist__3082);
        var args = cljs.core.rest(arglist__3082);
        return G__3080__delegate(x, y, z, args);
      };
      G__3080.cljs$core$IFn$_invoke$arity$variadic = G__3080__delegate;
      return G__3080;
    }();
    G__3079 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3079__0.call(this);
        case 1:
          return G__3079__1.call(this, x);
        case 2:
          return G__3079__2.call(this, x, y);
        case 3:
          return G__3079__3.call(this, x, y, z);
        default:
          var G__3083 = null;
          if (arguments.length > 3) {
            var G__3084__i = 0, G__3084__a = new Array(arguments.length - 3);
            while (G__3084__i < G__3084__a.length) {
              G__3084__a[G__3084__i] = arguments[G__3084__i + 3];
              ++G__3084__i;
            }
            G__3083 = new cljs.core.IndexedSeq(G__3084__a, 0, null);
          }
          return G__3079__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3083);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3079.cljs$lang$maxFixedArity = 3;
    G__3079.cljs$lang$applyTo = G__3079__4.cljs$lang$applyTo;
    G__3079.cljs$core$IFn$_invoke$arity$0 = G__3079__0;
    G__3079.cljs$core$IFn$_invoke$arity$1 = G__3079__1;
    G__3079.cljs$core$IFn$_invoke$arity$2 = G__3079__2;
    G__3079.cljs$core$IFn$_invoke$arity$3 = G__3079__3;
    G__3079.cljs$core$IFn$_invoke$arity$variadic = G__3079__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3079;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__3085__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__3085 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3086__i = 0, G__3086__a = new Array(arguments.length - 0);
        while (G__3086__i < G__3086__a.length) {
          G__3086__a[G__3086__i] = arguments[G__3086__i + 0];
          ++G__3086__i;
        }
        args = new cljs.core.IndexedSeq(G__3086__a, 0, null);
      }
      return G__3085__delegate.call(this, args);
    };
    G__3085.cljs$lang$maxFixedArity = 0;
    G__3085.cljs$lang$applyTo = function(arglist__3087) {
      var args = cljs.core.seq(arglist__3087);
      return G__3085__delegate(args);
    };
    G__3085.cljs$core$IFn$_invoke$arity$variadic = G__3085__delegate;
    return G__3085;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq3057) {
  var G__3058 = cljs.core.first(seq3057);
  var seq3057__$1 = cljs.core.next(seq3057);
  var G__3059 = cljs.core.first(seq3057__$1);
  var seq3057__$2 = cljs.core.next(seq3057__$1);
  var G__3060 = cljs.core.first(seq3057__$2);
  var seq3057__$3 = cljs.core.next(seq3057__$2);
  var G__3061 = cljs.core.first(seq3057__$3);
  var seq3057__$4 = cljs.core.next(seq3057__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3058, G__3059, G__3060, G__3061, seq3057__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__3089 = arguments.length;
  switch(G__3089) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__3107 = null;
    var G__3107__1 = function(a) {
      var G__3090 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3090) : f.call(null, G__3090);
    };
    var G__3107__2 = function(a, b) {
      var G__3091 = a == null ? x : a;
      var G__3092 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3091, G__3092) : f.call(null, G__3091, G__3092);
    };
    var G__3107__3 = function(a, b, c) {
      var G__3093 = a == null ? x : a;
      var G__3094 = b;
      var G__3095 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3093, G__3094, G__3095) : f.call(null, G__3093, G__3094, G__3095);
    };
    var G__3107__4 = function() {
      var G__3108__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__3108 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3109__i = 0, G__3109__a = new Array(arguments.length - 3);
          while (G__3109__i < G__3109__a.length) {
            G__3109__a[G__3109__i] = arguments[G__3109__i + 3];
            ++G__3109__i;
          }
          ds = new cljs.core.IndexedSeq(G__3109__a, 0, null);
        }
        return G__3108__delegate.call(this, a, b, c, ds);
      };
      G__3108.cljs$lang$maxFixedArity = 3;
      G__3108.cljs$lang$applyTo = function(arglist__3110) {
        var a = cljs.core.first(arglist__3110);
        arglist__3110 = cljs.core.next(arglist__3110);
        var b = cljs.core.first(arglist__3110);
        arglist__3110 = cljs.core.next(arglist__3110);
        var c = cljs.core.first(arglist__3110);
        var ds = cljs.core.rest(arglist__3110);
        return G__3108__delegate(a, b, c, ds);
      };
      G__3108.cljs$core$IFn$_invoke$arity$variadic = G__3108__delegate;
      return G__3108;
    }();
    G__3107 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__3107__1.call(this, a);
        case 2:
          return G__3107__2.call(this, a, b);
        case 3:
          return G__3107__3.call(this, a, b, c);
        default:
          var G__3111 = null;
          if (arguments.length > 3) {
            var G__3112__i = 0, G__3112__a = new Array(arguments.length - 3);
            while (G__3112__i < G__3112__a.length) {
              G__3112__a[G__3112__i] = arguments[G__3112__i + 3];
              ++G__3112__i;
            }
            G__3111 = new cljs.core.IndexedSeq(G__3112__a, 0, null);
          }
          return G__3107__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3111);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3107.cljs$lang$maxFixedArity = 3;
    G__3107.cljs$lang$applyTo = G__3107__4.cljs$lang$applyTo;
    G__3107.cljs$core$IFn$_invoke$arity$1 = G__3107__1;
    G__3107.cljs$core$IFn$_invoke$arity$2 = G__3107__2;
    G__3107.cljs$core$IFn$_invoke$arity$3 = G__3107__3;
    G__3107.cljs$core$IFn$_invoke$arity$variadic = G__3107__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3107;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__3113 = null;
    var G__3113__2 = function(a, b) {
      var G__3096 = a == null ? x : a;
      var G__3097 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3096, G__3097) : f.call(null, G__3096, G__3097);
    };
    var G__3113__3 = function(a, b, c) {
      var G__3098 = a == null ? x : a;
      var G__3099 = b == null ? y : b;
      var G__3100 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3098, G__3099, G__3100) : f.call(null, G__3098, G__3099, G__3100);
    };
    var G__3113__4 = function() {
      var G__3114__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__3114 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3115__i = 0, G__3115__a = new Array(arguments.length - 3);
          while (G__3115__i < G__3115__a.length) {
            G__3115__a[G__3115__i] = arguments[G__3115__i + 3];
            ++G__3115__i;
          }
          ds = new cljs.core.IndexedSeq(G__3115__a, 0, null);
        }
        return G__3114__delegate.call(this, a, b, c, ds);
      };
      G__3114.cljs$lang$maxFixedArity = 3;
      G__3114.cljs$lang$applyTo = function(arglist__3116) {
        var a = cljs.core.first(arglist__3116);
        arglist__3116 = cljs.core.next(arglist__3116);
        var b = cljs.core.first(arglist__3116);
        arglist__3116 = cljs.core.next(arglist__3116);
        var c = cljs.core.first(arglist__3116);
        var ds = cljs.core.rest(arglist__3116);
        return G__3114__delegate(a, b, c, ds);
      };
      G__3114.cljs$core$IFn$_invoke$arity$variadic = G__3114__delegate;
      return G__3114;
    }();
    G__3113 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3113__2.call(this, a, b);
        case 3:
          return G__3113__3.call(this, a, b, c);
        default:
          var G__3117 = null;
          if (arguments.length > 3) {
            var G__3118__i = 0, G__3118__a = new Array(arguments.length - 3);
            while (G__3118__i < G__3118__a.length) {
              G__3118__a[G__3118__i] = arguments[G__3118__i + 3];
              ++G__3118__i;
            }
            G__3117 = new cljs.core.IndexedSeq(G__3118__a, 0, null);
          }
          return G__3113__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3117);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3113.cljs$lang$maxFixedArity = 3;
    G__3113.cljs$lang$applyTo = G__3113__4.cljs$lang$applyTo;
    G__3113.cljs$core$IFn$_invoke$arity$2 = G__3113__2;
    G__3113.cljs$core$IFn$_invoke$arity$3 = G__3113__3;
    G__3113.cljs$core$IFn$_invoke$arity$variadic = G__3113__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3113;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__3119 = null;
    var G__3119__2 = function(a, b) {
      var G__3101 = a == null ? x : a;
      var G__3102 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3101, G__3102) : f.call(null, G__3101, G__3102);
    };
    var G__3119__3 = function(a, b, c) {
      var G__3103 = a == null ? x : a;
      var G__3104 = b == null ? y : b;
      var G__3105 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3103, G__3104, G__3105) : f.call(null, G__3103, G__3104, G__3105);
    };
    var G__3119__4 = function() {
      var G__3120__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__3120 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3121__i = 0, G__3121__a = new Array(arguments.length - 3);
          while (G__3121__i < G__3121__a.length) {
            G__3121__a[G__3121__i] = arguments[G__3121__i + 3];
            ++G__3121__i;
          }
          ds = new cljs.core.IndexedSeq(G__3121__a, 0, null);
        }
        return G__3120__delegate.call(this, a, b, c, ds);
      };
      G__3120.cljs$lang$maxFixedArity = 3;
      G__3120.cljs$lang$applyTo = function(arglist__3122) {
        var a = cljs.core.first(arglist__3122);
        arglist__3122 = cljs.core.next(arglist__3122);
        var b = cljs.core.first(arglist__3122);
        arglist__3122 = cljs.core.next(arglist__3122);
        var c = cljs.core.first(arglist__3122);
        var ds = cljs.core.rest(arglist__3122);
        return G__3120__delegate(a, b, c, ds);
      };
      G__3120.cljs$core$IFn$_invoke$arity$variadic = G__3120__delegate;
      return G__3120;
    }();
    G__3119 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3119__2.call(this, a, b);
        case 3:
          return G__3119__3.call(this, a, b, c);
        default:
          var G__3123 = null;
          if (arguments.length > 3) {
            var G__3124__i = 0, G__3124__a = new Array(arguments.length - 3);
            while (G__3124__i < G__3124__a.length) {
              G__3124__a[G__3124__i] = arguments[G__3124__i + 3];
              ++G__3124__i;
            }
            G__3123 = new cljs.core.IndexedSeq(G__3124__a, 0, null);
          }
          return G__3119__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3123);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3119.cljs$lang$maxFixedArity = 3;
    G__3119.cljs$lang$applyTo = G__3119__4.cljs$lang$applyTo;
    G__3119.cljs$core$IFn$_invoke$arity$2 = G__3119__2;
    G__3119.cljs$core$IFn$_invoke$arity$3 = G__3119__3;
    G__3119.cljs$core$IFn$_invoke$arity$variadic = G__3119__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3119;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__3126 = arguments.length;
  switch(G__3126) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function(i) {
      return function() {
        var G__3140 = null;
        var G__3140__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3140__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3140__2 = function(result, input) {
          var G__3127 = result;
          var G__3128 = function() {
            var G__3129 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var G__3130 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3129, G__3130) : f.call(null, G__3129, G__3130);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3127, G__3128) : rf.call(null, G__3127, G__3128);
        };
        G__3140 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3140__0.call(this);
            case 1:
              return G__3140__1.call(this, result);
            case 2:
              return G__3140__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3140.cljs$core$IFn$_invoke$arity$0 = G__3140__0;
        G__3140.cljs$core$IFn$_invoke$arity$1 = G__3140__1;
        G__3140.cljs$core$IFn$_invoke$arity$2 = G__3140__2;
        return G__3140;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4607__auto___3141 = size;
          var i_3142 = 0;
          while (true) {
            if (i_3142 < n__4607__auto___3141) {
              cljs.core.chunk_append(b, function() {
                var G__3135 = idx + i_3142;
                var G__3136 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3142);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3135, G__3136) : f.call(null, G__3135, G__3136);
              }());
              var G__3143 = i_3142 + 1;
              i_3142 = G__3143;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__3137 = idx;
            var G__3138 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3137, G__3138) : f.call(null, G__3137, G__3138);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__3145 = arguments.length;
  switch(G__3145) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3149 = null;
      var G__3149__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3149__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3149__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__3149 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3149__0.call(this);
          case 1:
            return G__3149__1.call(this, result);
          case 2:
            return G__3149__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3149.cljs$core$IFn$_invoke$arity$0 = G__3149__0;
      G__3149.cljs$core$IFn$_invoke$arity$1 = G__3149__1;
      G__3149.cljs$core$IFn$_invoke$arity$2 = G__3149__2;
      return G__3149;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3150 = size;
        var i_3151 = 0;
        while (true) {
          if (i_3151 < n__4607__auto___3150) {
            var x_3152 = function() {
              var G__3146 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3151);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3146) : f.call(null, G__3146);
            }();
            if (x_3152 == null) {
            } else {
              cljs.core.chunk_append(b, x_3152);
            }
            var G__3153 = i_3151 + 1;
            i_3151 = G__3153;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__3147 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3147) : f.call(null, G__3147);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__3154 = cljs.core.seq(self__.watches);
  var chunk__3155 = null;
  var count__3156 = 0;
  var i__3157 = 0;
  while (true) {
    if (i__3157 < count__3156) {
      var vec__3164 = chunk__3155.cljs$core$IIndexed$_nth$arity$2(null, i__3157);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3164, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3164, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__3170 = seq__3154;
      var G__3171 = chunk__3155;
      var G__3172 = count__3156;
      var G__3173 = i__3157 + 1;
      seq__3154 = G__3170;
      chunk__3155 = G__3171;
      count__3156 = G__3172;
      i__3157 = G__3173;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3154);
      if (temp__5720__auto__) {
        var seq__3154__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3154__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3154__$1);
          var G__3174 = cljs.core.chunk_rest(seq__3154__$1);
          var G__3175 = c__4550__auto__;
          var G__3176 = cljs.core.count(c__4550__auto__);
          var G__3177 = 0;
          seq__3154 = G__3174;
          chunk__3155 = G__3175;
          count__3156 = G__3176;
          i__3157 = G__3177;
          continue;
        } else {
          var vec__3167 = cljs.core.first(seq__3154__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3167, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3167, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__3178 = cljs.core.next(seq__3154__$1);
          var G__3179 = null;
          var G__3180 = 0;
          var G__3181 = 0;
          seq__3154 = G__3178;
          chunk__3155 = G__3179;
          count__3156 = G__3180;
          i__3157 = G__3181;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__3185 = arguments.length;
  switch(G__3185) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3190 = arguments.length;
      var i__4731__auto___3191 = 0;
      while (true) {
        if (i__4731__auto___3191 < len__4730__auto___3190) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3191]);
          var G__3192 = i__4731__auto___3191 + 1;
          i__4731__auto___3191 = G__3192;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__3186) {
  var map__3187 = p__3186;
  var map__3187__$1 = (!(map__3187 == null) ? map__3187.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3187.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__3187) : map__3187;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3187__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3187__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq3183) {
  var G__3184 = cljs.core.first(seq3183);
  var seq3183__$1 = cljs.core.next(seq3183);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3184, seq3183__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__3199 = arguments.length;
  switch(G__3199) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3207 = arguments.length;
      var i__4731__auto___3208 = 0;
      while (true) {
        if (i__4731__auto___3208 < len__4730__auto___3207) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3208]);
          var G__3209 = i__4731__auto___3208 + 1;
          i__4731__auto___3208 = G__3209;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3200 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3200) : f.call(null, G__3200);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3201 = a.state;
      var G__3202 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3201, G__3202) : f.call(null, G__3201, G__3202);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3203 = a.state;
      var G__3204 = x;
      var G__3205 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3203, G__3204, G__3205) : f.call(null, G__3203, G__3204, G__3205);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq3194) {
  var G__3195 = cljs.core.first(seq3194);
  var seq3194__$1 = cljs.core.next(seq3194);
  var G__3196 = cljs.core.first(seq3194__$1);
  var seq3194__$2 = cljs.core.next(seq3194__$1);
  var G__3197 = cljs.core.first(seq3194__$2);
  var seq3194__$3 = cljs.core.next(seq3194__$2);
  var G__3198 = cljs.core.first(seq3194__$3);
  var seq3194__$4 = cljs.core.next(seq3194__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3195, G__3196, G__3197, G__3198, seq3194__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__3216 = arguments.length;
  switch(G__3216) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3224 = arguments.length;
      var i__4731__auto___3225 = 0;
      while (true) {
        if (i__4731__auto___3225 < len__4730__auto___3224) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3225]);
          var G__3226 = i__4731__auto___3225 + 1;
          i__4731__auto___3225 = G__3226;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3217 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3217) : f.call(null, G__3217);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3218 = a.state;
    var G__3219 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3218, G__3219) : f.call(null, G__3218, G__3219);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3220 = a.state;
    var G__3221 = x;
    var G__3222 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3220, G__3221, G__3222) : f.call(null, G__3220, G__3221, G__3222);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq3211) {
  var G__3212 = cljs.core.first(seq3211);
  var seq3211__$1 = cljs.core.next(seq3211);
  var G__3213 = cljs.core.first(seq3211__$1);
  var seq3211__$2 = cljs.core.next(seq3211__$1);
  var G__3214 = cljs.core.first(seq3211__$2);
  var seq3211__$3 = cljs.core.next(seq3211__$2);
  var G__3215 = cljs.core.first(seq3211__$3);
  var seq3211__$4 = cljs.core.next(seq3211__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3212, G__3213, G__3214, G__3215, seq3211__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__3228 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__3228) : val.call(null, G__3228);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__3230 = arguments.length;
  switch(G__3230) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__3240 = null;
        var G__3240__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3240__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3240__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__3240 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3240__0.call(this);
            case 1:
              return G__3240__1.call(this, result);
            case 2:
              return G__3240__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3240.cljs$core$IFn$_invoke$arity$0 = G__3240__0;
        G__3240.cljs$core$IFn$_invoke$arity$1 = G__3240__1;
        G__3240.cljs$core$IFn$_invoke$arity$2 = G__3240__2;
        return G__3240;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4607__auto___3241 = size;
          var i_3242 = 0;
          while (true) {
            if (i_3242 < n__4607__auto___3241) {
              var x_3243 = function() {
                var G__3235 = idx + i_3242;
                var G__3236 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3242);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3235, G__3236) : f.call(null, G__3235, G__3236);
              }();
              if (x_3243 == null) {
              } else {
                cljs.core.chunk_append(b, x_3243);
              }
              var G__3244 = i_3242 + 1;
              i_3242 = G__3244;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__3237 = idx;
            var G__3238 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3237, G__3238) : f.call(null, G__3237, G__3238);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__3256 = arguments.length;
  switch(G__3256) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3258 = arguments.length;
      var i__4731__auto___3259 = 0;
      while (true) {
        if (i__4731__auto___3259 < len__4730__auto___3258) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3259]);
          var G__3260 = i__4731__auto___3259 + 1;
          i__4731__auto___3259 = G__3260;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__3261__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3261 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3262__i = 0, G__3262__a = new Array(arguments.length - 3);
          while (G__3262__i < G__3262__a.length) {
            G__3262__a[G__3262__i] = arguments[G__3262__i + 3];
            ++G__3262__i;
          }
          args = new cljs.core.IndexedSeq(G__3262__a, 0, null);
        }
        return G__3261__delegate.call(this, x, y, z, args);
      };
      G__3261.cljs$lang$maxFixedArity = 3;
      G__3261.cljs$lang$applyTo = function(arglist__3263) {
        var x = cljs.core.first(arglist__3263);
        arglist__3263 = cljs.core.next(arglist__3263);
        var y = cljs.core.first(arglist__3263);
        arglist__3263 = cljs.core.next(arglist__3263);
        var z = cljs.core.first(arglist__3263);
        var args = cljs.core.rest(arglist__3263);
        return G__3261__delegate(x, y, z, args);
      };
      G__3261.cljs$core$IFn$_invoke$arity$variadic = G__3261__delegate;
      return G__3261;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__3264 = null;
          if (arguments.length > 3) {
            var G__3265__i = 0, G__3265__a = new Array(arguments.length - 3);
            while (G__3265__i < G__3265__a.length) {
              G__3265__a[G__3265__i] = arguments[G__3265__i + 3];
              ++G__3265__i;
            }
            G__3264 = new cljs.core.IndexedSeq(G__3265__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3264);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__3266__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(function(and__4120__auto__) {
              return function(p1__3245_SHARP_) {
                var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3245_SHARP_) : p1.call(null, p1__3245_SHARP_);
                if (cljs.core.truth_(and__4120__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3245_SHARP_) : p2.call(null, p1__3245_SHARP_);
                } else {
                  return and__4120__auto____$1;
                }
              };
            }(and__4120__auto__), args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3266 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3267__i = 0, G__3267__a = new Array(arguments.length - 3);
          while (G__3267__i < G__3267__a.length) {
            G__3267__a[G__3267__i] = arguments[G__3267__i + 3];
            ++G__3267__i;
          }
          args = new cljs.core.IndexedSeq(G__3267__a, 0, null);
        }
        return G__3266__delegate.call(this, x, y, z, args);
      };
      G__3266.cljs$lang$maxFixedArity = 3;
      G__3266.cljs$lang$applyTo = function(arglist__3268) {
        var x = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var y = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var z = cljs.core.first(arglist__3268);
        var args = cljs.core.rest(arglist__3268);
        return G__3266__delegate(x, y, z, args);
      };
      G__3266.cljs$core$IFn$_invoke$arity$variadic = G__3266__delegate;
      return G__3266;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__3269 = null;
          if (arguments.length > 3) {
            var G__3270__i = 0, G__3270__a = new Array(arguments.length - 3);
            while (G__3270__i < G__3270__a.length) {
              G__3270__a[G__3270__i] = arguments[G__3270__i + 3];
              ++G__3270__i;
            }
            G__3269 = new cljs.core.IndexedSeq(G__3270__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3269);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  var and__4120__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4120__auto____$5)) {
                    var and__4120__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4120__auto____$6)) {
                      var and__4120__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4120__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4120__auto____$7;
                      }
                    } else {
                      return and__4120__auto____$6;
                    }
                  } else {
                    return and__4120__auto____$5;
                  }
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__3271__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(function(and__4120__auto__) {
              return function(p1__3246_SHARP_) {
                var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p1.call(null, p1__3246_SHARP_);
                if (cljs.core.truth_(and__4120__auto____$1)) {
                  var and__4120__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p2.call(null, p1__3246_SHARP_);
                  if (cljs.core.truth_(and__4120__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p3.call(null, p1__3246_SHARP_);
                  } else {
                    return and__4120__auto____$2;
                  }
                } else {
                  return and__4120__auto____$1;
                }
              };
            }(and__4120__auto__), args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3271 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3272__i = 0, G__3272__a = new Array(arguments.length - 3);
          while (G__3272__i < G__3272__a.length) {
            G__3272__a[G__3272__i] = arguments[G__3272__i + 3];
            ++G__3272__i;
          }
          args = new cljs.core.IndexedSeq(G__3272__a, 0, null);
        }
        return G__3271__delegate.call(this, x, y, z, args);
      };
      G__3271.cljs$lang$maxFixedArity = 3;
      G__3271.cljs$lang$applyTo = function(arglist__3273) {
        var x = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var y = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var z = cljs.core.first(arglist__3273);
        var args = cljs.core.rest(arglist__3273);
        return G__3271__delegate(x, y, z, args);
      };
      G__3271.cljs$core$IFn$_invoke$arity$variadic = G__3271__delegate;
      return G__3271;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__3274 = null;
          if (arguments.length > 3) {
            var G__3275__i = 0, G__3275__a = new Array(arguments.length - 3);
            while (G__3275__i < G__3275__a.length) {
              G__3275__a[G__3275__i] = arguments[G__3275__i + 3];
              ++G__3275__i;
            }
            G__3274 = new cljs.core.IndexedSeq(G__3275__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3274);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3247_SHARP_) {
            return p1__3247_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3247_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3247_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3248_SHARP_) {
            var and__4120__auto__ = p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3248_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4120__auto__)) {
              return p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3248_SHARP_.call(null, y);
            } else {
              return and__4120__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3249_SHARP_) {
            var and__4120__auto__ = p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3249_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4120__auto__)) {
              var and__4120__auto____$1 = p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3249_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$1)) {
                return p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3249_SHARP_.call(null, z);
              } else {
                return and__4120__auto____$1;
              }
            } else {
              return and__4120__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__3276__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4120__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4120__auto__)) {
              return cljs.core.every_QMARK_(function(and__4120__auto__, ps__$1) {
                return function(p1__3250_SHARP_) {
                  return cljs.core.every_QMARK_(p1__3250_SHARP_, args);
                };
              }(and__4120__auto__, ps__$1), ps__$1);
            } else {
              return and__4120__auto__;
            }
          }());
        };
        var G__3276 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3277__i = 0, G__3277__a = new Array(arguments.length - 3);
            while (G__3277__i < G__3277__a.length) {
              G__3277__a[G__3277__i] = arguments[G__3277__i + 3];
              ++G__3277__i;
            }
            args = new cljs.core.IndexedSeq(G__3277__a, 0, null);
          }
          return G__3276__delegate.call(this, x, y, z, args);
        };
        G__3276.cljs$lang$maxFixedArity = 3;
        G__3276.cljs$lang$applyTo = function(arglist__3278) {
          var x = cljs.core.first(arglist__3278);
          arglist__3278 = cljs.core.next(arglist__3278);
          var y = cljs.core.first(arglist__3278);
          arglist__3278 = cljs.core.next(arglist__3278);
          var z = cljs.core.first(arglist__3278);
          var args = cljs.core.rest(arglist__3278);
          return G__3276__delegate(x, y, z, args);
        };
        G__3276.cljs$core$IFn$_invoke$arity$variadic = G__3276__delegate;
        return G__3276;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__3279 = null;
            if (arguments.length > 3) {
              var G__3280__i = 0, G__3280__a = new Array(arguments.length - 3);
              while (G__3280__i < G__3280__a.length) {
                G__3280__a[G__3280__i] = arguments[G__3280__i + 3];
                ++G__3280__i;
              }
              G__3279 = new cljs.core.IndexedSeq(G__3280__a, 0, null);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3279);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq3252) {
  var G__3253 = cljs.core.first(seq3252);
  var seq3252__$1 = cljs.core.next(seq3252);
  var G__3254 = cljs.core.first(seq3252__$1);
  var seq3252__$2 = cljs.core.next(seq3252__$1);
  var G__3255 = cljs.core.first(seq3252__$2);
  var seq3252__$3 = cljs.core.next(seq3252__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3253, G__3254, G__3255, seq3252__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__3292 = arguments.length;
  switch(G__3292) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3294 = arguments.length;
      var i__4731__auto___3295 = 0;
      while (true) {
        if (i__4731__auto___3295 < len__4730__auto___3294) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3295]);
          var G__3296 = i__4731__auto___3295 + 1;
          i__4731__auto___3295 = G__3296;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__3297__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__3297 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3298__i = 0, G__3298__a = new Array(arguments.length - 3);
          while (G__3298__i < G__3298__a.length) {
            G__3298__a[G__3298__i] = arguments[G__3298__i + 3];
            ++G__3298__i;
          }
          args = new cljs.core.IndexedSeq(G__3298__a, 0, null);
        }
        return G__3297__delegate.call(this, x, y, z, args);
      };
      G__3297.cljs$lang$maxFixedArity = 3;
      G__3297.cljs$lang$applyTo = function(arglist__3299) {
        var x = cljs.core.first(arglist__3299);
        arglist__3299 = cljs.core.next(arglist__3299);
        var y = cljs.core.first(arglist__3299);
        arglist__3299 = cljs.core.next(arglist__3299);
        var z = cljs.core.first(arglist__3299);
        var args = cljs.core.rest(arglist__3299);
        return G__3297__delegate(x, y, z, args);
      };
      G__3297.cljs$core$IFn$_invoke$arity$variadic = G__3297__delegate;
      return G__3297;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__3300 = null;
          if (arguments.length > 3) {
            var G__3301__i = 0, G__3301__a = new Array(arguments.length - 3);
            while (G__3301__i < G__3301__a.length) {
              G__3301__a[G__3301__i] = arguments[G__3301__i + 3];
              ++G__3301__i;
            }
            G__3300 = new cljs.core.IndexedSeq(G__3301__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3300);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__3302__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__3281_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3281_SHARP_) : p1.call(null, p1__3281_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3281_SHARP_) : p2.call(null, p1__3281_SHARP_);
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__3302 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3303__i = 0, G__3303__a = new Array(arguments.length - 3);
          while (G__3303__i < G__3303__a.length) {
            G__3303__a[G__3303__i] = arguments[G__3303__i + 3];
            ++G__3303__i;
          }
          args = new cljs.core.IndexedSeq(G__3303__a, 0, null);
        }
        return G__3302__delegate.call(this, x, y, z, args);
      };
      G__3302.cljs$lang$maxFixedArity = 3;
      G__3302.cljs$lang$applyTo = function(arglist__3304) {
        var x = cljs.core.first(arglist__3304);
        arglist__3304 = cljs.core.next(arglist__3304);
        var y = cljs.core.first(arglist__3304);
        arglist__3304 = cljs.core.next(arglist__3304);
        var z = cljs.core.first(arglist__3304);
        var args = cljs.core.rest(arglist__3304);
        return G__3302__delegate(x, y, z, args);
      };
      G__3302.cljs$core$IFn$_invoke$arity$variadic = G__3302__delegate;
      return G__3302;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__3305 = null;
          if (arguments.length > 3) {
            var G__3306__i = 0, G__3306__a = new Array(arguments.length - 3);
            while (G__3306__i < G__3306__a.length) {
              G__3306__a[G__3306__i] = arguments[G__3306__i + 3];
              ++G__3306__i;
            }
            G__3305 = new cljs.core.IndexedSeq(G__3306__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3305);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                var or__4131__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4131__auto____$5)) {
                  return or__4131__auto____$5;
                } else {
                  var or__4131__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4131__auto____$6)) {
                    return or__4131__auto____$6;
                  } else {
                    var or__4131__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4131__auto____$7)) {
                      return or__4131__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__3307__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__3282_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p1.call(null, p1__3282_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p2.call(null, p1__3282_SHARP_);
                if (cljs.core.truth_(or__4131__auto____$2)) {
                  return or__4131__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p3.call(null, p1__3282_SHARP_);
                }
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__3307 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3308__i = 0, G__3308__a = new Array(arguments.length - 3);
          while (G__3308__i < G__3308__a.length) {
            G__3308__a[G__3308__i] = arguments[G__3308__i + 3];
            ++G__3308__i;
          }
          args = new cljs.core.IndexedSeq(G__3308__a, 0, null);
        }
        return G__3307__delegate.call(this, x, y, z, args);
      };
      G__3307.cljs$lang$maxFixedArity = 3;
      G__3307.cljs$lang$applyTo = function(arglist__3309) {
        var x = cljs.core.first(arglist__3309);
        arglist__3309 = cljs.core.next(arglist__3309);
        var y = cljs.core.first(arglist__3309);
        arglist__3309 = cljs.core.next(arglist__3309);
        var z = cljs.core.first(arglist__3309);
        var args = cljs.core.rest(arglist__3309);
        return G__3307__delegate(x, y, z, args);
      };
      G__3307.cljs$core$IFn$_invoke$arity$variadic = G__3307__delegate;
      return G__3307;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__3310 = null;
          if (arguments.length > 3) {
            var G__3311__i = 0, G__3311__a = new Array(arguments.length - 3);
            while (G__3311__i < G__3311__a.length) {
              G__3311__a[G__3311__i] = arguments[G__3311__i + 3];
              ++G__3311__i;
            }
            G__3310 = new cljs.core.IndexedSeq(G__3311__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3310);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3283_SHARP_) {
            return p1__3283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3283_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3283_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3284_SHARP_) {
            var or__4131__auto__ = p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3284_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3284_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3285_SHARP_) {
            var or__4131__auto__ = p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3285_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              var or__4131__auto____$1 = p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3285_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3285_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__3312__delegate = function(x, y, z, args) {
          var or__4131__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.some(function(or__4131__auto__, ps__$1) {
              return function(p1__3286_SHARP_) {
                return cljs.core.some(p1__3286_SHARP_, args);
              };
            }(or__4131__auto__, ps__$1), ps__$1);
          }
        };
        var G__3312 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3313__i = 0, G__3313__a = new Array(arguments.length - 3);
            while (G__3313__i < G__3313__a.length) {
              G__3313__a[G__3313__i] = arguments[G__3313__i + 3];
              ++G__3313__i;
            }
            args = new cljs.core.IndexedSeq(G__3313__a, 0, null);
          }
          return G__3312__delegate.call(this, x, y, z, args);
        };
        G__3312.cljs$lang$maxFixedArity = 3;
        G__3312.cljs$lang$applyTo = function(arglist__3314) {
          var x = cljs.core.first(arglist__3314);
          arglist__3314 = cljs.core.next(arglist__3314);
          var y = cljs.core.first(arglist__3314);
          arglist__3314 = cljs.core.next(arglist__3314);
          var z = cljs.core.first(arglist__3314);
          var args = cljs.core.rest(arglist__3314);
          return G__3312__delegate(x, y, z, args);
        };
        G__3312.cljs$core$IFn$_invoke$arity$variadic = G__3312__delegate;
        return G__3312;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__3315 = null;
            if (arguments.length > 3) {
              var G__3316__i = 0, G__3316__a = new Array(arguments.length - 3);
              while (G__3316__i < G__3316__a.length) {
                G__3316__a[G__3316__i] = arguments[G__3316__i + 3];
                ++G__3316__i;
              }
              G__3315 = new cljs.core.IndexedSeq(G__3316__a, 0, null);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3315);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq3288) {
  var G__3289 = cljs.core.first(seq3288);
  var seq3288__$1 = cljs.core.next(seq3288);
  var G__3290 = cljs.core.first(seq3288__$1);
  var seq3288__$2 = cljs.core.next(seq3288__$1);
  var G__3291 = cljs.core.first(seq3288__$2);
  var seq3288__$3 = cljs.core.next(seq3288__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3289, G__3290, G__3291, seq3288__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__3324 = arguments.length;
  switch(G__3324) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3337 = arguments.length;
      var i__4731__auto___3338 = 0;
      while (true) {
        if (i__4731__auto___3338 < len__4730__auto___3337) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3338]);
          var G__3339 = i__4731__auto___3338 + 1;
          i__4731__auto___3338 = G__3339;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3340 = null;
      var G__3340__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3340__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3340__2 = function(result, input) {
        var G__3325 = result;
        var G__3326 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3325, G__3326) : rf.call(null, G__3325, G__3326);
      };
      var G__3340__3 = function() {
        var G__3341__delegate = function(result, input, inputs) {
          var G__3327 = result;
          var G__3328 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3327, G__3328) : rf.call(null, G__3327, G__3328);
        };
        var G__3341 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__3342__i = 0, G__3342__a = new Array(arguments.length - 2);
            while (G__3342__i < G__3342__a.length) {
              G__3342__a[G__3342__i] = arguments[G__3342__i + 2];
              ++G__3342__i;
            }
            inputs = new cljs.core.IndexedSeq(G__3342__a, 0, null);
          }
          return G__3341__delegate.call(this, result, input, inputs);
        };
        G__3341.cljs$lang$maxFixedArity = 2;
        G__3341.cljs$lang$applyTo = function(arglist__3343) {
          var result = cljs.core.first(arglist__3343);
          arglist__3343 = cljs.core.next(arglist__3343);
          var input = cljs.core.first(arglist__3343);
          var inputs = cljs.core.rest(arglist__3343);
          return G__3341__delegate(result, input, inputs);
        };
        G__3341.cljs$core$IFn$_invoke$arity$variadic = G__3341__delegate;
        return G__3341;
      }();
      G__3340 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__3340__0.call(this);
          case 1:
            return G__3340__1.call(this, result);
          case 2:
            return G__3340__2.call(this, result, input);
          default:
            var G__3344 = null;
            if (arguments.length > 2) {
              var G__3345__i = 0, G__3345__a = new Array(arguments.length - 2);
              while (G__3345__i < G__3345__a.length) {
                G__3345__a[G__3345__i] = arguments[G__3345__i + 2];
                ++G__3345__i;
              }
              G__3344 = new cljs.core.IndexedSeq(G__3345__a, 0, null);
            }
            return G__3340__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__3344);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3340.cljs$lang$maxFixedArity = 2;
      G__3340.cljs$lang$applyTo = G__3340__3.cljs$lang$applyTo;
      G__3340.cljs$core$IFn$_invoke$arity$0 = G__3340__0;
      G__3340.cljs$core$IFn$_invoke$arity$1 = G__3340__1;
      G__3340.cljs$core$IFn$_invoke$arity$2 = G__3340__2;
      G__3340.cljs$core$IFn$_invoke$arity$variadic = G__3340__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__3340;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3346 = size;
        var i_3347 = 0;
        while (true) {
          if (i_3347 < n__4607__auto___3346) {
            cljs.core.chunk_append(b, function() {
              var G__3329 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3347);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3329) : f.call(null, G__3329);
            }());
            var G__3348 = i_3347 + 1;
            i_3347 = G__3348;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__3330 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3330) : f.call(null, G__3330);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__3331 = cljs.core.first(s1);
        var G__3332 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3331, G__3332) : f.call(null, G__3331, G__3332);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__3333 = cljs.core.first(s1);
        var G__3334 = cljs.core.first(s2);
        var G__3335 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3333, G__3334, G__3335) : f.call(null, G__3333, G__3334, G__3335);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__3317_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__3317_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq3319) {
  var G__3320 = cljs.core.first(seq3319);
  var seq3319__$1 = cljs.core.next(seq3319);
  var G__3321 = cljs.core.first(seq3319__$1);
  var seq3319__$2 = cljs.core.next(seq3319__$1);
  var G__3322 = cljs.core.first(seq3319__$2);
  var seq3319__$3 = cljs.core.next(seq3319__$2);
  var G__3323 = cljs.core.first(seq3319__$3);
  var seq3319__$4 = cljs.core.next(seq3319__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3320, G__3321, G__3322, G__3323, seq3319__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__3350 = arguments.length;
  switch(G__3350) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3352 = null;
        var G__3352__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3352__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3352__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__3352 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3352__0.call(this);
            case 1:
              return G__3352__1.call(this, result);
            case 2:
              return G__3352__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3352.cljs$core$IFn$_invoke$arity$0 = G__3352__0;
        G__3352.cljs$core$IFn$_invoke$arity$1 = G__3352__1;
        G__3352.cljs$core$IFn$_invoke$arity$2 = G__3352__2;
        return G__3352;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__3354 = arguments.length;
  switch(G__3354) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3356 = null;
        var G__3356__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3356__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3356__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3356 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3356__0.call(this);
            case 1:
              return G__3356__1.call(this, result);
            case 2:
              return G__3356__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3356.cljs$core$IFn$_invoke$arity$0 = G__3356__0;
        G__3356.cljs$core$IFn$_invoke$arity$1 = G__3356__1;
        G__3356.cljs$core$IFn$_invoke$arity$2 = G__3356__2;
        return G__3356;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__3357 = n__$1 - 1;
        var G__3358 = cljs.core.rest(s);
        n__$1 = G__3357;
        coll__$1 = G__3358;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__3360 = arguments.length;
  switch(G__3360) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__3362 = cljs.core.next(s);
      var G__3363 = cljs.core.next(lead);
      s = G__3362;
      lead = G__3363;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__3365 = arguments.length;
  switch(G__3365) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__3369 = null;
        var G__3369__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3369__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3369__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4120__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4120__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3369 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3369__0.call(this);
            case 1:
              return G__3369__1.call(this, result);
            case 2:
              return G__3369__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3369.cljs$core$IFn$_invoke$arity$0 = G__3369__0;
        G__3369.cljs$core$IFn$_invoke$arity$1 = G__3369__1;
        G__3369.cljs$core$IFn$_invoke$arity$2 = G__3369__2;
        return G__3369;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = s;
        if (and__4120__auto__) {
          var G__3367 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3367) : pred__$1.call(null, G__3367);
        } else {
          return and__4120__auto__;
        }
      }())) {
        var G__3370 = pred__$1;
        var G__3371 = cljs.core.rest(s);
        pred__$1 = G__3370;
        coll__$1 = G__3371;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5718__auto___3378 = cljs.core.next(self__.prev);
    if (temp__5718__auto___3378) {
      var c_3379 = temp__5718__auto___3378;
      self__.current = c_3379;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4131__auto__ = cljs.core.next(s);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__3374 = ret;
      var G__3375 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3374, G__3375) : f.call(null, G__3374, G__3375);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3380 = s__$1;
      var G__3381 = ret__$1;
      s = G__3380;
      ret = G__3381;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__3376 = ret;
      var G__3377 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3376, G__3377) : f.call(null, G__3376, G__3377);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3382 = function() {
        var or__4131__auto__ = cljs.core.next(s);
        if (or__4131__auto__) {
          return or__4131__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__3383 = ret__$1;
      s = G__3382;
      ret = G__3383;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var vals = temp__5718__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__3384 = null;
  var G__3384__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3384__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3384 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3384__1.call(this, x);
      case 2:
        return G__3384__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3384.cljs$core$IFn$_invoke$arity$1 = G__3384__1;
  G__3384.cljs$core$IFn$_invoke$arity$2 = G__3384__2;
  return G__3384;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__3385 = null;
  var G__3385__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__3385__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3385 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3385__1.call(this, x);
      case 2:
        return G__3385__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3385.cljs$core$IFn$_invoke$arity$1 = G__3385__1;
  G__3385.cljs$core$IFn$_invoke$arity$2 = G__3385__2;
  return G__3385;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3386 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3386;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3387 = i + 1;
          var G__3388 = ret__$1;
          i = G__3387;
          ret = G__3388;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3389 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3389;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3390 = i + 1;
          var G__3391 = ret__$1;
          i = G__3390;
          ret = G__3391;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__3393 = arguments.length;
  switch(G__3393) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__3396 = arguments.length;
  switch(G__3396) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3398 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3399 = v__$2;
      ret = G__3398;
      v__$1 = G__3399;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3400 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3401 = v__$2;
      ret = G__3400;
      v__$1 = G__3401;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__3406 = arguments.length;
  switch(G__3406) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3408 = arguments.length;
      var i__4731__auto___3409 = 0;
      while (true) {
        if (i__4731__auto___3409 < len__4730__auto___3408) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3409]);
          var G__3410 = i__4731__auto___3409 + 1;
          i__4731__auto___3409 = G__3410;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq3403) {
  var G__3404 = cljs.core.first(seq3403);
  var seq3403__$1 = cljs.core.next(seq3403);
  var G__3405 = cljs.core.first(seq3403__$1);
  var seq3403__$2 = cljs.core.next(seq3403__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3404, G__3405, seq3403__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__3412 = arguments.length;
  switch(G__3412) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__3414 = null;
        var G__3414__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3414__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3414__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3414 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3414__0.call(this);
            case 1:
              return G__3414__1.call(this, result);
            case 2:
              return G__3414__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3414.cljs$core$IFn$_invoke$arity$0 = G__3414__0;
        G__3414.cljs$core$IFn$_invoke$arity$1 = G__3414__1;
        G__3414.cljs$core$IFn$_invoke$arity$2 = G__3414__2;
        return G__3414;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5718__auto__ = cljs.core.seq(coll);
      if (temp__5718__auto__) {
        var coll__$1 = temp__5718__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__3418 = arguments.length;
  switch(G__3418) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3420 = arguments.length;
      var i__4731__auto___3421 = 0;
      while (true) {
        if (i__4731__auto___3421 < len__4730__auto___3420) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3421]);
          var G__3422 = i__4731__auto___3421 + 1;
          i__4731__auto___3421 = G__3422;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq3416) {
  var G__3417 = cljs.core.first(seq3416);
  var seq3416__$1 = cljs.core.next(seq3416);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3417, seq3416__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__3424 = arguments.length;
  switch(G__3424) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3427 = null;
      var G__3427__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3427__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3427__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__3427 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3427__0.call(this);
          case 1:
            return G__3427__1.call(this, result);
          case 2:
            return G__3427__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3427.cljs$core$IFn$_invoke$arity$0 = G__3427__0;
      G__3427.cljs$core$IFn$_invoke$arity$1 = G__3427__1;
      G__3427.cljs$core$IFn$_invoke$arity$2 = G__3427__2;
      return G__3427;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3428 = size;
        var i_3429 = 0;
        while (true) {
          if (i_3429 < n__4607__auto___3428) {
            if (cljs.core.truth_(function() {
              var G__3425 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3429);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3425) : pred.call(null, G__3425);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3429));
            } else {
            }
            var G__3430 = i_3429 + 1;
            i_3429 = G__3430;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__3432 = arguments.length;
  switch(G__3432) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__3434_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__3434_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__3436 = arguments.length;
  switch(G__3436) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__3446 = arguments.length;
  switch(G__3446) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3448 = arguments.length;
      var i__4731__auto___3449 = 0;
      while (true) {
        if (i__4731__auto___3449 < len__4730__auto___3448) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3449]);
          var G__3450 = i__4731__auto___3449 + 1;
          i__4731__auto___3449 = G__3450;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq3441) {
  var G__3442 = cljs.core.first(seq3441);
  var seq3441__$1 = cljs.core.next(seq3441);
  var G__3443 = cljs.core.first(seq3441__$1);
  var seq3441__$2 = cljs.core.next(seq3441__$1);
  var G__3444 = cljs.core.first(seq3441__$2);
  var seq3441__$3 = cljs.core.next(seq3441__$2);
  var G__3445 = cljs.core.first(seq3441__$3);
  var seq3441__$4 = cljs.core.next(seq3441__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3442, G__3443, G__3444, G__3445, seq3441__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__3452 = arguments.length;
  switch(G__3452) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__3455 = arguments.length;
  switch(G__3455) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__3457 = sentinel;
        var G__3458 = m__$2;
        var G__3459 = cljs.core.next(ks__$1);
        sentinel = G__3457;
        m__$1 = G__3458;
        ks__$1 = G__3459;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__3460, v) {
  var vec__3461 = p__3460;
  var seq__3462 = cljs.core.seq(vec__3461);
  var first__3463 = cljs.core.first(seq__3462);
  var seq__3462__$1 = cljs.core.next(seq__3462);
  var k = first__3463;
  var ks = seq__3462__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3464 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3465 = ks;
      var G__3466 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__3464, G__3465, G__3466) : cljs.core.assoc_in.call(null, G__3464, G__3465, G__3466);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__3475 = arguments.length;
  switch(G__3475) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3507 = arguments.length;
      var i__4731__auto___3508 = 0;
      while (true) {
        if (i__4731__auto___3508 < len__4730__auto___3507) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3508]);
          var G__3509 = i__4731__auto___3508 + 1;
          i__4731__auto___3508 = G__3509;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__3476, f) {
  var vec__3477 = p__3476;
  var seq__3478 = cljs.core.seq(vec__3477);
  var first__3479 = cljs.core.first(seq__3478);
  var seq__3478__$1 = cljs.core.next(seq__3478);
  var k = first__3479;
  var ks = seq__3478__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3480 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3480) : f.call(null, G__3480);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__3481, f, a) {
  var vec__3482 = p__3481;
  var seq__3483 = cljs.core.seq(vec__3482);
  var first__3484 = cljs.core.first(seq__3483);
  var seq__3483__$1 = cljs.core.next(seq__3483);
  var k = first__3484;
  var ks = seq__3483__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3485 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3486 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3485, G__3486) : f.call(null, G__3485, G__3486);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__3487, f, a, b) {
  var vec__3488 = p__3487;
  var seq__3489 = cljs.core.seq(vec__3488);
  var first__3490 = cljs.core.first(seq__3489);
  var seq__3489__$1 = cljs.core.next(seq__3489);
  var k = first__3490;
  var ks = seq__3489__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3491 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3492 = a;
      var G__3493 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3491, G__3492, G__3493) : f.call(null, G__3491, G__3492, G__3493);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__3494, f, a, b, c) {
  var vec__3495 = p__3494;
  var seq__3496 = cljs.core.seq(vec__3495);
  var first__3497 = cljs.core.first(seq__3496);
  var seq__3496__$1 = cljs.core.next(seq__3496);
  var k = first__3497;
  var ks = seq__3496__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3498 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3499 = a;
      var G__3500 = b;
      var G__3501 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3498, G__3499, G__3500, G__3501) : f.call(null, G__3498, G__3499, G__3500, G__3501);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__3502, f, a, b, c, args) {
  var vec__3503 = p__3502;
  var seq__3504 = cljs.core.seq(vec__3503);
  var first__3505 = cljs.core.first(seq__3504);
  var seq__3504__$1 = cljs.core.next(seq__3504);
  var k = first__3505;
  var ks = seq__3504__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq3468) {
  var G__3469 = cljs.core.first(seq3468);
  var seq3468__$1 = cljs.core.next(seq3468);
  var G__3470 = cljs.core.first(seq3468__$1);
  var seq3468__$2 = cljs.core.next(seq3468__$1);
  var G__3471 = cljs.core.first(seq3468__$2);
  var seq3468__$3 = cljs.core.next(seq3468__$2);
  var G__3472 = cljs.core.first(seq3468__$3);
  var seq3468__$4 = cljs.core.next(seq3468__$3);
  var G__3473 = cljs.core.first(seq3468__$4);
  var seq3468__$5 = cljs.core.next(seq3468__$4);
  var G__3474 = cljs.core.first(seq3468__$5);
  var seq3468__$6 = cljs.core.next(seq3468__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3469, G__3470, G__3471, G__3472, G__3473, G__3474, seq3468__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__3518 = arguments.length;
  switch(G__3518) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3530 = arguments.length;
      var i__4731__auto___3531 = 0;
      while (true) {
        if (i__4731__auto___3531 < len__4730__auto___3530) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3531]);
          var G__3532 = i__4731__auto___3531 + 1;
          i__4731__auto___3531 = G__3532;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3519) : f.call(null, G__3519);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3520 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3521 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3520, G__3521) : f.call(null, G__3520, G__3521);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3522 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3523 = x;
    var G__3524 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3522, G__3523, G__3524) : f.call(null, G__3522, G__3523, G__3524);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3526 = x;
    var G__3527 = y;
    var G__3528 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3525, G__3526, G__3527, G__3528) : f.call(null, G__3525, G__3526, G__3527, G__3528);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq3511) {
  var G__3512 = cljs.core.first(seq3511);
  var seq3511__$1 = cljs.core.next(seq3511);
  var G__3513 = cljs.core.first(seq3511__$1);
  var seq3511__$2 = cljs.core.next(seq3511__$1);
  var G__3514 = cljs.core.first(seq3511__$2);
  var seq3511__$3 = cljs.core.next(seq3511__$2);
  var G__3515 = cljs.core.first(seq3511__$3);
  var seq3511__$4 = cljs.core.next(seq3511__$3);
  var G__3516 = cljs.core.first(seq3511__$4);
  var seq3511__$5 = cljs.core.next(seq3511__$4);
  var G__3517 = cljs.core.first(seq3511__$5);
  var seq3511__$6 = cljs.core.next(seq3511__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3512, G__3513, G__3514, G__3515, G__3516, G__3517, seq3511__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__3533 = ll - 5;
      var G__3534 = r;
      ll = G__3533;
      ret = G__3534;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__3535 = pv;
        var G__3536 = level - 5;
        var G__3537 = child;
        var G__3538 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__3535, G__3536, G__3537, G__3538) : cljs.core.push_tail.call(null, G__3535, G__3536, G__3537, G__3538);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__3539 = cljs.core.pv_aget(node, 0);
      var G__3540 = level - 5;
      node = G__3539;
      level = G__3540;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__3541 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__3542 = level - 5;
        node = G__3541;
        level = G__3542;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__3543 = pv;
      var G__3544 = level - 5;
      var G__3545 = cljs.core.pv_aget(node, subidx);
      var G__3546 = i;
      var G__3547 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__3543, G__3544, G__3545, G__3546, G__3547) : cljs.core.do_assoc.call(null, G__3543, G__3544, G__3545, G__3546, G__3547);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3548 = pv;
      var G__3549 = level - 5;
      var G__3550 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__3548, G__3549, G__3550) : cljs.core.pop_tail.call(null, G__3548, G__3549, G__3550);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__3552 = arguments.length;
  switch(G__3552) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__3553 = acc;
        var G__3554 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3553, G__3554) : f.call(null, G__3553, G__3554);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__3556 = nacc;
        var G__3557 = i + 1;
        var G__3558 = arr__$1;
        acc = G__3556;
        i = G__3557;
        arr = G__3558;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__3565 = null;
  var G__3565__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3565__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3565 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3565__1.call(this, x);
      case 2:
        return G__3565__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3565.cljs$core$IFn$_invoke$arity$1 = G__3565__1;
  G__3565.cljs$core$IFn$_invoke$arity$2 = G__3565__2;
  return G__3565;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__3566 = null;
  var G__3566__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3566__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3566 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3566__1.call(this, x);
      case 2:
        return G__3566__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3566.cljs$core$IFn$_invoke$arity$1 = G__3566__1;
  G__3566.cljs$core$IFn$_invoke$arity$2 = G__3566__2;
  return G__3566;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3560 = init__$2;
              var G__3561 = j + i;
              var G__3562 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3560, G__3561, G__3562) : f.call(null, G__3560, G__3561, G__3562);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3567 = j + 1;
              var G__3568 = init__$3;
              j = G__3567;
              init__$2 = G__3568;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3569 = i + len;
        var G__3570 = init__$2;
        i = G__3569;
        init__$1 = G__3570;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3563 = init__$2;
              var G__3564 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3563, G__3564) : f.call(null, G__3563, G__3564);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3571 = j + 1;
              var G__3572 = init__$3;
              j = G__3571;
              init__$2 = G__3572;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3573 = i + len;
        var G__3574 = init__$2;
        i = G__3573;
        init__$1 = G__3574;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4607__auto___3575 = len;
    var i_3576 = 0;
    while (true) {
      if (i_3576 < n__4607__auto___3575) {
        new_tail[i_3576] = self__.tail[i_3576];
        var G__3577 = i_3576 + 1;
        i_3576 = G__3577;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__3578 = null;
  var G__3578__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3578__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3578 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3578__2.call(this, self__, k);
      case 3:
        return G__3578__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3578.cljs$core$IFn$_invoke$arity$2 = G__3578__2;
  G__3578.cljs$core$IFn$_invoke$arity$3 = G__3578__3;
  return G__3578;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args3559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3559)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__3579 = i + 1;
        var G__3580 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__3579;
        out = G__3580;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
var G__3581_3584 = cljs.core.PersistentVector.prototype;
var G__3582_3585 = cljs.core.ITER_SYMBOL;
var G__3583_3586 = function(G__3581_3584, G__3582_3585) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3581_3584, G__3582_3585);
goog.object.set(G__3581_3584, G__3582_3585, G__3583_3586);
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___3588 = arguments.length;
  var i__4731__auto___3589 = 0;
  while (true) {
    if (i__4731__auto___3589 < len__4730__auto___3588) {
      args__4736__auto__.push(arguments[i__4731__auto___3589]);
      var G__3590 = i__4731__auto___3589 + 1;
      i__4731__auto___3589 = G__3590;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq3587) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3587));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__3591 = null;
  var G__3591__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3591__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3591 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3591__1.call(this, x);
      case 2:
        return G__3591__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3591.cljs$core$IFn$_invoke$arity$1 = G__3591__1;
  G__3591.cljs$core$IFn$_invoke$arity$2 = G__3591__2;
  return G__3591;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__3592 = null;
  var G__3592__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3592__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3592 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3592__1.call(this, x);
      case 2:
        return G__3592__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3592.cljs$core$IFn$_invoke$arity$1 = G__3592__1;
  G__3592.cljs$core$IFn$_invoke$arity$2 = G__3592__2;
  return G__3592;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
var G__3593_3596 = cljs.core.ChunkedSeq.prototype;
var G__3594_3597 = cljs.core.ITER_SYMBOL;
var G__3595_3598 = function(G__3593_3596, G__3594_3597) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3593_3596, G__3594_3597);
goog.object.set(G__3593_3596, G__3594_3597, G__3595_3598);
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__3600 = arguments.length;
  switch(G__3600) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__3609 = null;
  var G__3609__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3609__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3609 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3609__1.call(this, x);
      case 2:
        return G__3609__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3609.cljs$core$IFn$_invoke$arity$1 = G__3609__1;
  G__3609.cljs$core$IFn$_invoke$arity$2 = G__3609__2;
  return G__3609;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__3610 = null;
  var G__3610__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3610__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3610 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3610__1.call(this, x);
      case 2:
        return G__3610__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3610.cljs$core$IFn$_invoke$arity$1 = G__3610__1;
  G__3610.cljs$core$IFn$_invoke$arity$2 = G__3610__2;
  return G__3610;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__3603 = init__$1;
        var G__3604 = j;
        var G__3605 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3603, G__3604, G__3605) : f.call(null, G__3603, G__3604, G__3605);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3611 = i + 1;
        var G__3612 = j + 1;
        var G__3613 = init__$2;
        i = G__3611;
        j = G__3612;
        init__$1 = G__3613;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4219__auto__ = self__.end;
      var y__4220__auto__ = v_pos + 1;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__3614 = null;
  var G__3614__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3614__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3614 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3614__2.call(this, self__, k);
      case 3:
        return G__3614__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3614.cljs$core$IFn$_invoke$arity$2 = G__3614__2;
  G__3614.cljs$core$IFn$_invoke$arity$3 = G__3614__3;
  return G__3614;
}();
cljs.core.Subvec.prototype.apply = function(self__, args3602) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3602)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
var G__3615_3618 = cljs.core.Subvec.prototype;
var G__3616_3619 = cljs.core.ITER_SYMBOL;
var G__3617_3620 = function(G__3615_3618, G__3616_3619) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3615_3618, G__3616_3619);
goog.object.set(G__3615_3618, G__3616_3619, G__3617_3620);
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__3621 = meta;
      var G__3622 = v.v;
      var G__3623 = v.start + start;
      var G__3624 = v.start + end;
      var G__3625 = __hash;
      meta = G__3621;
      v = G__3622;
      start = G__3623;
      end = G__3624;
      __hash = G__3625;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      var c_3626 = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c_3626 || end > c_3626) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__3628 = arguments.length;
  switch(G__3628) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__3632 = tv;
      var G__3633 = level - 5;
      var G__3634 = child;
      var G__3635 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__3632, G__3633, G__3634, G__3635) : cljs.core.tv_push_tail.call(null, G__3632, G__3633, G__3634, G__3635);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3636 = tv;
      var G__3637 = level - 5;
      var G__3638 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__3636, G__3637, G__3638) : cljs.core.tv_pop_tail.call(null, G__3636, G__3637, G__3638);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__3639 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__3640 = level - 5;
        node = G__3639;
        level = G__3640;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__3642 = function(tcoll__$1) {
            return function cljs$core$go(level, node) {
              var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
              if (level === 0) {
                cljs.core.pv_aset(node__$1, n & 31, val);
                return node__$1;
              } else {
                var subidx = n >>> level & 31;
                cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
                return node__$1;
              }
            };
          }(tcoll__$1);
          return fexpr__3642(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__3643 = null;
  var G__3643__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3643__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3643 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3643__2.call(this, self__, k);
      case 3:
        return G__3643__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3643.cljs$core$IFn$_invoke$arity$2 = G__3643__2;
  G__3643.cljs$core$IFn$_invoke$arity$3 = G__3643__3;
  return G__3643;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args3641) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3641)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var and__4120__auto__ = !(self__.riter == null);
    if (and__4120__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4120__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__3644 = null;
  var G__3644__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3644__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3644 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3644__1.call(this, x);
      case 2:
        return G__3644__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3644.cljs$core$IFn$_invoke$arity$1 = G__3644__1;
  G__3644.cljs$core$IFn$_invoke$arity$2 = G__3644__2;
  return G__3644;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__3645 = null;
  var G__3645__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3645__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3645 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3645__1.call(this, x);
      case 2:
        return G__3645__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3645.cljs$core$IFn$_invoke$arity$1 = G__3645__1;
  G__3645.cljs$core$IFn$_invoke$arity$2 = G__3645__2;
  return G__3645;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
var G__3646_3649 = cljs.core.PersistentQueueSeq.prototype;
var G__3647_3650 = cljs.core.ITER_SYMBOL;
var G__3648_3651 = function(G__3646_3649, G__3647_3650) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3646_3649, G__3647_3650);
goog.object.set(G__3646_3649, G__3647_3650, G__3648_3651);
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__3652 = null;
  var G__3652__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3652__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3652 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3652__1.call(this, x);
      case 2:
        return G__3652__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3652.cljs$core$IFn$_invoke$arity$1 = G__3652__1;
  G__3652.cljs$core$IFn$_invoke$arity$2 = G__3652__2;
  return G__3652;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__3653 = null;
  var G__3653__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__3653__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3653 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3653__1.call(this, x);
      case 2:
        return G__3653__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3653.cljs$core$IFn$_invoke$arity$1 = G__3653__1;
  G__3653.cljs$core$IFn$_invoke$arity$2 = G__3653__2;
  return G__3653;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5718__auto__ = cljs.core.next(self__.front);
    if (temp__5718__auto__) {
      var f1 = temp__5718__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = self__.front;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4131__auto__ = self__.rear;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__3654_3657 = cljs.core.PersistentQueue.prototype;
var G__3655_3658 = cljs.core.ITER_SYMBOL;
var G__3656_3659 = function(G__3654_3657, G__3655_3658) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3654_3657, G__3655_3658);
goog.object.set(G__3654_3657, G__3655_3658, G__3656_3659);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__3661 = i + incr;
        i = G__3661;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__3662 = i + 1;
      var G__3663 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__3662;
      out = G__3663;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_3669 = 0;
  while (true) {
    if (i_3669 < l) {
      var k_3670 = ks[i_3669];
      var G__3666_3671 = new_obj;
      var G__3667_3672 = k_3670;
      var G__3668_3673 = goog.object.get(obj, k_3670);
      goog.object.set(G__3666_3671, G__3667_3672, G__3668_3673);
      var G__3674 = i_3669 + 1;
      i_3669 = G__3674;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__3677 = init__$1;
        var G__3678 = k;
        var G__3679 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3677, G__3678, G__3679) : f.call(null, G__3677, G__3678, G__3679);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3680 = cljs.core.rest(keys__$1);
        var G__3681 = init__$2;
        keys__$1 = G__3680;
        init__$1 = G__3681;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__3675_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3675_SHARP_, self__.strobj[p1__3675_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__3682 = null;
  var G__3682__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3682__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3682 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3682__2.call(this, self__, k);
      case 3:
        return G__3682__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3682.cljs$core$IFn$_invoke$arity$2 = G__3682__2;
  G__3682.cljs$core$IFn$_invoke$arity$3 = G__3682__3;
  return G__3682;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args3676) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3676)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = self__.i < self__.base_count;
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__3685 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3685, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3685, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__3688 = i + 2;
        i = G__3688;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__3689 = i + 2;
        i = G__3689;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__3690 = i + 2;
        i = G__3690;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__3691 = i + 2;
        i = G__3691;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__3692 = i + 2;
        i = G__3692;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_3693 = 0;
  while (true) {
    if (i_3693 < l) {
      narr[i_3693] = arr[i_3693];
      var G__3694 = i_3693 + 1;
      i_3693 = G__3694;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3696 = k;
  switch(G__3696) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__3698 = null;
  var G__3698__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3698__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3698 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3698__1.call(this, x);
      case 2:
        return G__3698__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3698.cljs$core$IFn$_invoke$arity$1 = G__3698__1;
  G__3698.cljs$core$IFn$_invoke$arity$2 = G__3698__2;
  return G__3698;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__3699 = null;
  var G__3699__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3699__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3699 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3699__1.call(this, x);
      case 2:
        return G__3699__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3699.cljs$core$IFn$_invoke$arity$1 = G__3699__1;
  G__3699.cljs$core$IFn$_invoke$arity$2 = G__3699__2;
  return G__3699;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__3700 = null;
  var G__3700__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3700__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3700 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3700__2.call(this, self__, k);
      case 3:
        return G__3700__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3700.cljs$core$IFn$_invoke$arity$2 = G__3700__2;
  G__3700.cljs$core$IFn$_invoke$arity$3 = G__3700__3;
  return G__3700;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args3695) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3695)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__3702 = null;
  var G__3702__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3702__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3702 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3702__1.call(this, x);
      case 2:
        return G__3702__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3702.cljs$core$IFn$_invoke$arity$1 = G__3702__1;
  G__3702.cljs$core$IFn$_invoke$arity$2 = G__3702__2;
  return G__3702;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__3703 = null;
  var G__3703__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3703__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3703 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3703__1.call(this, x);
      case 2:
        return G__3703__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3703.cljs$core$IFn$_invoke$arity$1 = G__3703__1;
  G__3703.cljs$core$IFn$_invoke$arity$2 = G__3703__2;
  return G__3703;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
var G__3704_3707 = cljs.core.PersistentArrayMapSeq.prototype;
var G__3705_3708 = cljs.core.ITER_SYMBOL;
var G__3706_3709 = function(G__3704_3707, G__3705_3708) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3704_3707, G__3705_3708);
goog.object.set(G__3704_3707, G__3705_3708, G__3706_3709);
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3711 = cljs.core.seq(coll);
  var chunk__3712 = null;
  var count__3713 = 0;
  var i__3714 = 0;
  while (true) {
    if (i__3714 < count__3713) {
      var vec__3721 = chunk__3712.cljs$core$IIndexed$_nth$arity$2(null, i__3714);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3721, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3721, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3733 = seq__3711;
      var G__3734 = chunk__3712;
      var G__3735 = count__3713;
      var G__3736 = i__3714 + 1;
      seq__3711 = G__3733;
      chunk__3712 = G__3734;
      count__3713 = G__3735;
      i__3714 = G__3736;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3711);
      if (temp__5720__auto__) {
        var seq__3711__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3711__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3711__$1);
          var G__3737 = cljs.core.chunk_rest(seq__3711__$1);
          var G__3738 = c__4550__auto__;
          var G__3739 = cljs.core.count(c__4550__auto__);
          var G__3740 = 0;
          seq__3711 = G__3737;
          chunk__3712 = G__3738;
          count__3713 = G__3739;
          i__3714 = G__3740;
          continue;
        } else {
          var vec__3724 = cljs.core.first(seq__3711__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3724, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3724, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3741 = cljs.core.next(seq__3711__$1);
          var G__3742 = null;
          var G__3743 = 0;
          var G__3744 = 0;
          seq__3711 = G__3741;
          chunk__3712 = G__3742;
          count__3713 = G__3743;
          i__3714 = G__3744;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__3727 = init__$1;
        var G__3728 = self__.arr[i];
        var G__3729 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3727, G__3728, G__3729) : f.call(null, G__3727, G__3728, G__3729);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3745 = i + 2;
        var G__3746 = init__$2;
        i = G__3745;
        init__$1 = G__3746;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__3747 = i + 2;
              i = G__3747;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__3748 = s + 2;
            var G__3749 = d;
            s = G__3748;
            d = G__3749;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__3750 = s + 2;
            var G__3751 = d + 2;
            s = G__3750;
            d = G__3751;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__3732 = cljs.core.aclone(self__.arr);
        G__3732[idx + 1] = v;
        return G__3732;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3752 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3753 = cljs.core.next(es);
          ret = G__3752;
          es = G__3753;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__3754 = null;
  var G__3754__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3754__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3754 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3754__2.call(this, self__, k);
      case 3:
        return G__3754__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3754.cljs$core$IFn$_invoke$arity$2 = G__3754__2;
  G__3754.cljs$core$IFn$_invoke$arity$3 = G__3754__3;
  return G__3754;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args3710) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3710)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_3755 = 0;
    while (true) {
      if (i_3755 < arr__$1.length) {
        var k_3756 = arr__$1[i_3755];
        var v_3757 = arr__$1[i_3755 + 1];
        var idx_3758 = cljs.core.array_index_of(ret, k_3756);
        if (idx_3758 === -1) {
          ret.push(k_3756);
          ret.push(v_3757);
        } else {
        }
        var G__3759 = i_3755 + 2;
        i_3755 = G__3759;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_3761 = 0;
  while (true) {
    if (i_3761 < arr.length) {
      var k_3762 = arr[i_3761];
      var v_3763 = arr[i_3761 + 1];
      var idx_3764 = cljs.core.array_index_of(ret, k_3762);
      if (idx_3764 === -1) {
        var G__3760_3765 = ret;
        G__3760_3765.push(k_3762);
        G__3760_3765.push(v_3763);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_3762)].join(""));
      }
      var G__3766 = i_3761 + 2;
      i_3761 = G__3766;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_3768 = 0;
  while (true) {
    if (i_3768 < arr.length) {
      var k_3769 = arr[i_3768];
      var v_3770 = arr[i_3768 + 1];
      var idx_3771 = cljs.core.array_index_of(ret, k_3769);
      if (idx_3771 === -1) {
        var G__3767_3772 = ret;
        G__3767_3772.push(k_3769);
        G__3767_3772.push(v_3770);
      } else {
        ret[idx_3771 + 1] = v_3770;
      }
      var G__3773 = i_3768 + 2;
      i_3768 = G__3773;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
var G__3774_3777 = cljs.core.PersistentArrayMap.prototype;
var G__3775_3778 = cljs.core.ITER_SYMBOL;
var G__3776_3779 = function(G__3774_3777, G__3775_3778) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3774_3777, G__3775_3778);
goog.object.set(G__3774_3777, G__3775_3778, G__3776_3779);
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3782 = cljs.core.next(es);
            var G__3783 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__3782;
            tcoll__$2 = G__3783;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__3781_3784 = self__.arr;
      G__3781_3784.pop();
      G__3781_3784.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__3785 = null;
  var G__3785__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__3785__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3785 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3785__2.call(this, self__, key);
      case 3:
        return G__3785__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3785.cljs$core$IFn$_invoke$arity$2 = G__3785__2;
  G__3785.cljs$core$IFn$_invoke$arity$3 = G__3785__3;
  return G__3785;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args3780) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3780)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__3786 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__3787 = i + 2;
      out = G__3786;
      i = G__3787;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__3789 = arguments.length;
  switch(G__3789) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__3790 = cljs.core.aclone(arr);
  G__3790[i] = a;
  return G__3790;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__3791 = cljs.core.aclone(arr);
  G__3791[i] = a;
  G__3791[j] = b;
  return G__3791;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__3794 = arguments.length;
  switch(G__3794) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__3796 = init__$1;
          var G__3797 = k;
          var G__3798 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3796, G__3797, G__3798) : f.call(null, G__3796, G__3797, G__3798);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__3799 = i + 2;
        var G__3800 = init__$2;
        i = G__3799;
        init__$1 = G__3800;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4131__auto__ = !(self__.next_entry == null);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = !(self__.next_iter == null);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_3801 = 0;
        var j_3802 = 0;
        while (true) {
          if (i_3801 < 32) {
            if ((self__.bitmap >>> i_3801 & 1) === 0) {
              var G__3803 = i_3801 + 1;
              var G__3804 = j_3802;
              i_3801 = G__3803;
              j_3802 = G__3804;
              continue;
            } else {
              nodes[i_3801] = !(self__.arr[j_3802] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_3802]), self__.arr[j_3802], self__.arr[j_3802 + 1], added_leaf_QMARK_) : self__.arr[j_3802 + 1];
              var G__3805 = i_3801 + 1;
              var G__3806 = j_3802 + 2;
              i_3801 = G__3805;
              j_3802 = G__3806;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_3807 = 0;
      var j_3808 = 0;
      while (true) {
        if (i_3807 < 32) {
          if ((self__.bitmap >>> i_3807 & 1) === 0) {
            var G__3809 = i_3807 + 1;
            var G__3810 = j_3808;
            i_3807 = G__3809;
            j_3808 = G__3810;
            continue;
          } else {
            nodes[i_3807] = !(self__.arr[j_3808] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_3808]), self__.arr[j_3808], self__.arr[j_3808 + 1], added_leaf_QMARK_) : self__.arr[j_3808 + 1];
            var G__3811 = i_3807 + 1;
            var G__3812 = j_3808 + 2;
            i_3807 = G__3811;
            j_3808 = G__3812;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__3813 = i + 1;
        var G__3814 = j + 2;
        var G__3815 = bitmap | 1 << i;
        i = G__3813;
        j = G__3814;
        bitmap = G__3815;
        continue;
      } else {
        var G__3816 = i + 1;
        var G__3817 = j;
        var G__3818 = bitmap;
        i = G__3816;
        j = G__3817;
        bitmap = G__3818;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__3819 = i + 1;
          var G__3820 = init__$2;
          i = G__3819;
          init__$1 = G__3820;
          continue;
        }
      } else {
        var G__3821 = i + 1;
        var G__3822 = init__$1;
        i = G__3821;
        init__$1 = G__3822;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__3823 = i + 2;
        i = G__3823;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__3825 = arguments.length;
  switch(G__3825) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__3827 = null;
  var G__3827__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3827__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3827 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3827__1.call(this, x);
      case 2:
        return G__3827__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3827.cljs$core$IFn$_invoke$arity$1 = G__3827__1;
  G__3827.cljs$core$IFn$_invoke$arity$2 = G__3827__2;
  return G__3827;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__3828 = null;
  var G__3828__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3828__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3828 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3828__1.call(this, x);
      case 2:
        return G__3828__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3828.cljs$core$IFn$_invoke$arity$1 = G__3828__1;
  G__3828.cljs$core$IFn$_invoke$arity$2 = G__3828__2;
  return G__3828;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
var G__3829_3832 = cljs.core.NodeSeq.prototype;
var G__3830_3833 = cljs.core.ITER_SYMBOL;
var G__3831_3834 = function(G__3829_3832, G__3830_3833) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3829_3832, G__3830_3833);
goog.object.set(G__3829_3832, G__3830_3833, G__3831_3834);
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__3836 = arguments.length;
  switch(G__3836) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5718__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5718__auto__)) {
            var node = temp__5718__auto__;
            var temp__5718__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5718__auto____$1)) {
              var node_seq = temp__5718__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__3838 = j + 2;
              j = G__3838;
              continue;
            }
          } else {
            var G__3839 = j + 2;
            j = G__3839;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__3840 = null;
  var G__3840__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3840__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3840 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3840__1.call(this, x);
      case 2:
        return G__3840__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3840.cljs$core$IFn$_invoke$arity$1 = G__3840__1;
  G__3840.cljs$core$IFn$_invoke$arity$2 = G__3840__2;
  return G__3840;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__3841 = null;
  var G__3841__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3841__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3841 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3841__1.call(this, x);
      case 2:
        return G__3841__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3841.cljs$core$IFn$_invoke$arity$1 = G__3841__1;
  G__3841.cljs$core$IFn$_invoke$arity$2 = G__3841__2;
  return G__3841;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
var G__3842_3845 = cljs.core.ArrayNodeSeq.prototype;
var G__3843_3846 = cljs.core.ITER_SYMBOL;
var G__3844_3847 = function(G__3842_3845, G__3843_3846) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3842_3845, G__3843_3846);
goog.object.set(G__3842_3845, G__3843_3846, G__3844_3847);
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__3849 = arguments.length;
  switch(G__3849) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5718__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5718__auto__)) {
          var nj = temp__5718__auto__;
          var temp__5718__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5718__auto____$1)) {
            var ns = temp__5718__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__3851 = j + 1;
            j = G__3851;
            continue;
          }
        } else {
          var G__3852 = j + 1;
          j = G__3852;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3854 = cljs.core.seq(coll);
  var chunk__3855 = null;
  var count__3856 = 0;
  var i__3857 = 0;
  while (true) {
    if (i__3857 < count__3856) {
      var vec__3864 = chunk__3855.cljs$core$IIndexed$_nth$arity$2(null, i__3857);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3864, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3864, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3872 = seq__3854;
      var G__3873 = chunk__3855;
      var G__3874 = count__3856;
      var G__3875 = i__3857 + 1;
      seq__3854 = G__3872;
      chunk__3855 = G__3873;
      count__3856 = G__3874;
      i__3857 = G__3875;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3854);
      if (temp__5720__auto__) {
        var seq__3854__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3854__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3854__$1);
          var G__3876 = cljs.core.chunk_rest(seq__3854__$1);
          var G__3877 = c__4550__auto__;
          var G__3878 = cljs.core.count(c__4550__auto__);
          var G__3879 = 0;
          seq__3854 = G__3876;
          chunk__3855 = G__3877;
          count__3856 = G__3878;
          i__3857 = G__3879;
          continue;
        } else {
          var vec__3867 = cljs.core.first(seq__3854__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3867, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3867, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3880 = cljs.core.next(seq__3854__$1);
          var G__3881 = null;
          var G__3882 = 0;
          var G__3883 = 0;
          seq__3854 = G__3880;
          chunk__3855 = G__3881;
          count__3856 = G__3882;
          i__3857 = G__3883;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3884 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3885 = cljs.core.next(es);
          ret = G__3884;
          es = G__3885;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__3886 = null;
  var G__3886__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3886__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3886 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3886__2.call(this, self__, k);
      case 3:
        return G__3886__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3886.cljs$core$IFn$_invoke$arity$2 = G__3886__2;
  G__3886.cljs$core$IFn$_invoke$arity$3 = G__3886__3;
  return G__3886;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args3853) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3853)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3887 = i + 2;
      var G__3888 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__3887;
      ret = G__3888;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3889 = i + 1;
      var G__3890 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__3889;
      out = G__3890;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_3891 = 0;
  while (true) {
    if (i_3891 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_3891], arr[i_3891 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_3891 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_3891])].join(""));
      } else {
        var G__3892 = i_3891 + 2;
        i_3891 = G__3892;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
var G__3893_3896 = cljs.core.PersistentHashMap.prototype;
var G__3894_3897 = cljs.core.ITER_SYMBOL;
var G__3895_3898 = function(G__3893_3896, G__3894_3897) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3893_3896, G__3894_3897);
goog.object.set(G__3893_3896, G__3894_3897, G__3895_3898);
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3900 = cljs.core.next(es);
            var G__3901 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__3900;
            tcoll__$1 = G__3901;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__3902 = null;
  var G__3902__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__3902__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3902 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3902__2.call(this, self__, key);
      case 3:
        return G__3902__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3902.cljs$core$IFn$_invoke$arity$2 = G__3902__2;
  G__3902.cljs$core$IFn$_invoke$arity$3 = G__3902__3;
  return G__3902;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args3899) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3899)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__3903 = ascending_QMARK_ ? t.left : t.right;
      var G__3904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__3903;
      stack__$1 = G__3904;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__3905 = null;
  var G__3905__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3905__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3905 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3905__1.call(this, x);
      case 2:
        return G__3905__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3905.cljs$core$IFn$_invoke$arity$1 = G__3905__1;
  G__3905.cljs$core$IFn$_invoke$arity$2 = G__3905__2;
  return G__3905;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__3906 = null;
  var G__3906__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3906__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3906 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3906__1.call(this, x);
      case 2:
        return G__3906__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3906.cljs$core$IFn$_invoke$arity$1 = G__3906__1;
  G__3906.cljs$core$IFn$_invoke$arity$2 = G__3906__2;
  return G__3906;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
var G__3907_3910 = cljs.core.PersistentTreeMapSeq.prototype;
var G__3908_3911 = cljs.core.ITER_SYMBOL;
var G__3909_3912 = function(G__3907_3910, G__3908_3911) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3907_3910, G__3908_3911);
goog.object.set(G__3907_3910, G__3908_3911, G__3909_3912);
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__3913 = node.left;
    var G__3914 = f;
    var G__3915 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3913, G__3914, G__3915) : cljs.core.tree_map_kv_reduce.call(null, G__3913, G__3914, G__3915);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__3916 = init__$1;
      var G__3917 = node.key;
      var G__3918 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3916, G__3917, G__3918) : f.call(null, G__3916, G__3917, G__3918);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__3919 = node.right;
        var G__3920 = f;
        var G__3921 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3919, G__3920, G__3921) : cljs.core.tree_map_kv_reduce.call(null, G__3919, G__3920, G__3921);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3923 = k;
  switch(G__3923) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__3925 = null;
  var G__3925__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3925__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3925 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3925__1.call(this, x);
      case 2:
        return G__3925__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3925.cljs$core$IFn$_invoke$arity$1 = G__3925__1;
  G__3925.cljs$core$IFn$_invoke$arity$2 = G__3925__2;
  return G__3925;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__3926 = null;
  var G__3926__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3926__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3926 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3926__1.call(this, x);
      case 2:
        return G__3926__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3926.cljs$core$IFn$_invoke$arity$1 = G__3926__1;
  G__3926.cljs$core$IFn$_invoke$arity$2 = G__3926__2;
  return G__3926;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__3927 = null;
  var G__3927__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3927__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3927 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3927__2.call(this, self__, k);
      case 3:
        return G__3927__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3927.cljs$core$IFn$_invoke$arity$2 = G__3927__2;
  G__3927.cljs$core$IFn$_invoke$arity$3 = G__3927__3;
  return G__3927;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args3922) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3922)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
var G__3928_3931 = cljs.core.BlackNode.prototype;
var G__3929_3932 = cljs.core.ITER_SYMBOL;
var G__3930_3933 = function(G__3928_3931, G__3929_3932) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3928_3931, G__3929_3932);
goog.object.set(G__3928_3931, G__3929_3932, G__3930_3933);
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3935 = k;
  switch(G__3935) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__3937 = null;
  var G__3937__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3937__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3937 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3937__1.call(this, x);
      case 2:
        return G__3937__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3937.cljs$core$IFn$_invoke$arity$1 = G__3937__1;
  G__3937.cljs$core$IFn$_invoke$arity$2 = G__3937__2;
  return G__3937;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__3938 = null;
  var G__3938__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3938__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3938 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3938__1.call(this, x);
      case 2:
        return G__3938__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3938.cljs$core$IFn$_invoke$arity$1 = G__3938__1;
  G__3938.cljs$core$IFn$_invoke$arity$2 = G__3938__2;
  return G__3938;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__3939 = null;
  var G__3939__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3939__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3939 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3939__2.call(this, self__, k);
      case 3:
        return G__3939__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3939.cljs$core$IFn$_invoke$arity$2 = G__3939__2;
  G__3939.cljs$core$IFn$_invoke$arity$3 = G__3939__3;
  return G__3939;
}();
cljs.core.RedNode.prototype.apply = function(self__, args3934) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3934)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
var G__3940_3943 = cljs.core.RedNode.prototype;
var G__3941_3944 = cljs.core.ITER_SYMBOL;
var G__3942_3945 = function(G__3940_3943, G__3941_3944) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3940_3943, G__3941_3944);
goog.object.set(G__3940_3943, G__3941_3944, G__3942_3945);
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__3946 = k;
      var G__3947 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3946, G__3947) : comp.call(null, G__3946, G__3947);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__3948 = comp;
          var G__3949 = tree.left;
          var G__3950 = k;
          var G__3951 = v;
          var G__3952 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3948, G__3949, G__3950, G__3951, G__3952) : cljs.core.tree_map_add.call(null, G__3948, G__3949, G__3950, G__3951, G__3952);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__3953 = comp;
          var G__3954 = tree.right;
          var G__3955 = k;
          var G__3956 = v;
          var G__3957 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3953, G__3954, G__3955, G__3956, G__3957) : cljs.core.tree_map_add.call(null, G__3953, G__3954, G__3955, G__3956, G__3957);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__3958 = left.right;
            var G__3959 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3958, G__3959) : cljs.core.tree_map_append.call(null, G__3958, G__3959);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__3960 = left.right;
            var G__3961 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3960, G__3961) : cljs.core.tree_map_append.call(null, G__3960, G__3961);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__3962 = left;
            var G__3963 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3962, G__3963) : cljs.core.tree_map_append.call(null, G__3962, G__3963);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__3964 = left.right;
            var G__3965 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3964, G__3965) : cljs.core.tree_map_append.call(null, G__3964, G__3965);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__3966 = k;
      var G__3967 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3966, G__3967) : comp.call(null, G__3966, G__3967);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__3968 = comp;
          var G__3969 = tree.left;
          var G__3970 = k;
          var G__3971 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3968, G__3969, G__3970, G__3971) : cljs.core.tree_map_remove.call(null, G__3968, G__3969, G__3970, G__3971);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__3972 = comp;
          var G__3973 = tree.right;
          var G__3974 = k;
          var G__3975 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3972, G__3973, G__3974, G__3975) : cljs.core.tree_map_remove.call(null, G__3972, G__3973, G__3974, G__3975);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__3976 = comp;
        var G__3977 = tree.left;
        var G__3978 = k;
        var G__3979 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3976, G__3977, G__3978, G__3979) : cljs.core.tree_map_replace.call(null, G__3976, G__3977, G__3978, G__3979);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__3980 = comp;
        var G__3981 = tree.right;
        var G__3982 = k;
        var G__3983 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3980, G__3981, G__3982, G__3983) : cljs.core.tree_map_replace.call(null, G__3980, G__3981, G__3982, G__3983);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3985 = cljs.core.seq(coll);
  var chunk__3986 = null;
  var count__3987 = 0;
  var i__3988 = 0;
  while (true) {
    if (i__3988 < count__3987) {
      var vec__3995 = chunk__3986.cljs$core$IIndexed$_nth$arity$2(null, i__3988);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3995, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3995, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4007 = seq__3985;
      var G__4008 = chunk__3986;
      var G__4009 = count__3987;
      var G__4010 = i__3988 + 1;
      seq__3985 = G__4007;
      chunk__3986 = G__4008;
      count__3987 = G__4009;
      i__3988 = G__4010;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3985);
      if (temp__5720__auto__) {
        var seq__3985__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3985__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3985__$1);
          var G__4011 = cljs.core.chunk_rest(seq__3985__$1);
          var G__4012 = c__4550__auto__;
          var G__4013 = cljs.core.count(c__4550__auto__);
          var G__4014 = 0;
          seq__3985 = G__4011;
          chunk__3986 = G__4012;
          count__3987 = G__4013;
          i__3988 = G__4014;
          continue;
        } else {
          var vec__3998 = cljs.core.first(seq__3985__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3998, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3998, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4015 = cljs.core.next(seq__3985__$1);
          var G__4016 = null;
          var G__4017 = 0;
          var G__4018 = 0;
          seq__3985 = G__4015;
          chunk__3986 = G__4016;
          count__3987 = G__4017;
          i__3988 = G__4018;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__4001 = k;
        var G__4002 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4001, G__4002) : self__.comp.call(null, G__4001, G__4002);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__4019 = t.left;
          t = G__4019;
          continue;
        } else {
          var G__4020 = t.right;
          t = G__4020;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__4021 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__4022 = cljs.core.next(es);
          ret = G__4021;
          es = G__4022;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__4023 = null;
  var G__4023__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4023__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4023 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4023__2.call(this, self__, k);
      case 3:
        return G__4023__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4023.cljs$core$IFn$_invoke$arity$2 = G__4023__2;
  G__4023.cljs$core$IFn$_invoke$arity$3 = G__4023__3;
  return G__4023;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args3984) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3984)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__4005 = k;
          var G__4006 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4005, G__4006) : self__.comp.call(null, G__4005, G__4006);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__4024 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__4025 = t.left;
              stack = G__4024;
              t = G__4025;
              continue;
            } else {
              var G__4026 = stack;
              var G__4027 = t.right;
              stack = G__4026;
              t = G__4027;
              continue;
            }
          } else {
            if (c > 0) {
              var G__4028 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__4029 = t.right;
              stack = G__4028;
              t = G__4029;
              continue;
            } else {
              var G__4030 = stack;
              var G__4031 = t.left;
              stack = G__4030;
              t = G__4031;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__4032_4035 = cljs.core.PersistentTreeMap.prototype;
var G__4033_4036 = cljs.core.ITER_SYMBOL;
var G__4034_4037 = function(G__4032_4035, G__4033_4036) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4032_4035, G__4033_4036);
goog.object.set(G__4032_4035, G__4033_4036, G__4034_4037);
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4039 = arguments.length;
  var i__4731__auto___4040 = 0;
  while (true) {
    if (i__4731__auto___4040 < len__4730__auto___4039) {
      args__4736__auto__.push(arguments[i__4731__auto___4040]);
      var G__4041 = i__4731__auto___4040 + 1;
      i__4731__auto___4040 = G__4041;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__4042 = cljs.core.nnext(in$);
      var G__4043 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4042;
      out = G__4043;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq4038) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4038));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4045 = arguments.length;
  var i__4731__auto___4046 = 0;
  while (true) {
    if (i__4731__auto___4046 < len__4730__auto___4045) {
      args__4736__auto__.push(arguments[i__4731__auto___4046]);
      var G__4047 = i__4731__auto___4046 + 1;
      i__4731__auto___4046 = G__4047;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq4044) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4044));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4054 = arguments.length;
  var i__4731__auto___4055 = 0;
  while (true) {
    if (i__4731__auto___4055 < len__4730__auto___4054) {
      args__4736__auto__.push(arguments[i__4731__auto___4055]);
      var G__4056 = i__4731__auto___4055 + 1;
      i__4731__auto___4055 = G__4056;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      var G__4051_4057 = obj;
      var G__4052_4058 = cljs.core.first(kvs);
      var G__4053_4059 = cljs.core.second(kvs);
      goog.object.set(G__4051_4057, G__4052_4058, G__4053_4059);
      var G__4060 = cljs.core.nnext(kvs);
      kvs = G__4060;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq4048) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4048));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4062 = arguments.length;
  var i__4731__auto___4063 = 0;
  while (true) {
    if (i__4731__auto___4063 < len__4730__auto___4062) {
      args__4736__auto__.push(arguments[i__4731__auto___4063]);
      var G__4064 = i__4731__auto___4063 + 1;
      i__4731__auto___4063 = G__4064;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__4065 = cljs.core.nnext(in$);
      var G__4066 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4065;
      out = G__4066;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq4061) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4061));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4069 = arguments.length;
  var i__4731__auto___4070 = 0;
  while (true) {
    if (i__4731__auto___4070 < len__4730__auto___4069) {
      args__4736__auto__.push(arguments[i__4731__auto___4070]);
      var G__4071 = i__4731__auto___4070 + 1;
      i__4731__auto___4070 = G__4071;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__4072 = cljs.core.nnext(in$);
      var G__4073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4072;
      out = G__4073;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq4067) {
  var G__4068 = cljs.core.first(seq4067);
  var seq4067__$1 = cljs.core.next(seq4067);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4068, seq4067__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__4076 = null;
  var G__4076__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4076__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4076 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4076__1.call(this, x);
      case 2:
        return G__4076__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4076.cljs$core$IFn$_invoke$arity$1 = G__4076__1;
  G__4076.cljs$core$IFn$_invoke$arity$2 = G__4076__2;
  return G__4076;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__4077 = null;
  var G__4077__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4077__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4077 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4077__1.call(this, x);
      case 2:
        return G__4077__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4077.cljs$core$IFn$_invoke$arity$1 = G__4077__1;
  G__4077.cljs$core$IFn$_invoke$arity$2 = G__4077__2;
  return G__4077;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
var G__4078_4081 = cljs.core.KeySeq.prototype;
var G__4079_4082 = cljs.core.ITER_SYMBOL;
var G__4080_4083 = function(G__4078_4081, G__4079_4082) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4078_4081, G__4079_4082);
goog.object.set(G__4078_4081, G__4079_4082, G__4080_4083);
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__4086 = null;
  var G__4086__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4086__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4086 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4086__1.call(this, x);
      case 2:
        return G__4086__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4086.cljs$core$IFn$_invoke$arity$1 = G__4086__1;
  G__4086.cljs$core$IFn$_invoke$arity$2 = G__4086__2;
  return G__4086;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__4087 = null;
  var G__4087__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4087__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4087 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4087__1.call(this, x);
      case 2:
        return G__4087__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4087.cljs$core$IFn$_invoke$arity$1 = G__4087__1;
  G__4087.cljs$core$IFn$_invoke$arity$2 = G__4087__2;
  return G__4087;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
var G__4088_4091 = cljs.core.ValSeq.prototype;
var G__4089_4092 = cljs.core.ITER_SYMBOL;
var G__4090_4093 = function(G__4088_4091, G__4089_4092) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4088_4091, G__4089_4092);
goog.object.set(G__4088_4091, G__4089_4092, G__4090_4093);
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4097 = arguments.length;
  var i__4731__auto___4098 = 0;
  while (true) {
    if (i__4731__auto___4098 < len__4730__auto___4097) {
      args__4736__auto__.push(arguments[i__4731__auto___4098]);
      var G__4099 = i__4731__auto___4098 + 1;
      i__4731__auto___4098 = G__4099;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__4094_SHARP_, p2__4095_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4131__auto__ = p1__4094_SHARP_;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__4095_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq4096) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4096));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4104 = arguments.length;
  var i__4731__auto___4105 = 0;
  while (true) {
    if (i__4731__auto___4105 < len__4730__auto___4104) {
      args__4736__auto__.push(arguments[i__4731__auto___4105]);
      var G__4106 = i__4731__auto___4105 + 1;
      i__4731__auto___4105 = G__4106;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__4102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__4103 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4102, G__4103) : f.call(null, G__4102, G__4103);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4131__auto__ = m1;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq4100) {
  var G__4101 = cljs.core.first(seq4100);
  var seq4100__$1 = cljs.core.next(seq4100);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4101, seq4100__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__4107 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__4108 = cljs.core.next(keys);
      ret = G__4107;
      keys = G__4108;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4112 = cljs.core.seq(coll);
  var chunk__4113 = null;
  var count__4114 = 0;
  var i__4115 = 0;
  while (true) {
    if (i__4115 < count__4114) {
      var vec__4122 = chunk__4113.cljs$core$IIndexed$_nth$arity$2(null, i__4115);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4122, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4122, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4131 = seq__4112;
      var G__4132 = chunk__4113;
      var G__4133 = count__4114;
      var G__4134 = i__4115 + 1;
      seq__4112 = G__4131;
      chunk__4113 = G__4132;
      count__4114 = G__4133;
      i__4115 = G__4134;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4112);
      if (temp__5720__auto__) {
        var seq__4112__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4112__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4112__$1);
          var G__4135 = cljs.core.chunk_rest(seq__4112__$1);
          var G__4136 = c__4550__auto__;
          var G__4137 = cljs.core.count(c__4550__auto__);
          var G__4138 = 0;
          seq__4112 = G__4135;
          chunk__4113 = G__4136;
          count__4114 = G__4137;
          i__4115 = G__4138;
          continue;
        } else {
          var vec__4125 = cljs.core.first(seq__4112__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4125, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4125, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4139 = cljs.core.next(seq__4112__$1);
          var G__4140 = null;
          var G__4141 = 0;
          var G__4142 = 0;
          seq__4112 = G__4139;
          chunk__4113 = G__4140;
          count__4114 = G__4141;
          i__4115 = G__4142;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var entry = temp__5718__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4120__auto__ = cljs.core.set_QMARK_(other);
  if (and__4120__auto__) {
    var and__4120__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4120__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4120__auto____$1, and__4120__auto__, coll__$1) {
          return function(p1__4110_SHARP_, p2__4109_SHARP_) {
            var or__4131__auto__ = cljs.core.contains_QMARK_(other, p2__4109_SHARP_);
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4120__auto____$1, and__4120__auto__, coll__$1), true, self__.hash_map);
      } catch (e4130) {
        if (e4130 instanceof Error) {
          var ex = e4130;
          return false;
        } else {
          throw e4130;
        }
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__4143 = null;
  var G__4143__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4143__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4143 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4143__2.call(this, self__, k);
      case 3:
        return G__4143__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4143.cljs$core$IFn$_invoke$arity$2 = G__4143__2;
  G__4143.cljs$core$IFn$_invoke$arity$3 = G__4143__3;
  return G__4143;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args4111) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4111)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__4144 = i + 1;
        var G__4145 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__4144;
        out = G__4145;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__4146 = i + 1;
        var G__4147 = cljs.core._conj_BANG_(out, items[i]);
        i = G__4146;
        out = G__4147;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4607__auto___4148 = len;
  var i_4149 = 0;
  while (true) {
    if (i_4149 < n__4607__auto___4148) {
      cljs.core._conj_BANG_(t, items[i_4149]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_4149 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_4149])].join(""));
      }
      var G__4150 = i_4149 + 1;
      i_4149 = G__4150;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4607__auto___4151 = len;
  var i_4152 = 0;
  while (true) {
    if (i_4152 < n__4607__auto___4151) {
      cljs.core._conj_BANG_(t, items[i_4152]);
      var G__4153 = i_4152 + 1;
      i_4152 = G__4153;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
var G__4154_4157 = cljs.core.PersistentHashSet.prototype;
var G__4155_4158 = cljs.core.ITER_SYMBOL;
var G__4156_4159 = function(G__4154_4157, G__4155_4158) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4154_4157, G__4155_4158);
goog.object.set(G__4154_4157, G__4155_4158, G__4156_4159);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__4161 = null;
  var G__4161__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__4161__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__4161 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4161__2.call(this, self__, k);
      case 3:
        return G__4161__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4161.cljs$core$IFn$_invoke$arity$2 = G__4161__2;
  G__4161.cljs$core$IFn$_invoke$arity$3 = G__4161__3;
  return G__4161;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args4160) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4160)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4165 = cljs.core.seq(coll);
  var chunk__4166 = null;
  var count__4167 = 0;
  var i__4168 = 0;
  while (true) {
    if (i__4168 < count__4167) {
      var vec__4175 = chunk__4166.cljs$core$IIndexed$_nth$arity$2(null, i__4168);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4175, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4175, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4184 = seq__4165;
      var G__4185 = chunk__4166;
      var G__4186 = count__4167;
      var G__4187 = i__4168 + 1;
      seq__4165 = G__4184;
      chunk__4166 = G__4185;
      count__4167 = G__4186;
      i__4168 = G__4187;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4165);
      if (temp__5720__auto__) {
        var seq__4165__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4165__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4165__$1);
          var G__4188 = cljs.core.chunk_rest(seq__4165__$1);
          var G__4189 = c__4550__auto__;
          var G__4190 = cljs.core.count(c__4550__auto__);
          var G__4191 = 0;
          seq__4165 = G__4188;
          chunk__4166 = G__4189;
          count__4167 = G__4190;
          i__4168 = G__4191;
          continue;
        } else {
          var vec__4178 = cljs.core.first(seq__4165__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4178, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4178, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4192 = cljs.core.next(seq__4165__$1);
          var G__4193 = null;
          var G__4194 = 0;
          var G__4195 = 0;
          seq__4165 = G__4192;
          chunk__4166 = G__4193;
          count__4167 = G__4194;
          i__4168 = G__4195;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4120__auto__ = cljs.core.set_QMARK_(other);
  if (and__4120__auto__) {
    var and__4120__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4120__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4120__auto____$1, and__4120__auto__, coll__$1) {
          return function(p1__4163_SHARP_, p2__4162_SHARP_) {
            var or__4131__auto__ = cljs.core.contains_QMARK_(other, p2__4162_SHARP_);
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4120__auto____$1, and__4120__auto__, coll__$1), true, self__.tree_map);
      } catch (e4183) {
        if (e4183 instanceof Error) {
          var ex = e4183;
          return false;
        } else {
          throw e4183;
        }
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__4196 = null;
  var G__4196__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4196__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4196 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4196__2.call(this, self__, k);
      case 3:
        return G__4196__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4196.cljs$core$IFn$_invoke$arity$2 = G__4196__2;
  G__4196.cljs$core$IFn$_invoke$arity$3 = G__4196__3;
  return G__4196;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args4164) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4164)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__4197_4200 = cljs.core.PersistentTreeSet.prototype;
var G__4198_4201 = cljs.core.ITER_SYMBOL;
var G__4199_4202 = function(G__4197_4200, G__4198_4201) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4197_4200, G__4198_4201);
goog.object.set(G__4197_4200, G__4198_4201, G__4199_4202);
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4604__auto__ = arr;
    var l__4605__auto__ = a__4604__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4605__auto__) {
        var G__4203 = i + 1;
        var G__4204 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__4203;
        res = G__4204;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__4205 = cljs.core.next(in$__$1);
            var G__4206 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__4205;
            out = G__4206;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__4209 = arguments.length;
  switch(G__4209) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4211 = arguments.length;
      var i__4731__auto___4212 = 0;
      while (true) {
        if (i__4731__auto___4212 < len__4730__auto___4211) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4212]);
          var G__4213 = i__4731__auto___4212 + 1;
          i__4731__auto___4212 = G__4213;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4752__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq4208) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4208));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4215 = arguments.length;
  var i__4731__auto___4216 = 0;
  while (true) {
    if (i__4731__auto___4216 < len__4730__auto___4215) {
      args__4736__auto__.push(arguments[i__4731__auto___4216]);
      var G__4217 = i__4731__auto___4216 + 1;
      i__4731__auto___4216 = G__4217;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq4214) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4214));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4220 = arguments.length;
  var i__4731__auto___4221 = 0;
  while (true) {
    if (i__4731__auto___4221 < len__4730__auto___4220) {
      args__4736__auto__.push(arguments[i__4731__auto___4221]);
      var G__4222 = i__4731__auto___4221 + 1;
      i__4731__auto___4221 = G__4222;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq4218) {
  var G__4219 = cljs.core.first(seq4218);
  var seq4218__$1 = cljs.core.next(seq4218);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4219, seq4218__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__4226 = arguments.length;
  switch(G__4226) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__4223_SHARP_) {
    var temp__5718__auto__ = cljs.core.find(smap, p1__4223_SHARP_);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var e = temp__5718__auto__;
      return cljs.core.val(e);
    } else {
      return p1__4223_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__5718__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__5718__auto__)) {
          var e = temp__5718__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__4224_SHARP_) {
      var temp__5718__auto__ = cljs.core.find(smap, p1__4224_SHARP_);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var e = temp__5718__auto__;
        return cljs.core.second(e);
      } else {
        return p1__4224_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__4229 = arguments.length;
  switch(G__4229) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__4240 = null;
        var G__4240__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4240__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4240__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
            return result;
          } else {
            seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4240 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4240__0.call(this);
            case 1:
              return G__4240__1.call(this, result);
            case 2:
              return G__4240__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4240.cljs$core$IFn$_invoke$arity$0 = G__4240__0;
        G__4240.cljs$core$IFn$_invoke$arity$1 = G__4240__1;
        G__4240.cljs$core$IFn$_invoke$arity$2 = G__4240__2;
        return G__4240;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__4234 = function(p__4235, seen__$1) {
        while (true) {
          var vec__4236 = p__4235;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4236, 0, null);
          var xs__$1 = vec__4236;
          var temp__5720__auto__ = cljs.core.seq(xs__$1);
          if (temp__5720__auto__) {
            var s = temp__5720__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__4241 = cljs.core.rest(s);
              var G__4242 = seen__$1;
              p__4235 = G__4241;
              seen__$1 = G__4242;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__4234(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__4243 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__4244 = cljs.core.next(s__$1);
      ret = G__4243;
      s__$1 = G__4244;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return cljs.core._name(x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__4246 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__4247 = cljs.core.next(ks);
      var G__4248 = cljs.core.next(vs);
      map = G__4246;
      ks = G__4247;
      vs = G__4248;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__4256 = arguments.length;
  switch(G__4256) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4258 = arguments.length;
      var i__4731__auto___4259 = 0;
      while (true) {
        if (i__4731__auto___4259 < len__4730__auto___4258) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4259]);
          var G__4260 = i__4731__auto___4259 + 1;
          i__4731__auto___4259 = G__4260;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4249_SHARP_, p2__4250_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__4249_SHARP_, p2__4250_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq4252) {
  var G__4253 = cljs.core.first(seq4252);
  var seq4252__$1 = cljs.core.next(seq4252);
  var G__4254 = cljs.core.first(seq4252__$1);
  var seq4252__$2 = cljs.core.next(seq4252__$1);
  var G__4255 = cljs.core.first(seq4252__$2);
  var seq4252__$3 = cljs.core.next(seq4252__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4253, G__4254, G__4255, seq4252__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__4268 = arguments.length;
  switch(G__4268) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4270 = arguments.length;
      var i__4731__auto___4271 = 0;
      while (true) {
        if (i__4731__auto___4271 < len__4730__auto___4270) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4271]);
          var G__4272 = i__4731__auto___4271 + 1;
          i__4731__auto___4271 = G__4272;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4261_SHARP_, p2__4262_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__4261_SHARP_, p2__4262_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq4264) {
  var G__4265 = cljs.core.first(seq4264);
  var seq4264__$1 = cljs.core.next(seq4264);
  var G__4266 = cljs.core.first(seq4264__$1);
  var seq4264__$2 = cljs.core.next(seq4264__$1);
  var G__4267 = cljs.core.first(seq4264__$2);
  var seq4264__$3 = cljs.core.next(seq4264__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4265, G__4266, G__4267, seq4264__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__4274 = arguments.length;
  switch(G__4274) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__4276 = null;
        var G__4276__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4276__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4276__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__4276 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4276__0.call(this);
            case 1:
              return G__4276__1.call(this, result);
            case 2:
              return G__4276__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4276.cljs$core$IFn$_invoke$arity$0 = G__4276__0;
        G__4276.cljs$core$IFn$_invoke$arity$1 = G__4276__1;
        G__4276.cljs$core$IFn$_invoke$arity$2 = G__4276__2;
        return G__4276;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__4278 = arguments.length;
  switch(G__4278) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__4281 = null;
      var G__4281__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4281__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4281__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__4281 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4281__0.call(this);
          case 1:
            return G__4281__1.call(this, result);
          case 2:
            return G__4281__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4281.cljs$core$IFn$_invoke$arity$0 = G__4281__0;
      G__4281.cljs$core$IFn$_invoke$arity$1 = G__4281__1;
      G__4281.cljs$core$IFn$_invoke$arity$2 = G__4281__2;
      return G__4281;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.truth_(function() {
        var G__4279 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4279) : pred.call(null, G__4279);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__4282 = function() {
      var G__4284 = cljs.core._entry_key(sc, e);
      var G__4285 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4284, G__4285) : comp.call(null, G__4284, G__4285);
    }();
    var G__4283 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__4282, G__4283) : test.call(null, G__4282, G__4283);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__4287 = arguments.length;
  switch(G__4287) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4288 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__4288.cljs$core$IFn$_invoke$arity$1 ? fexpr__4288.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4288.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4289 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4289, 0, null);
      var s = vec__4289;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4292 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4292, 0, null);
    var s = vec__4292;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__4295 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__4295.cljs$core$IFn$_invoke$arity$1 ? fexpr__4295.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4295.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__4298 = arguments.length;
  switch(G__4298) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4299 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__4299.cljs$core$IFn$_invoke$arity$1 ? fexpr__4299.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4299.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4300 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4300, 0, null);
      var s = vec__4300;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4303 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4303, 0, null);
    var s = vec__4303;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__4306 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__4306.cljs$core$IFn$_invoke$arity$1 ? fexpr__4306.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4306.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__4309 = null;
  var G__4309__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4309__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4309 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4309__1.call(this, x);
      case 2:
        return G__4309__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4309.cljs$core$IFn$_invoke$arity$1 = G__4309__1;
  G__4309.cljs$core$IFn$_invoke$arity$2 = G__4309__2;
  return G__4309;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__4310 = null;
  var G__4310__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4310__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4310 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4310__1.call(this, x);
      case 2:
        return G__4310__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4310.cljs$core$IFn$_invoke$arity$1 = G__4310__1;
  G__4310.cljs$core$IFn$_invoke$arity$2 = G__4310__2;
  return G__4310;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__4308 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__4308);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__4311 = i + self__.step;
        var G__4312 = ret__$1;
        i = G__4311;
        ret = G__4312;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
var G__4313_4316 = cljs.core.Range.prototype;
var G__4314_4317 = cljs.core.ITER_SYMBOL;
var G__4315_4318 = function(G__4313_4316, G__4314_4317) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4313_4316, G__4314_4317);
goog.object.set(G__4313_4316, G__4314_4317, G__4315_4318);
cljs.core.range = function cljs$core$range(var_args) {
  var G__4320 = arguments.length;
  switch(G__4320) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__4323 = arguments.length;
  switch(G__4323) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__4325 = null;
        var G__4325__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4325__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4325__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__4325 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4325__0.call(this);
            case 1:
              return G__4325__1.call(this, result);
            case 2:
              return G__4325__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4325.cljs$core$IFn$_invoke$arity$0 = G__4325__0;
        G__4325.cljs$core$IFn$_invoke$arity$1 = G__4325__1;
        G__4325.cljs$core$IFn$_invoke$arity$2 = G__4325__2;
        return G__4325;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__4328 = arguments.length;
  switch(G__4328) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__4330 = null;
        var G__4330__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4330__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4330__2 = function(result, input) {
          var pval = cljs.core.deref(pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__4330 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4330__0.call(this);
            case 1:
              return G__4330__1.call(this, result);
            case 2:
              return G__4330__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4330.cljs$core$IFn$_invoke$arity$0 = G__4330__0;
        G__4330.cljs$core$IFn$_invoke$arity$1 = G__4330__1;
        G__4330.cljs$core$IFn$_invoke$arity$2 = G__4330__2;
        return G__4330;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__5720__auto__) {
        return function(p1__4326_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__4326_SHARP_) : f.call(null, p1__4326_SHARP_));
        };
      }(fst, fv, s, temp__5720__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function(fst, fv, run, s, temp__5720__auto__) {
        return function() {
          return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
        };
      }(fst, fv, run, s, temp__5720__auto__), null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__4332 = arguments.length;
  switch(G__4332) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5718__auto__ = cljs.core.seq(coll);
    if (temp__5718__auto__) {
      var s = temp__5718__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__4333 = init;
          var G__4334 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4333, G__4334) : f.call(null, G__4333, G__4334);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__4351 = arguments.length;
  switch(G__4351) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4353 = arguments.length;
      var i__4731__auto___4354 = 0;
      while (true) {
        if (i__4731__auto___4354 < len__4730__auto___4353) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4354]);
          var G__4355 = i__4731__auto___4354 + 1;
          i__4731__auto___4354 = G__4355;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__4356 = null;
    var G__4356__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__4356__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__4356__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__4356__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__4356__4 = function() {
      var G__4357__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__4357 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4358__i = 0, G__4358__a = new Array(arguments.length - 3);
          while (G__4358__i < G__4358__a.length) {
            G__4358__a[G__4358__i] = arguments[G__4358__i + 3];
            ++G__4358__i;
          }
          args = new cljs.core.IndexedSeq(G__4358__a, 0, null);
        }
        return G__4357__delegate.call(this, x, y, z, args);
      };
      G__4357.cljs$lang$maxFixedArity = 3;
      G__4357.cljs$lang$applyTo = function(arglist__4359) {
        var x = cljs.core.first(arglist__4359);
        arglist__4359 = cljs.core.next(arglist__4359);
        var y = cljs.core.first(arglist__4359);
        arglist__4359 = cljs.core.next(arglist__4359);
        var z = cljs.core.first(arglist__4359);
        var args = cljs.core.rest(arglist__4359);
        return G__4357__delegate(x, y, z, args);
      };
      G__4357.cljs$core$IFn$_invoke$arity$variadic = G__4357__delegate;
      return G__4357;
    }();
    G__4356 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4356__0.call(this);
        case 1:
          return G__4356__1.call(this, x);
        case 2:
          return G__4356__2.call(this, x, y);
        case 3:
          return G__4356__3.call(this, x, y, z);
        default:
          var G__4360 = null;
          if (arguments.length > 3) {
            var G__4361__i = 0, G__4361__a = new Array(arguments.length - 3);
            while (G__4361__i < G__4361__a.length) {
              G__4361__a[G__4361__i] = arguments[G__4361__i + 3];
              ++G__4361__i;
            }
            G__4360 = new cljs.core.IndexedSeq(G__4361__a, 0, null);
          }
          return G__4356__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4360);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4356.cljs$lang$maxFixedArity = 3;
    G__4356.cljs$lang$applyTo = G__4356__4.cljs$lang$applyTo;
    G__4356.cljs$core$IFn$_invoke$arity$0 = G__4356__0;
    G__4356.cljs$core$IFn$_invoke$arity$1 = G__4356__1;
    G__4356.cljs$core$IFn$_invoke$arity$2 = G__4356__2;
    G__4356.cljs$core$IFn$_invoke$arity$3 = G__4356__3;
    G__4356.cljs$core$IFn$_invoke$arity$variadic = G__4356__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4356;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__4362 = null;
    var G__4362__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__4362__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__4362__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__4362__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__4362__4 = function() {
      var G__4363__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__4363 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4364__i = 0, G__4364__a = new Array(arguments.length - 3);
          while (G__4364__i < G__4364__a.length) {
            G__4364__a[G__4364__i] = arguments[G__4364__i + 3];
            ++G__4364__i;
          }
          args = new cljs.core.IndexedSeq(G__4364__a, 0, null);
        }
        return G__4363__delegate.call(this, x, y, z, args);
      };
      G__4363.cljs$lang$maxFixedArity = 3;
      G__4363.cljs$lang$applyTo = function(arglist__4365) {
        var x = cljs.core.first(arglist__4365);
        arglist__4365 = cljs.core.next(arglist__4365);
        var y = cljs.core.first(arglist__4365);
        arglist__4365 = cljs.core.next(arglist__4365);
        var z = cljs.core.first(arglist__4365);
        var args = cljs.core.rest(arglist__4365);
        return G__4363__delegate(x, y, z, args);
      };
      G__4363.cljs$core$IFn$_invoke$arity$variadic = G__4363__delegate;
      return G__4363;
    }();
    G__4362 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4362__0.call(this);
        case 1:
          return G__4362__1.call(this, x);
        case 2:
          return G__4362__2.call(this, x, y);
        case 3:
          return G__4362__3.call(this, x, y, z);
        default:
          var G__4366 = null;
          if (arguments.length > 3) {
            var G__4367__i = 0, G__4367__a = new Array(arguments.length - 3);
            while (G__4367__i < G__4367__a.length) {
              G__4367__a[G__4367__i] = arguments[G__4367__i + 3];
              ++G__4367__i;
            }
            G__4366 = new cljs.core.IndexedSeq(G__4367__a, 0, null);
          }
          return G__4362__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4366);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4362.cljs$lang$maxFixedArity = 3;
    G__4362.cljs$lang$applyTo = G__4362__4.cljs$lang$applyTo;
    G__4362.cljs$core$IFn$_invoke$arity$0 = G__4362__0;
    G__4362.cljs$core$IFn$_invoke$arity$1 = G__4362__1;
    G__4362.cljs$core$IFn$_invoke$arity$2 = G__4362__2;
    G__4362.cljs$core$IFn$_invoke$arity$3 = G__4362__3;
    G__4362.cljs$core$IFn$_invoke$arity$variadic = G__4362__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4362;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__4368 = null;
    var G__4368__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__4368__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__4368__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__4368__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__4368__4 = function() {
      var G__4369__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__4369 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4370__i = 0, G__4370__a = new Array(arguments.length - 3);
          while (G__4370__i < G__4370__a.length) {
            G__4370__a[G__4370__i] = arguments[G__4370__i + 3];
            ++G__4370__i;
          }
          args = new cljs.core.IndexedSeq(G__4370__a, 0, null);
        }
        return G__4369__delegate.call(this, x, y, z, args);
      };
      G__4369.cljs$lang$maxFixedArity = 3;
      G__4369.cljs$lang$applyTo = function(arglist__4371) {
        var x = cljs.core.first(arglist__4371);
        arglist__4371 = cljs.core.next(arglist__4371);
        var y = cljs.core.first(arglist__4371);
        arglist__4371 = cljs.core.next(arglist__4371);
        var z = cljs.core.first(arglist__4371);
        var args = cljs.core.rest(arglist__4371);
        return G__4369__delegate(x, y, z, args);
      };
      G__4369.cljs$core$IFn$_invoke$arity$variadic = G__4369__delegate;
      return G__4369;
    }();
    G__4368 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4368__0.call(this);
        case 1:
          return G__4368__1.call(this, x);
        case 2:
          return G__4368__2.call(this, x, y);
        case 3:
          return G__4368__3.call(this, x, y, z);
        default:
          var G__4372 = null;
          if (arguments.length > 3) {
            var G__4373__i = 0, G__4373__a = new Array(arguments.length - 3);
            while (G__4373__i < G__4373__a.length) {
              G__4373__a[G__4373__i] = arguments[G__4373__i + 3];
              ++G__4373__i;
            }
            G__4372 = new cljs.core.IndexedSeq(G__4373__a, 0, null);
          }
          return G__4368__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4372);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4368.cljs$lang$maxFixedArity = 3;
    G__4368.cljs$lang$applyTo = G__4368__4.cljs$lang$applyTo;
    G__4368.cljs$core$IFn$_invoke$arity$0 = G__4368__0;
    G__4368.cljs$core$IFn$_invoke$arity$1 = G__4368__1;
    G__4368.cljs$core$IFn$_invoke$arity$2 = G__4368__2;
    G__4368.cljs$core$IFn$_invoke$arity$3 = G__4368__3;
    G__4368.cljs$core$IFn$_invoke$arity$variadic = G__4368__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4368;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__4374 = null;
      var G__4374__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4336_SHARP_, p2__4337_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4336_SHARP_, p2__4337_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4337_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4337_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4338_SHARP_, p2__4339_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4338_SHARP_, p2__4339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4339_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__4339_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4340_SHARP_, p2__4341_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4340_SHARP_, p2__4341_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4341_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__4341_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4342_SHARP_, p2__4343_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4342_SHARP_, p2__4343_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4343_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__4343_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__4 = function() {
        var G__4375__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__4344_SHARP_, p2__4345_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4344_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4345_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__4375 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__4376__i = 0, G__4376__a = new Array(arguments.length - 3);
            while (G__4376__i < G__4376__a.length) {
              G__4376__a[G__4376__i] = arguments[G__4376__i + 3];
              ++G__4376__i;
            }
            args = new cljs.core.IndexedSeq(G__4376__a, 0, null);
          }
          return G__4375__delegate.call(this, x, y, z, args);
        };
        G__4375.cljs$lang$maxFixedArity = 3;
        G__4375.cljs$lang$applyTo = function(arglist__4377) {
          var x = cljs.core.first(arglist__4377);
          arglist__4377 = cljs.core.next(arglist__4377);
          var y = cljs.core.first(arglist__4377);
          arglist__4377 = cljs.core.next(arglist__4377);
          var z = cljs.core.first(arglist__4377);
          var args = cljs.core.rest(arglist__4377);
          return G__4375__delegate(x, y, z, args);
        };
        G__4375.cljs$core$IFn$_invoke$arity$variadic = G__4375__delegate;
        return G__4375;
      }();
      G__4374 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__4374__0.call(this);
          case 1:
            return G__4374__1.call(this, x);
          case 2:
            return G__4374__2.call(this, x, y);
          case 3:
            return G__4374__3.call(this, x, y, z);
          default:
            var G__4378 = null;
            if (arguments.length > 3) {
              var G__4379__i = 0, G__4379__a = new Array(arguments.length - 3);
              while (G__4379__i < G__4379__a.length) {
                G__4379__a[G__4379__i] = arguments[G__4379__i + 3];
                ++G__4379__i;
              }
              G__4378 = new cljs.core.IndexedSeq(G__4379__a, 0, null);
            }
            return G__4374__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4378);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4374.cljs$lang$maxFixedArity = 3;
      G__4374.cljs$lang$applyTo = G__4374__4.cljs$lang$applyTo;
      G__4374.cljs$core$IFn$_invoke$arity$0 = G__4374__0;
      G__4374.cljs$core$IFn$_invoke$arity$1 = G__4374__1;
      G__4374.cljs$core$IFn$_invoke$arity$2 = G__4374__2;
      G__4374.cljs$core$IFn$_invoke$arity$3 = G__4374__3;
      G__4374.cljs$core$IFn$_invoke$arity$variadic = G__4374__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__4374;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq4347) {
  var G__4348 = cljs.core.first(seq4347);
  var seq4347__$1 = cljs.core.next(seq4347);
  var G__4349 = cljs.core.first(seq4347__$1);
  var seq4347__$2 = cljs.core.next(seq4347__$1);
  var G__4350 = cljs.core.first(seq4347__$2);
  var seq4347__$3 = cljs.core.next(seq4347__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4348, G__4349, G__4350, seq4347__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__4381 = arguments.length;
  switch(G__4381) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var G__4383 = cljs.core.next(s);
      coll = G__4383;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__4384 = n - 1;
      var G__4385 = cljs.core.next(coll);
      n = G__4384;
      coll = G__4385;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__4387 = arguments.length;
  switch(G__4387) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5724__auto__ = re.exec(s);
  if (temp__5724__auto__ == null) {
    return null;
  } else {
    var matches = temp__5724__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function(match_str, match_vals, matches, temp__5724__auto__) {
      return function() {
        var post_idx = matches.index + function() {
          var x__4219__auto__ = 1;
          var y__4220__auto__ = match_str.length;
          return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
        }();
        if (post_idx <= s.length) {
          var G__4389 = re;
          var G__4390 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
          return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__4389, G__4390) : cljs.core.re_seq_STAR_.call(null, G__4389, G__4390);
        } else {
          return null;
        }
      };
    }(match_str, match_vals, matches, temp__5724__auto__), null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__4391 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4391, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4391, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4131__auto__ = flags;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__4394 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__4395 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__4395;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__4396_4402 = cljs.core.first(coll);
          var G__4397_4403 = writer;
          var G__4398_4404 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4396_4402, G__4397_4403, G__4398_4404) : print_one.call(null, G__4396_4402, G__4397_4403, G__4398_4404);
        } else {
        }
        var coll_4405__$1 = cljs.core.next(coll);
        var n_4406 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_4405__$1 && (n_4406 == null || !(n_4406 === 0))) {
            cljs.core._write(writer, sep);
            var G__4399_4407 = cljs.core.first(coll_4405__$1);
            var G__4400_4408 = writer;
            var G__4401_4409 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4399_4407, G__4400_4408, G__4401_4409) : print_one.call(null, G__4399_4407, G__4400_4408, G__4401_4409);
            var G__4410 = cljs.core.next(coll_4405__$1);
            var G__4411 = n_4406 - 1;
            coll_4405__$1 = G__4410;
            n_4406 = G__4411;
            continue;
          } else {
            if (cljs.core.seq(coll_4405__$1) && n_4406 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__4394;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4418 = arguments.length;
  var i__4731__auto___4419 = 0;
  while (true) {
    if (i__4731__auto___4419 < len__4730__auto___4418) {
      args__4736__auto__.push(arguments[i__4731__auto___4419]);
      var G__4420 = i__4731__auto___4419 + 1;
      i__4731__auto___4419 = G__4420;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__4414 = cljs.core.seq(ss);
  var chunk__4415 = null;
  var count__4416 = 0;
  var i__4417 = 0;
  while (true) {
    if (i__4417 < count__4416) {
      var s = chunk__4415.cljs$core$IIndexed$_nth$arity$2(null, i__4417);
      cljs.core._write(writer, s);
      var G__4421 = seq__4414;
      var G__4422 = chunk__4415;
      var G__4423 = count__4416;
      var G__4424 = i__4417 + 1;
      seq__4414 = G__4421;
      chunk__4415 = G__4422;
      count__4416 = G__4423;
      i__4417 = G__4424;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4414);
      if (temp__5720__auto__) {
        var seq__4414__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4414__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4414__$1);
          var G__4425 = cljs.core.chunk_rest(seq__4414__$1);
          var G__4426 = c__4550__auto__;
          var G__4427 = cljs.core.count(c__4550__auto__);
          var G__4428 = 0;
          seq__4414 = G__4425;
          chunk__4415 = G__4426;
          count__4416 = G__4427;
          i__4417 = G__4428;
          continue;
        } else {
          var s = cljs.core.first(seq__4414__$1);
          cljs.core._write(writer, s);
          var G__4429 = cljs.core.next(seq__4414__$1);
          var G__4430 = null;
          var G__4431 = 0;
          var G__4432 = 0;
          seq__4414 = G__4429;
          chunk__4415 = G__4430;
          count__4416 = G__4431;
          i__4417 = G__4432;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq4412) {
  var G__4413 = cljs.core.first(seq4412);
  var seq4412__$1 = cljs.core.next(seq4412);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4413, seq4412__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj4434 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj4434;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4120__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4120__auto__) {
    var and__4120__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4120__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__4439 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__4439);
                  } else {
                    return G__4439;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = cljs.core.truth_(function() {
                      var or__4131__auto__ = name == null;
                      if (or__4131__auto__) {
                        return or__4131__auto__;
                      } else {
                        return goog.string.isEmpty(name);
                      }
                    }()) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (cljs.core.count(ns) < len) {
                            var G__4442 = ["0", ns].join("");
                            ns = G__4442;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__4440 = obj;
                          var G__4440__$1 = G__4440 == null ? null : G__4440.constructor;
                          if (G__4440__$1 == null) {
                            return null;
                          } else {
                            return G__4440__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__4441 = obj;
                            var G__4441__$1 = G__4441 == null ? null : G__4441.constructor;
                            if (G__4441__$1 == null) {
                              return null;
                            } else {
                              return G__4441__$1.name;
                            }
                          }();
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4131__auto__ = name == null;
                            if (or__4131__auto__) {
                              return or__4131__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var alt_impl = temp__5718__auto__;
    var G__4443 = obj;
    var G__4444 = writer;
    var G__4445 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4443, G__4444, G__4445) : alt_impl.call(null, G__4443, G__4444, G__4445);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__4446 = cljs.core.seq(cljs.core.next(objs));
  var chunk__4447 = null;
  var count__4448 = 0;
  var i__4449 = 0;
  while (true) {
    if (i__4449 < count__4448) {
      var obj = chunk__4447.cljs$core$IIndexed$_nth$arity$2(null, i__4449);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__4450 = seq__4446;
      var G__4451 = chunk__4447;
      var G__4452 = count__4448;
      var G__4453 = i__4449 + 1;
      seq__4446 = G__4450;
      chunk__4447 = G__4451;
      count__4448 = G__4452;
      i__4449 = G__4453;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4446);
      if (temp__5720__auto__) {
        var seq__4446__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4446__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4446__$1);
          var G__4454 = cljs.core.chunk_rest(seq__4446__$1);
          var G__4455 = c__4550__auto__;
          var G__4456 = cljs.core.count(c__4550__auto__);
          var G__4457 = 0;
          seq__4446 = G__4454;
          chunk__4447 = G__4455;
          count__4448 = G__4456;
          i__4449 = G__4457;
          continue;
        } else {
          var obj = cljs.core.first(seq__4446__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__4458 = cljs.core.next(seq__4446__$1);
          var G__4459 = null;
          var G__4460 = 0;
          var G__4461 = 0;
          seq__4446 = G__4458;
          chunk__4447 = G__4459;
          count__4448 = G__4460;
          i__4449 = G__4461;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__4463 = arguments.length;
  switch(G__4463) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4466 = arguments.length;
  var i__4731__auto___4467 = 0;
  while (true) {
    if (i__4731__auto___4467 < len__4730__auto___4466) {
      args__4736__auto__.push(arguments[i__4731__auto___4467]);
      var G__4468 = i__4731__auto___4467 + 1;
      i__4731__auto___4467 = G__4468;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq4465) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4465));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4470 = arguments.length;
  var i__4731__auto___4471 = 0;
  while (true) {
    if (i__4731__auto___4471 < len__4730__auto___4470) {
      args__4736__auto__.push(arguments[i__4731__auto___4471]);
      var G__4472 = i__4731__auto___4471 + 1;
      i__4731__auto___4471 = G__4472;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq4469) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4469));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4474 = arguments.length;
  var i__4731__auto___4475 = 0;
  while (true) {
    if (i__4731__auto___4475 < len__4730__auto___4474) {
      args__4736__auto__.push(arguments[i__4731__auto___4475]);
      var G__4476 = i__4731__auto___4475 + 1;
      i__4731__auto___4475 = G__4476;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq4473) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4473));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__4477__i = 0, G__4477__a = new Array(arguments.length - 0);
      while (G__4477__i < G__4477__a.length) {
        G__4477__a[G__4477__i] = arguments[G__4477__i + 0];
        ++G__4477__i;
      }
      objs = new cljs.core.IndexedSeq(G__4477__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__4478) {
    var objs = cljs.core.seq(arglist__4478);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4480 = arguments.length;
  var i__4731__auto___4481 = 0;
  while (true) {
    if (i__4731__auto___4481 < len__4730__auto___4480) {
      args__4736__auto__.push(arguments[i__4731__auto___4481]);
      var G__4482 = i__4731__auto___4481 + 1;
      i__4731__auto___4481 = G__4482;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq4479) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4479));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4484 = arguments.length;
  var i__4731__auto___4485 = 0;
  while (true) {
    if (i__4731__auto___4485 < len__4730__auto___4484) {
      args__4736__auto__.push(arguments[i__4731__auto___4485]);
      var G__4486 = i__4731__auto___4485 + 1;
      i__4731__auto___4485 = G__4486;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq4483) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4483));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4488 = arguments.length;
  var i__4731__auto___4489 = 0;
  while (true) {
    if (i__4731__auto___4489 < len__4730__auto___4488) {
      args__4736__auto__.push(arguments[i__4731__auto___4489]);
      var G__4490 = i__4731__auto___4489 + 1;
      i__4731__auto___4489 = G__4490;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq4487) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4487));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4492 = arguments.length;
  var i__4731__auto___4493 = 0;
  while (true) {
    if (i__4731__auto___4493 < len__4730__auto___4492) {
      args__4736__auto__.push(arguments[i__4731__auto___4493]);
      var G__4494 = i__4731__auto___4493 + 1;
      i__4731__auto___4493 = G__4494;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq4491) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4491));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var ns = null;
    var G__4501 = cljs.core.seq(m);
    var vec__4502 = G__4501;
    var seq__4503 = cljs.core.seq(vec__4502);
    var first__4504 = cljs.core.first(seq__4503);
    var seq__4503__$1 = cljs.core.next(seq__4503);
    var vec__4505 = first__4504;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505, 1, null);
    var entry = vec__4505;
    var entries = seq__4503__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__4501__$1 = G__4501;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__4514 = G__4501__$1;
      var seq__4515 = cljs.core.seq(vec__4514);
      var first__4516 = cljs.core.first(seq__4515);
      var seq__4515__$1 = cljs.core.next(seq__4515);
      var vec__4517 = first__4516;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4517, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4517, 1, null);
      var entry__$1 = vec__4517;
      var entries__$1 = seq__4515__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__4520 = ns__$2;
              var G__4521 = entries__$1;
              var G__4522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4520;
              G__4501__$1 = G__4521;
              lm__$1 = G__4522;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5720__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5720__auto__)) {
              var new_ns = temp__5720__auto__;
              var G__4523 = new_ns;
              var G__4524 = entries__$1;
              var G__4525 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4523;
              G__4501__$1 = G__4524;
              lm__$1 = G__4525;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__4526_4532 = cljs.core.key(e);
    var G__4527_4533 = w;
    var G__4528_4534 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4526_4532, G__4527_4533, G__4528_4534) : print_one.call(null, G__4526_4532, G__4527_4533, G__4528_4534);
    cljs.core._write(w, " ");
    var G__4529 = cljs.core.val(e);
    var G__4530 = w;
    var G__4531 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4529, G__4530, G__4531) : print_one.call(null, G__4529, G__4530, G__4531);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__4535 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4535, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4535, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4541 = arguments.length;
  var i__4731__auto___4542 = 0;
  while (true) {
    if (i__4731__auto___4542 < len__4730__auto___4541) {
      args__4736__auto__.push(arguments[i__4731__auto___4542]);
      var G__4543 = i__4731__auto___4542 + 1;
      i__4731__auto___4542 = G__4543;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq4538) {
  var G__4539 = cljs.core.first(seq4538);
  var seq4538__$1 = cljs.core.next(seq4538);
  var G__4540 = cljs.core.first(seq4538__$1);
  var seq4538__$2 = cljs.core.next(seq4538__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4539, G__4540, seq4538__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__4545 = arguments.length;
  switch(G__4545) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__4547_SHARP_, p2__4548_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__4547_SHARP_, p2__4548_SHARP_) : rf.call(null, p1__4547_SHARP_, p2__4548_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__4549 = null;
      var G__4549__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4549__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4549__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__4549 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4549__0.call(this);
          case 1:
            return G__4549__1.call(this, result);
          case 2:
            return G__4549__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4549.cljs$core$IFn$_invoke$arity$0 = G__4549__0;
      G__4549.cljs$core$IFn$_invoke$arity$1 = G__4549__1;
      G__4549.cljs$core$IFn$_invoke$arity$2 = G__4549__2;
      return G__4549;
    }();
  }(rf1);
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__4551 = arguments.length;
  switch(G__4551) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__4555 = null;
      var G__4555__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4555__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__4555__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__4552 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__4553 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__4552, G__4553) : retf.call(null, G__4552, G__4553);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4555 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4555__0.call(this);
          case 1:
            return G__4555__1.call(this, result);
          case 2:
            return G__4555__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4555.cljs$core$IFn$_invoke$arity$0 = G__4555__0;
      G__4555.cljs$core$IFn$_invoke$arity$1 = G__4555__1;
      G__4555.cljs$core$IFn$_invoke$arity$2 = G__4555__2;
      return G__4555;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__4557 = arguments.length;
  switch(G__4557) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__4559 = null;
        var G__4559__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4559__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4559__2 = function(result, input) {
          var prior = cljs.core.deref(pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4559 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4559__0.call(this);
            case 1:
              return G__4559__1.call(this, result);
            case 2:
              return G__4559__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4559.cljs$core$IFn$_invoke$arity$0 = G__4559__0;
        G__4559.cljs$core$IFn$_invoke$arity$1 = G__4559__1;
        G__4559.cljs$core$IFn$_invoke$arity$2 = G__4559__2;
        return G__4559;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__4561 = arguments.length;
  switch(G__4561) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__4563 = null;
  var G__4563__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__4563__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4563 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4563__1.call(this, x);
      case 2:
        return G__4563__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4563.cljs$core$IFn$_invoke$arity$1 = G__4563__1;
  G__4563.cljs$core$IFn$_invoke$arity$2 = G__4563__2;
  return G__4563;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__4564 = null;
  var G__4564__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__4564__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4564 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4564__1.call(this, x);
      case 2:
        return G__4564__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4564.cljs$core$IFn$_invoke$arity$1 = G__4564__1;
  G__4564.cljs$core$IFn$_invoke$arity$2 = G__4564__2;
  return G__4564;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
var G__4565_4568 = cljs.core.Eduction.prototype;
var G__4566_4569 = cljs.core.ITER_SYMBOL;
var G__4567_4570 = function(G__4565_4568, G__4566_4569) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4565_4568, G__4566_4569);
goog.object.set(G__4565_4568, G__4566_4569, G__4567_4570);
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4572 = arguments.length;
  var i__4731__auto___4573 = 0;
  while (true) {
    if (i__4731__auto___4573 < len__4730__auto___4572) {
      args__4736__auto__.push(arguments[i__4731__auto___4573]);
      var G__4574 = i__4731__auto___4573 + 1;
      i__4731__auto___4573 = G__4574;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq4571) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4571));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4576_SHARP_, p2__4575_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__4575_SHARP_) : proc.call(null, p2__4575_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._clj__GT_js["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._key__GT_js["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__4578 = arguments.length;
  switch(G__4578) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4656 = arguments.length;
  var i__4731__auto___4657 = 0;
  while (true) {
    if (i__4731__auto___4657 < len__4730__auto___4656) {
      args__4736__auto__.push(arguments[i__4731__auto___4657]);
      var G__4658 = i__4731__auto___4657 + 1;
      i__4731__auto___4657 = G__4658;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__4583) {
  var map__4584 = p__4583;
  var map__4584__$1 = (!(map__4584 == null) ? map__4584.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4584.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4584) : map__4584;
  var options = map__4584__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__4584__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function(map__4584, map__4584__$1, options, keyword_fn) {
    return function cljs$core$keyfn(k) {
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
    };
  }(map__4584, map__4584__$1, options, keyword_fn);
  var thisfn = function(map__4584, map__4584__$1, options, keyword_fn) {
    return function cljs$core$thisfn(x__$1) {
      if (x__$1 == null) {
        return null;
      } else {
        if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
          return cljs.core._clj__GT_js(x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Keyword) {
            return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
          } else {
            if (x__$1 instanceof cljs.core.Symbol) {
              return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
            } else {
              if (cljs.core.map_QMARK_(x__$1)) {
                var m = {};
                var seq__4624_4659 = cljs.core.seq(x__$1);
                var chunk__4625_4660 = null;
                var count__4626_4661 = 0;
                var i__4627_4662 = 0;
                while (true) {
                  if (i__4627_4662 < count__4626_4661) {
                    var vec__4640_4663 = chunk__4625_4660.cljs$core$IIndexed$_nth$arity$2(null, i__4627_4662);
                    var k_4664 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4640_4663, 0, null);
                    var v_4665 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4640_4663, 1, null);
                    var G__4643_4666 = m;
                    var G__4644_4667 = keyfn(k_4664);
                    var G__4645_4668 = cljs$core$thisfn(v_4665);
                    goog.object.set(G__4643_4666, G__4644_4667, G__4645_4668);
                    var G__4669 = seq__4624_4659;
                    var G__4670 = chunk__4625_4660;
                    var G__4671 = count__4626_4661;
                    var G__4672 = i__4627_4662 + 1;
                    seq__4624_4659 = G__4669;
                    chunk__4625_4660 = G__4670;
                    count__4626_4661 = G__4671;
                    i__4627_4662 = G__4672;
                    continue;
                  } else {
                    var temp__5720__auto___4673 = cljs.core.seq(seq__4624_4659);
                    if (temp__5720__auto___4673) {
                      var seq__4624_4674__$1 = temp__5720__auto___4673;
                      if (cljs.core.chunked_seq_QMARK_(seq__4624_4674__$1)) {
                        var c__4550__auto___4675 = cljs.core.chunk_first(seq__4624_4674__$1);
                        var G__4676 = cljs.core.chunk_rest(seq__4624_4674__$1);
                        var G__4677 = c__4550__auto___4675;
                        var G__4678 = cljs.core.count(c__4550__auto___4675);
                        var G__4679 = 0;
                        seq__4624_4659 = G__4676;
                        chunk__4625_4660 = G__4677;
                        count__4626_4661 = G__4678;
                        i__4627_4662 = G__4679;
                        continue;
                      } else {
                        var vec__4646_4680 = cljs.core.first(seq__4624_4674__$1);
                        var k_4681 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4646_4680, 0, null);
                        var v_4682 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4646_4680, 1, null);
                        var G__4649_4683 = m;
                        var G__4650_4684 = keyfn(k_4681);
                        var G__4651_4685 = cljs$core$thisfn(v_4682);
                        goog.object.set(G__4649_4683, G__4650_4684, G__4651_4685);
                        var G__4686 = cljs.core.next(seq__4624_4674__$1);
                        var G__4687 = null;
                        var G__4688 = 0;
                        var G__4689 = 0;
                        seq__4624_4659 = G__4686;
                        chunk__4625_4660 = G__4687;
                        count__4626_4661 = G__4688;
                        i__4627_4662 = G__4689;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return m;
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  var arr = [];
                  var seq__4652_4690 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                  var chunk__4653_4691 = null;
                  var count__4654_4692 = 0;
                  var i__4655_4693 = 0;
                  while (true) {
                    if (i__4655_4693 < count__4654_4692) {
                      var x_4694__$2 = chunk__4653_4691.cljs$core$IIndexed$_nth$arity$2(null, i__4655_4693);
                      arr.push(x_4694__$2);
                      var G__4695 = seq__4652_4690;
                      var G__4696 = chunk__4653_4691;
                      var G__4697 = count__4654_4692;
                      var G__4698 = i__4655_4693 + 1;
                      seq__4652_4690 = G__4695;
                      chunk__4653_4691 = G__4696;
                      count__4654_4692 = G__4697;
                      i__4655_4693 = G__4698;
                      continue;
                    } else {
                      var temp__5720__auto___4699 = cljs.core.seq(seq__4652_4690);
                      if (temp__5720__auto___4699) {
                        var seq__4652_4700__$1 = temp__5720__auto___4699;
                        if (cljs.core.chunked_seq_QMARK_(seq__4652_4700__$1)) {
                          var c__4550__auto___4701 = cljs.core.chunk_first(seq__4652_4700__$1);
                          var G__4702 = cljs.core.chunk_rest(seq__4652_4700__$1);
                          var G__4703 = c__4550__auto___4701;
                          var G__4704 = cljs.core.count(c__4550__auto___4701);
                          var G__4705 = 0;
                          seq__4652_4690 = G__4702;
                          chunk__4653_4691 = G__4703;
                          count__4654_4692 = G__4704;
                          i__4655_4693 = G__4705;
                          continue;
                        } else {
                          var x_4706__$2 = cljs.core.first(seq__4652_4700__$1);
                          arr.push(x_4706__$2);
                          var G__4707 = cljs.core.next(seq__4652_4700__$1);
                          var G__4708 = null;
                          var G__4709 = 0;
                          var G__4710 = 0;
                          seq__4652_4690 = G__4707;
                          chunk__4653_4691 = G__4708;
                          count__4654_4692 = G__4709;
                          i__4655_4693 = G__4710;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  return arr;
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4584, map__4584__$1, options, keyword_fn);
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq4581) {
  var G__4582 = cljs.core.first(seq4581);
  var seq4581__$1 = cljs.core.next(seq4581);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4582, seq4581__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4434__auto__.call(null, x, options);
    } else {
      var m__4431__auto__ = cljs.core._js__GT_clj["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4431__auto__.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__4716 = arguments.length;
  switch(G__4716) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4721 = arguments.length;
      var i__4731__auto___4722 = 0;
      while (true) {
        if (i__4731__auto___4722 < len__4730__auto___4721) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4722]);
          var G__4723 = i__4731__auto___4722 + 1;
          i__4731__auto___4722 = G__4723;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__4717 = opts;
  var map__4717__$1 = (!(map__4717 == null) ? map__4717.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4717.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4717) : map__4717;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4717__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.map_entry_QMARK_(x__$1)) {
            return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
          } else {
            if (cljs.core.coll_QMARK_(x__$1)) {
              return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
            } else {
              if (cljs.core.array_QMARK_(x__$1)) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
                  return function(p1__4711_SHARP_, p2__4712_SHARP_) {
                    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__4711_SHARP_, cljs$core$thisfn(p2__4712_SHARP_));
                  };
                }(map__4717, map__4717__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
              } else {
                if (cljs.core.type(x__$1) === Object) {
                  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
                    return function(r, k) {
                      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                    };
                  }(map__4717, map__4717__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4717, map__4717__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq4714) {
  var G__4715 = cljs.core.first(seq4714);
  var seq4714__$1 = cljs.core.next(seq4714);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4715, seq4714__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__4724__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__4724 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4725__i = 0, G__4725__a = new Array(arguments.length - 0);
          while (G__4725__i < G__4725__a.length) {
            G__4725__a[G__4725__i] = arguments[G__4725__i + 0];
            ++G__4725__i;
          }
          args = new cljs.core.IndexedSeq(G__4725__a, 0, null);
        }
        return G__4724__delegate.call(this, args);
      };
      G__4724.cljs$lang$maxFixedArity = 0;
      G__4724.cljs$lang$applyTo = function(arglist__4726) {
        var args = cljs.core.seq(arglist__4726);
        return G__4724__delegate(args);
      };
      G__4724.cljs$core$IFn$_invoke$arity$variadic = G__4724__delegate;
      return G__4724;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__4730 = arguments.length;
  switch(G__4730) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4732 = arguments.length;
      var i__4731__auto___4733 = 0;
      while (true) {
        if (i__4731__auto___4733 < len__4730__auto___4732) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4733]);
          var G__4734 = i__4731__auto___4733 + 1;
          i__4731__auto___4733 = G__4734;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__4735 = ret;
      f = G__4735;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq4728) {
  var G__4729 = cljs.core.first(seq4728);
  var seq4728__$1 = cljs.core.next(seq4728);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4729, seq4728__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__4737 = arguments.length;
  switch(G__4737) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__4739 = Math.random() * n;
  return Math.floor(G__4739);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4742 = arguments.length;
  var i__4731__auto___4743 = 0;
  while (true) {
    if (i__4731__auto___4743 < len__4730__auto___4742) {
      args__4736__auto__.push(arguments[i__4731__auto___4743]);
      var G__4744 = i__4731__auto___4743 + 1;
      i__4731__auto___4743 = G__4744;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq4740) {
  var G__4741 = cljs.core.first(seq4740);
  var seq4740__$1 = cljs.core.next(seq4740);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4741, seq4740__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__4746 = arguments.length;
  switch(G__4746) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4131__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__4749 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__4749.cljs$core$IFn$_invoke$arity$1 ? fexpr__4749.cljs$core$IFn$_invoke$arity$1(child) : fexpr__4749.call(null, child);
    }(), parent);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      var and__4120__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4120__auto__) {
        var and__4120__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4120__auto____$1) {
          var and__4120__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4120__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__4751 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__4752 = i + 1;
                ret = G__4751;
                i = G__4752;
                continue;
              }
              break;
            }
          } else {
            return and__4120__auto____$2;
          }
        } else {
          return and__4120__auto____$1;
        }
      } else {
        return and__4120__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__4754 = arguments.length;
  switch(G__4754) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__4757 = arguments.length;
  switch(G__4757) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__4760 = arguments.length;
  switch(G__4760) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__4763 = arguments.length;
  switch(G__4763) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4131__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__4769 = arguments.length;
  switch(G__4769) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__4765_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__4765_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4765_SHARP_), cljs.core.second(p1__4765_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__4766_SHARP_, p2__4767_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__4766_SHARP_, p2__4767_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__4771 = cljs.core.deref(prefer_table);
    return fexpr__4771.cljs$core$IFn$_invoke$arity$1 ? fexpr__4771.cljs$core$IFn$_invoke$arity$1(x) : fexpr__4771.call(null, x);
  }();
  var or__4131__auto__ = cljs.core.truth_(function() {
    var and__4120__auto__ = xprefs;
    if (cljs.core.truth_(and__4120__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4120__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__4775 = x;
            var G__4776 = cljs.core.first(ps);
            var G__4777 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4775, G__4776, G__4777) : cljs.core.prefers_STAR_.call(null, G__4775, G__4776, G__4777);
          }())) {
          } else {
          }
          var G__4784 = cljs.core.rest(ps);
          ps = G__4784;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4131__auto____$1)) {
      return or__4131__auto____$1;
    } else {
      var or__4131__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__4781 = cljs.core.first(ps);
              var G__4782 = y;
              var G__4783 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4781, G__4782, G__4783) : cljs.core.prefers_STAR_.call(null, G__4781, G__4782, G__4783);
            }())) {
            } else {
            }
            var G__4785 = cljs.core.rest(ps);
            ps = G__4785;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4131__auto____$2)) {
        return or__4131__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4131__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__4786) {
    var vec__4787 = p__4786;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 1, null);
    var e = vec__4787;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5718__auto__ = function() {
      var and__4120__auto__ = best_entry == null;
      if (and__4120__auto__) {
        var fexpr__4791 = cljs.core.deref(method_table);
        return fexpr__4791.cljs$core$IFn$_invoke$arity$1 ? fexpr__4791.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__4791.call(null, default_dispatch_val);
      } else {
        return and__4120__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var entry = temp__5718__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._reset[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._reset["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._add_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4434__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4431__auto__ = cljs.core._add_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4431__auto__.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._remove_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4434__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4431__auto__ = cljs.core._remove_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4431__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._prefer_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4434__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4431__auto__ = cljs.core._prefer_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4431__auto__.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._get_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4434__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4431__auto__ = cljs.core._get_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4431__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._methods[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._methods["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._prefers[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._prefers["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._default_dispatch_val["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._dispatch_fn["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__4794 = null;
  var G__4794__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__4794__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__4794__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__4794__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__4794__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__4794__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__4794__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__4794__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__4794__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__4794__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__4794__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__4794__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__4794__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__4794__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__4794__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__4794__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__4794__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__4794__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__4794__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__4794__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__4794__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__4794__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__4794 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__4794__1.call(this, self__);
      case 2:
        return G__4794__2.call(this, self__, a);
      case 3:
        return G__4794__3.call(this, self__, a, b);
      case 4:
        return G__4794__4.call(this, self__, a, b, c);
      case 5:
        return G__4794__5.call(this, self__, a, b, c, d);
      case 6:
        return G__4794__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__4794__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__4794__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__4794__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__4794__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__4794__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__4794__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__4794__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__4794__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__4794__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__4794__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__4794__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__4794__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__4794__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__4794__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__4794__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__4794__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4794.cljs$core$IFn$_invoke$arity$1 = G__4794__1;
  G__4794.cljs$core$IFn$_invoke$arity$2 = G__4794__2;
  G__4794.cljs$core$IFn$_invoke$arity$3 = G__4794__3;
  G__4794.cljs$core$IFn$_invoke$arity$4 = G__4794__4;
  G__4794.cljs$core$IFn$_invoke$arity$5 = G__4794__5;
  G__4794.cljs$core$IFn$_invoke$arity$6 = G__4794__6;
  G__4794.cljs$core$IFn$_invoke$arity$7 = G__4794__7;
  G__4794.cljs$core$IFn$_invoke$arity$8 = G__4794__8;
  G__4794.cljs$core$IFn$_invoke$arity$9 = G__4794__9;
  G__4794.cljs$core$IFn$_invoke$arity$10 = G__4794__10;
  G__4794.cljs$core$IFn$_invoke$arity$11 = G__4794__11;
  G__4794.cljs$core$IFn$_invoke$arity$12 = G__4794__12;
  G__4794.cljs$core$IFn$_invoke$arity$13 = G__4794__13;
  G__4794.cljs$core$IFn$_invoke$arity$14 = G__4794__14;
  G__4794.cljs$core$IFn$_invoke$arity$15 = G__4794__15;
  G__4794.cljs$core$IFn$_invoke$arity$16 = G__4794__16;
  G__4794.cljs$core$IFn$_invoke$arity$17 = G__4794__17;
  G__4794.cljs$core$IFn$_invoke$arity$18 = G__4794__18;
  G__4794.cljs$core$IFn$_invoke$arity$19 = G__4794__19;
  G__4794.cljs$core$IFn$_invoke$arity$20 = G__4794__20;
  G__4794.cljs$core$IFn$_invoke$arity$21 = G__4794__21;
  G__4794.cljs$core$IFn$_invoke$arity$22 = G__4794__22;
  return G__4794;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args4792) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4792)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5718__auto__ = function() {
    var fexpr__4793 = cljs.core.deref(self__.method_cache);
    return fexpr__4793.cljs$core$IFn$_invoke$arity$1 ? fexpr__4793.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__4793.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var target_fn = temp__5718__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__4795 = self__.uuid;
  var G__4796 = other.uuid;
  return goog.array.defaultCompare(G__4795, G__4796);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__4799 = arguments.length;
  switch(G__4799) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__4801 = v;
  var G__4801__$1 = G__4801 instanceof cljs.core.Keyword ? G__4801.fqn : null;
  switch(G__4801__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4803_SHARP_, p2__4804_SHARP_) {
      goog.object.set(p1__4803_SHARP_, p2__4804_SHARP_, true);
      return p1__4803_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__4807 = cljs.core.next(ks__$1);
          var G__4808 = [function() {
            var G__4806 = ret;
            if (!(ret === "")) {
              return [G__4806, "|"].join("");
            } else {
              return G__4806;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__4807;
          ret = G__4808;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_4809 = 0;
  while (true) {
    if (i_4809 < name.length) {
      var c_4810 = name.charAt(i_4809);
      var sub_4811 = goog.object.get(cljs.core.CHAR_MAP, c_4810);
      if (!(sub_4811 == null)) {
        sb.append(sub_4811);
      } else {
        sb.append(c_4810);
      }
      var G__4812 = i_4809 + 1;
      i_4809 = G__4812;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE_), "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5718__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var match = temp__5718__auto__;
      var vec__4816 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4816, 0, null);
      var G__4819 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__4820 = r.lastIndex;
      ret = G__4819;
      last_match_end = G__4820;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__4822 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__4821 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__4821.cljs$core$IFn$_invoke$arity$1 ? fexpr__4821.cljs$core$IFn$_invoke$arity$1(G__4822) : fexpr__4821.call(null, G__4822);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__4823 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4824 = null;
    var count__4825 = 0;
    var i__4826 = 0;
    while (true) {
      if (i__4826 < count__4825) {
        var tap = chunk__4824.cljs$core$IIndexed$_nth$arity$2(null, i__4826);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4829) {
          if (e4829 instanceof Error) {
            var ex_4831 = e4829;
          } else {
            throw e4829;
          }
        }
        var G__4832 = seq__4823;
        var G__4833 = chunk__4824;
        var G__4834 = count__4825;
        var G__4835 = i__4826 + 1;
        seq__4823 = G__4832;
        chunk__4824 = G__4833;
        count__4825 = G__4834;
        i__4826 = G__4835;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4823);
        if (temp__5720__auto__) {
          var seq__4823__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4823__$1)) {
            var c__4550__auto__ = cljs.core.chunk_first(seq__4823__$1);
            var G__4836 = cljs.core.chunk_rest(seq__4823__$1);
            var G__4837 = c__4550__auto__;
            var G__4838 = cljs.core.count(c__4550__auto__);
            var G__4839 = 0;
            seq__4823 = G__4836;
            chunk__4824 = G__4837;
            count__4825 = G__4838;
            i__4826 = G__4839;
            continue;
          } else {
            var tap = cljs.core.first(seq__4823__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4830) {
              if (e4830 instanceof Error) {
                var ex_4840 = e4830;
              } else {
                throw e4830;
              }
            }
            var G__4841 = cljs.core.next(seq__4823__$1);
            var G__4842 = null;
            var G__4843 = 0;
            var G__4844 = 0;
            seq__4823 = G__4841;
            chunk__4824 = G__4842;
            count__4825 = G__4843;
            i__4826 = G__4844;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__4823 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4824 = null;
    var count__4825 = 0;
    var i__4826 = 0;
    while (true) {
      if (i__4826 < count__4825) {
        var tap = chunk__4824.cljs$core$IIndexed$_nth$arity$2(null, i__4826);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4829) {
          if (e4829 instanceof Error) {
            var ex_4845 = e4829;
          } else {
            throw e4829;
          }
        }
        var G__4846 = seq__4823;
        var G__4847 = chunk__4824;
        var G__4848 = count__4825;
        var G__4849 = i__4826 + 1;
        seq__4823 = G__4846;
        chunk__4824 = G__4847;
        count__4825 = G__4848;
        i__4826 = G__4849;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4823);
        if (temp__5720__auto__) {
          var seq__4823__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4823__$1)) {
            var c__4550__auto__ = cljs.core.chunk_first(seq__4823__$1);
            var G__4850 = cljs.core.chunk_rest(seq__4823__$1);
            var G__4851 = c__4550__auto__;
            var G__4852 = cljs.core.count(c__4550__auto__);
            var G__4853 = 0;
            seq__4823 = G__4850;
            chunk__4824 = G__4851;
            count__4825 = G__4852;
            i__4826 = G__4853;
            continue;
          } else {
            var tap = cljs.core.first(seq__4823__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4830) {
              if (e4830 instanceof Error) {
                var ex_4854 = e4830;
              } else {
                throw e4830;
              }
            }
            var G__4855 = cljs.core.next(seq__4823__$1);
            var G__4856 = null;
            var G__4857 = 0;
            var G__4858 = 0;
            seq__4823 = G__4855;
            chunk__4824 = G__4856;
            count__4825 = G__4857;
            i__4826 = G__4858;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__4861 = function() {
          var G__4859 = ctxt;
          var G__4860 = cljs.core.first(xs);
          return goog.object.get(G__4859, G__4860);
        }();
        var G__4862 = cljs.core.next(xs);
        ctxt = G__4861;
        xs = G__4862;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__4863 = cljs.core._STAR_target_STAR_;
  switch(G__4863) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4120__auto__ = ctxt;
              if (cljs.core.truth_(and__4120__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4120__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e4864) {
            if (e4864 instanceof ReferenceError) {
              var e = e4864;
              return null;
            } else {
              throw e4864;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core._STAR_target_STAR_].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__4867 = arguments.length;
  switch(G__4867) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.out.println(s);
        };
      }(system));
      return cljs.core.set_print_err_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.error.println(s);
        };
      }(system));
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("goog.debug.errorcontext");
goog.debug.errorcontext.addErrorContext = function(err, contextKey, contextValue) {
  if (!err[goog.debug.errorcontext.CONTEXT_KEY_]) {
    err[goog.debug.errorcontext.CONTEXT_KEY_] = {};
  }
  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] = contextValue;
};
goog.debug.errorcontext.getErrorContext = function(err) {
  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};
};
goog.debug.errorcontext.CONTEXT_KEY_ = "__closure__error__context__984382";
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.debug.errorcontext");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.define("goog.debug.FORCE_SLOPPY_STACKS", false);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var uidsToCleanup = [];
  var ancestorUids = {};
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (!goog.hasUid(obj)) {
                  uidsToCleanup.push(obj);
                }
                var uid = goog.getUid(obj);
                if (ancestorUids[uid]) {
                  str.push("*** reference loop detected (id\x3d" + uid + ") ***");
                } else {
                  ancestorUids[uid] = true;
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                  delete ancestorUids[uid];
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  for (var i = 0; i < uidsToCleanup.length; i++) {
    goog.removeUid(uidsToCleanup[i]);
  }
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0; i < arr.length; i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return {"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return {"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (!(err instanceof Error)) {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.enhanceErrorWithContext = function(err, opt_context) {
  var error = goog.debug.enhanceError(err);
  if (opt_context) {
    for (var key in opt_context) {
      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);
    }
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(fn) {
  var stack;
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var contextFn = fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0; args && i < args.length; i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i]);
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1000);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i]; i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  var console = goog.global["console"];
  if (console && console["timeStamp"]) {
    console["timeStamp"](msg);
  }
  var msWriteProfilerMark = goog.global["msWriteProfilerMark"];
  if (msWriteProfilerMark) {
    msWriteProfilerMark(msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_);
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler; handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler; handler = this.handlers_[i]; i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_;
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.forwardDeclare("goog.net.xpc.CrossPageChannel");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.Thenable");
goog.forwardDeclare("goog.Promise");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  ctor.prototype["then"] = ctor.prototype.then;
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0; i < monitors.length; i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.useSetImmediate_ = function() {
  if (!goog.global.Window || !goog.global.Window.prototype) {
    return true;
  }
  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {
    return true;
  }
  return false;
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(String(goog.dom.TagName.IFRAME));
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(String(goog.dom.TagName.SCRIPT))) {
    return function(cb) {
      var script = document.createElement(String(goog.dom.TagName.SCRIPT));
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (String(goog.global.Promise).indexOf("[native code]") != -1) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_; entry; entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this === x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = value;
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this; promise; promise = promise.parent_) {
      for (var i = this.currentStep_; i >= 0; i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this; p && p.hadUnhandledRejection_; p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.creationStack;
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    goog.isDef(opt_scope) ? callback.call(opt_scope) : callback();
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length; i < len; ++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.scope(function() {
  goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
  goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
  goog.global["navigator"]["msMaxTouchPoints"]), PASSIVE_EVENTS:purify(function() {
    if (!goog.global.addEventListener || !Object.defineProperty) {
      return false;
    }
    var passive = false;
    var options = Object.defineProperty({}, "passive", {get:function() {
      passive = true;
    }});
    goog.global.addEventListener("test", goog.nullFunction, options);
    goog.global.removeEventListener("test", goog.nullFunction, options);
    return passive;
  })};
  function purify(fn) {
    return {valueOf:fn}.valueOf();
  }
});
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTIONCHANGE:"selectionchange", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? 
"focusout" : "DOMFocusOut", CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DEVICEMOTION:"devicemotion", DEVICEORIENTATION:"deviceorientation", 
DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", CANPLAY:"canplay", CANPLAYTHROUGH:"canplaythrough", DURATIONCHANGE:"durationchange", EMPTIED:"emptied", ENDED:"ended", LOADEDDATA:"loadeddata", LOADEDMETADATA:"loadedmetadata", PAUSE:"pause", PLAY:"play", PLAYING:"playing", RATECHANGE:"ratechange", SEEKED:"seeked", SEEKING:"seeking", 
STALLED:"stalled", SUSPEND:"suspend", TIMEUPDATE:"timeupdate", VOLUMECHANGE:"volumechange", WAITING:"waiting", SOURCEOPEN:"sourceopen", SOURCEENDED:"sourceended", SOURCECLOSED:"sourceclosed", ABORT:"abort", UPDATE:"update", UPDATESTART:"updatestart", UPDATEEND:"updateend", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", 
MESSAGE:"message", CONNECT:"connect", INSTALL:"install", ACTIVATE:"activate", FETCH:"fetch", FOREIGNFETCH:"foreignfetch", MESSAGEERROR:"messageerror", STATECHANGE:"statechange", UPDATEFOUND:"updatefound", CONTROLLERCHANGE:"controllerchange", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), 
POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", 
MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:goog.userAgent.IE ? "textinput" : "textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", 
BEFOREINPUT:"beforeinput", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", 
DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.key = "";
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.key = e.key || "";
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.forwardDeclare("goog.events.EventLike");
goog.forwardDeclare("goog.events.EventTarget");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1e6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0; i < listenerArray.length; i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0; i < listenerArray.length; ++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0; i < listenerArray.length; ++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0; i < listenerArray.length; ++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1e6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_options, opt_handler) {
  if (opt_options && opt_options.once) {
    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);
  }
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listen(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listen(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, false, opt_options, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_options, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, capture, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {
      opt_options = capture;
    }
    if (opt_options === undefined) {
      opt_options = false;
    }
    src.addEventListener(type.toString(), proxy, opt_options);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listenOnce(type, listener, capture, opt_handler);
  } else {
    return goog.events.listen_(src, type, listener, true, opt_options, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, listener, capture, opt_handler);
  }
  if (!src) {
    return false;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0; i < listeners.length; ++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_(obj);
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = type;
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_(obj);
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0; i < listenerArray.length; i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget; parent; parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1; !evt.propagationStopped_ && i >= 0; i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || e.returnValue == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1e9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1000;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0; i < listenerArray.length; ++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || e;
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0; i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.json.hybrid");
goog.require("goog.asserts");
goog.require("goog.json");
goog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["stringify"] : function(obj) {
  if (goog.global.JSON) {
    try {
      return goog.global.JSON.stringify(obj);
    } catch (e) {
    }
  }
  return goog.json.serialize(obj);
};
goog.json.hybrid.parse_ = function(jsonString, fallbackParser) {
  if (goog.global.JSON) {
    try {
      var obj = goog.global.JSON.parse(jsonString);
      goog.asserts.assertObject(obj);
      return obj;
    } catch (e) {
    }
  }
  var obj = fallbackParser(jsonString);
  goog.asserts.assert(obj);
  return obj;
};
goog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ? goog.global["JSON"]["parse"] : function(jsonString) {
  return goog.json.hybrid.parse_(jsonString, goog.json.parse);
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    case goog.net.HttpStatus.CREATED:
    case goog.net.HttpStatus.ACCEPTED:
    case goog.net.HttpStatus.NO_CONTENT:
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    case goog.net.HttpStatus.NOT_MODIFIED:
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_;
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json.hybrid");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.progressEventsEnabled_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.CONTENT_TRANSFER_ENCODING = "Content-Transfer-Encoding";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {
  this.progressEventsEnabled_ = enabled;
};
goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
  return this.progressEventsEnabled_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  if (this.getProgressEventsEnabled() && "onprogress" in this.xhr_) {
    this.xhr_.onprogress = goog.bind(function(e) {
      this.onProgressHandler_(e, true);
    }, this);
    if (this.xhr_.upload) {
      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);
    }
  }
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if ("withCredentials" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
  return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total};
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return !!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.hybrid.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  if (!this.xhr_ || !this.isComplete()) {
    return undefined;
  }
  var value = this.xhr_.getResponseHeader(key);
  return goog.isNull(value) ? undefined : value;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0; i < headersArray.length; i++) {
    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {
  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;
};
goog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {
  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addFinally = function(f, opt_scope) {
  return this.addCallbacks(f, function(err) {
    var result = f.call(this, err);
    if (!goog.isDef(result)) {
      throw err;
    }
    return result;
  }, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res) || typeof goog.global["Promise"] === "function" && res instanceof goog.global["Promise"]) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.async.Delay.base(this, "constructor");
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.base(this, "disposeInternal");
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.startIfNotActive = function(opt_interval) {
  if (!this.isActive()) {
    this.start(opt_interval);
  }
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listen_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, options, scope) {
  var self = this;
  return self.listen_(src, type, fn, options, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0; i < type.length; i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || self.handleEvent, opt_options || false, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_options) {
  var self = this;
  return self.listenOnce_(src, type, opt_fn, opt_options);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  var self = this;
  return self.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || self.handleEvent, opt_options, opt_scope || self.handler_ || self);
    if (!listenerObj) {
      return self;
    }
    var key = listenerObj.key;
    self.keys_[key] = listenerObj;
  }
  return self;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  var self = this;
  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.listen(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_options, opt_scope) {
  var self = this;
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);
    }
  } else {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    var listener = goog.events.getListener(src, type, opt_fn || self.handleEvent, capture, opt_scope || self.handler_ || self);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete self.keys_[listener.key];
    }
  }
  return self;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  var self = this;
  wrapper.unlisten(src, listener, opt_capt, opt_scope || self.handler_ || self, self);
  return self;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, function(listenerObj, key) {
    if (this.keys_.hasOwnProperty(key)) {
      goog.events.unlistenByKey(listenerObj);
    }
  }, this);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return {callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[String(this.transportType)] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = payload.split(DirectTransport.MESSAGE_DELIMITER_);
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return {"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetupCb_;
goog.net.xpc.FrameElementMethodTransport.prototype.outgoing_;
goog.net.xpc.FrameElementMethodTransport.prototype.iframeElm_;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.prototype.ackReceiver_;
goog.net.xpc.IframePollingTransport.prototype.ackSender_;
goog.net.xpc.IframePollingTransport.prototype.ackIframeElm_;
goog.net.xpc.IframePollingTransport.prototype.ackWinObj_;
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresentCb_;
goog.net.xpc.IframePollingTransport.prototype.deliveryQueue_;
goog.net.xpc.IframePollingTransport.prototype.msgIframeElm_;
goog.net.xpc.IframePollingTransport.prototype.msgReceiver_;
goog.net.xpc.IframePollingTransport.prototype.msgSender_;
goog.net.xpc.IframePollingTransport.prototype.msgWinObj_;
goog.net.xpc.IframePollingTransport.prototype.rcvdConnectionSetupAck_;
goog.net.xpc.IframePollingTransport.prototype.sentConnectionSetupAck_;
goog.net.xpc.IframePollingTransport.prototype.parts_;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return !this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return {};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement(goog.dom.TagName.IFRAME);
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0; i < length; i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m; i < this.deliveryQueue_.length; i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1000;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0; receiver = receivers[i]; i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  if (!/^https?:\/\//.test(url)) {
    throw Error("URL " + url + " is invalid");
  }
  this.sanitizedSendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sanitizedSendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1000;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3000;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header;
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0; startIndex < encodedLen; fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement(String(goog.dom.TagName.DIV));
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.createIframe(null, null, {"onload":goog.string.Const.from("this.xpcOnload()"), "sandbox":null}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement(String(goog.dom.TagName.IFRAME));
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.prototype.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2) && staleChannel.isMessageOriginAcceptable(msgEvt.getBrowserEvent().origin)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField; uriField = goog.net.xpc.UriCfgFields[i]; i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return !!this.peerWindowObject_ && !this.peerWindowObject_.closed;
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported(this.peerWindowObject_)) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement(goog.dom.TagName.IFRAME);
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return iframeElm;
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    this.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
  }
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed() || this.state_ == goog.net.xpc.ChannelStates.CLOSED) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Channel closed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(opt_origin)) || goog.string.isEmptyOrWhitespace(goog.string.makeSafe(peerHostname)) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.reconnectTimer_ = null;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1000;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1000;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return !!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.getBufferedAmount = function() {
  return this.webSocket_.bufferedAmount;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1000);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = event.data;
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = event.data;
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
clojure.browser.event.IEventType = function() {
};
clojure.browser.event.event_types = function clojure$browser$event$event_types(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$event$IEventType$event_types$arity$1 == null)) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = clojure.browser.event.event_types["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
      }
    }
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__4908) {
      var vec__4909 = p__4908;
      var k = cljs.core.nth.call(null, vec__4909, 0, null);
      var v = cljs.core.nth.call(null, vec__4909, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__4912) {
        var vec__4913 = p__4912;
        var k = cljs.core.nth.call(null, vec__4913, 0, null);
        var v = cljs.core.nth.call(null, vec__4913, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function clojure$browser$event$listen(var_args) {
  var G__4917 = arguments.length;
  switch(G__4917) {
    case 3:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen.call(null, src, type, fn, false);
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen.cljs$lang$maxFixedArity = 4;
clojure.browser.event.listen_once = function clojure$browser$event$listen_once(var_args) {
  var G__4920 = arguments.length;
  switch(G__4920) {
    case 3:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.listen_once.call(null, src, type, fn, false);
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.listen_once.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten = function clojure$browser$event$unlisten(var_args) {
  var G__4923 = arguments.length;
  switch(G__4923) {
    case 3:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3 = function(src, type, fn) {
  return clojure.browser.event.unlisten.call(null, src, type, fn, false);
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4 = function(src, type, fn, capture_QMARK_) {
  return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
};
clojure.browser.event.unlisten.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten_by_key = function clojure$browser$event$unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function clojure$browser$event$dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function clojure$browser$event$expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function clojure$browser$event$fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function clojure$browser$event$total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function clojure$browser$event$get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function clojure$browser$event$all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function clojure$browser$event$unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function clojure$browser$event$has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function clojure$browser$event$remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("goog.json");
goog.require("goog.object");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.net.WebSocket");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
clojure.browser.net._STAR_timeout_STAR_ = 10000;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__4927) {
  var vec__4928 = p__4927;
  var k = cljs.core.nth.call(null, vec__4928, 0, null);
  var v = cljs.core.nth.call(null, vec__4928, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
};
clojure.browser.net.connect = function clojure$browser$net$connect(var_args) {
  var G__4932 = arguments.length;
  switch(G__4932) {
    case 1:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.connect[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2 = function(this$, opt1) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.connect[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt1);
    } else {
      var m__4431__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt1);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3 = function(this$, opt1, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.connect[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt1, opt2);
    } else {
      var m__4431__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt1, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4 = function(this$, opt1, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$connect$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.connect[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt1, opt2, opt3);
    } else {
      var m__4431__auto__ = clojure.browser.net.connect["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt1, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
      }
    }
  }
};
clojure.browser.net.connect.cljs$lang$maxFixedArity = 4;
clojure.browser.net.transmit = function clojure$browser$net$transmit(var_args) {
  var G__4934 = arguments.length;
  switch(G__4934) {
    case 2:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2 = function(this$, opt) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$2 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt);
    } else {
      var m__4431__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3 = function(this$, opt, opt2) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$3 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt, opt2);
    } else {
      var m__4431__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt, opt2);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4 = function(this$, opt, opt2, opt3) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$4 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt, opt2, opt3);
    } else {
      var m__4431__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt, opt2, opt3);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5 = function(this$, opt, opt2, opt3, opt4) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$5 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt, opt2, opt3, opt4);
    } else {
      var m__4431__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt, opt2, opt3, opt4);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6 = function(this$, opt, opt2, opt3, opt4, opt5) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$transmit$arity$6 == null)) {
    return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var m__4431__auto__ = clojure.browser.net.transmit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, opt, opt2, opt3, opt4, opt5);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
      }
    }
  }
};
clojure.browser.net.transmit.cljs$lang$maxFixedArity = 6;
clojure.browser.net.close = function clojure$browser$net$close(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IConnection$close$arity$1 == null)) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.close[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = clojure.browser.net.close["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
      }
    }
  }
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__4937) {
      var vec__4938 = p__4937;
      var k = cljs.core.nth.call(null, vec__4938, 0, null);
      var v = cljs.core.nth.call(null, vec__4938, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__4941) {
  var vec__4942 = p__4941;
  var k = cljs.core.nth.call(null, vec__4942, 0, null);
  var v = cljs.core.nth.call(null, vec__4942, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function clojure$browser$net$xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
};
clojure.browser.net.register_service = function clojure$browser$net$register_service(var_args) {
  var G__4946 = arguments.length;
  switch(G__4946) {
    case 3:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3 = function(this$, service_name, fn) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, service_name, fn);
    } else {
      var m__4431__auto__ = clojure.browser.net.register_service["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, service_name, fn);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  if (!(this$ == null) && !(this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4 == null)) {
    return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$, service_name, fn, encode_json_QMARK_);
    } else {
      var m__4431__auto__ = clojure.browser.net.register_service["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$, service_name, fn, encode_json_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
      }
    }
  }
};
clojure.browser.net.register_service.cljs$lang$maxFixedArity = 4;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
clojure.browser.net.xpc_connection = function clojure$browser$net$xpc_connection(var_args) {
  var G__4949 = arguments.length;
  switch(G__4949) {
    case 0:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  var temp__5720__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
  if (cljs.core.truth_(temp__5720__auto__)) {
    var config = temp__5720__auto__;
    return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
  } else {
    return null;
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1 = function(config) {
  return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__4950) {
    var vec__4951 = p__4950;
    var k = cljs.core.nth.call(null, vec__4951, 0, null);
    var v = cljs.core.nth.call(null, vec__4951, 1, null);
    var temp__5718__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var field = temp__5718__auto__;
      var G__4954 = sum;
      goog.object.set(G__4954, field, v);
      return G__4954;
    } else {
      return sum;
    }
  }, {}, config));
};
clojure.browser.net.xpc_connection.cljs$lang$maxFixedArity = 1;
clojure.browser.net.IWebSocket = function() {
};
clojure.browser.net.open_QMARK_ = function clojure$browser$net$open_QMARK_(this$) {
  if (!(this$ == null) && !(this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 == null)) {
    return this$.clojure$browser$net$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = clojure.browser.net.open_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = clojure.browser.net.open_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
      }
    }
  }
};
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = cljs.core.PROTOCOL_SENTINEL;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__4958) {
      var vec__4959 = p__4958;
      var k = cljs.core.nth.call(null, vec__4959, 0, null);
      var v = cljs.core.nth.call(null, vec__4959, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
clojure.browser.net.websocket_connection = function clojure$browser$net$websocket_connection(var_args) {
  var G__4963 = arguments.length;
  switch(G__4963) {
    case 0:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  return clojure.browser.net.websocket_connection.call(null, null, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1 = function(auto_reconnect_QMARK_) {
  return clojure.browser.net.websocket_connection.call(null, auto_reconnect_QMARK_, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
  return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
};
clojure.browser.net.websocket_connection.cljs$lang$maxFixedArity = 2;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= Number(width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", Number(width) - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", Number(width) - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (Number(value) < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (Number(value) >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= Number(width)) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);
  var padCount = Number(width) - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__4877 = "g";
    var G__4877__$1 = cljs.core.truth_(re.ignoreCase) ? [G__4877, "i"].join("") : G__4877;
    var G__4877__$2 = cljs.core.truth_(re.multiline) ? [G__4877__$1, "m"].join("") : G__4877__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__4877__$2, "u"].join("");
    } else {
      return G__4877__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__4878__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__4878 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__4879__i = 0, G__4879__a = new Array(arguments.length - 0);
        while (G__4879__i < G__4879__a.length) {
          G__4879__a[G__4879__i] = arguments[G__4879__i + 0];
          ++G__4879__i;
        }
        args = new cljs.core.IndexedSeq(G__4879__a, 0, null);
      }
      return G__4878__delegate.call(this, args);
    };
    G__4878.cljs$lang$maxFixedArity = 0;
    G__4878.cljs$lang$applyTo = function(arglist__4880) {
      var args = cljs.core.seq(arglist__4880);
      return G__4878__delegate(args);
    };
    G__4878.cljs$core$IFn$_invoke$arity$variadic = G__4878__delegate;
    return G__4878;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__4882 = arguments.length;
  switch(G__4882) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__4884 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__4885 = cljs.core.next.call(null, coll__$1);
      sb = G__4884;
      coll__$1 = G__4885;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__4886 = sb;
      var G__4887 = coll__$2;
      sb = G__4886;
      coll__$1 = G__4887;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__4888 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__4888;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__4889 = cljs.core._EQ__EQ_;
    var expr__4890 = limit;
    if (cljs.core.truth_(pred__4889.call(null, 1, expr__4890))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__4889.call(null, 2, expr__4890))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__4893 = arguments.length;
  switch(G__4893) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__4895 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__4896 = limit__$1 - 1;
          var G__4897 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__4895;
          limit__$1 = G__4896;
          parts = G__4897;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__4898 = index - 1;
        index = G__4898;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__4899 = index + 1;
      index = G__4899;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__4901 = arguments.length;
  switch(G__4901) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__4904 = arguments.length;
  switch(G__4904) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.map_entry_QMARK_.call(null, form)) {
      return outer.call(null, new cljs.core.MapEntry(inner.call(null, cljs.core.key.call(null, form)), inner.call(null, cljs.core.val.call(null, form)), null));
    } else {
      if (cljs.core.seq_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
      } else {
        if (cljs.core.record_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
            return cljs.core.conj.call(null, r, inner.call(null, x));
          }, form, form));
        } else {
          if (cljs.core.coll_QMARK_.call(null, form)) {
            return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
          } else {
            return outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__4967) {
    var vec__4968 = p__4967;
    var k = cljs.core.nth.call(null, vec__4968, 0, null);
    var v = cljs.core.nth.call(null, vec__4968, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__4971) {
    var vec__4972 = p__4971;
    var k = cljs.core.nth.call(null, vec__4972, 0, null);
    var v = cljs.core.nth.call(null, vec__4972, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.spec.gen.alpha");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("goog.Uri");
cljs.spec.gen.alpha.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.spec.gen.alpha.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
cljs.spec.gen.alpha.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.spec.gen.alpha.LazyVar.cljs$lang$type = true;
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorStr = "cljs.spec.gen.alpha/LazyVar";
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.gen.alpha/LazyVar");
};
cljs.spec.gen.alpha.__GT_LazyVar = function cljs$spec$gen$alpha$__GT_LazyVar(f, cached) {
  return new cljs.spec.gen.alpha.LazyVar(f, cached);
};
cljs.spec.gen.alpha.quick_check_ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.quick_check !== "undefined") {
    return clojure.test.check.quick_check;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.quick_check = function cljs$spec$gen$alpha$quick_check(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5028 = arguments.length;
  var i__4731__auto___5029 = 0;
  while (true) {
    if (i__4731__auto___5029 < len__4730__auto___5028) {
      args__4736__auto__.push(arguments[i__4731__auto___5029]);
      var G__5030 = i__4731__auto___5029 + 1;
      i__4731__auto___5029 = G__5030;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.quick_check_ref), args);
};
cljs.spec.gen.alpha.quick_check.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.quick_check.cljs$lang$applyTo = function(seq5027) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5027));
};
cljs.spec.gen.alpha.for_all_STAR__ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.properties !== "undefined" && typeof clojure.test.check.properties.for_all_STAR_ !== "undefined") {
    return clojure.test.check.properties.for_all_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.for_all_STAR_ = function cljs$spec$gen$alpha$for_all_STAR_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5032 = arguments.length;
  var i__4731__auto___5033 = 0;
  while (true) {
    if (i__4731__auto___5033 < len__4730__auto___5032) {
      args__4736__auto__.push(arguments[i__4731__auto___5033]);
      var G__5034 = i__4731__auto___5033 + 1;
      i__4731__auto___5033 = G__5034;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.for_all_STAR__ref), args);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$applyTo = function(seq5031) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5031));
};
var g_QMARK__5035 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.generator_QMARK_ !== "undefined") {
    return clojure.test.check.generators.generator_QMARK_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " never required"].join(""));
  }
}, null);
var g_5036 = new cljs.spec.gen.alpha.LazyVar(function(g_QMARK__5035) {
  return function() {
    if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.generate !== "undefined") {
      return clojure.test.check.generators.generate;
    } else {
      throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " never required"].join(""));
    }
  };
}(g_QMARK__5035), null);
var mkg_5037 = new cljs.spec.gen.alpha.LazyVar(function(g_QMARK__5035, g_5036) {
  return function() {
    if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.__GT_Generator !== "undefined") {
      return clojure.test.check.generators.__GT_Generator;
    } else {
      throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " never required"].join(""));
    }
  };
}(g_QMARK__5035, g_5036), null);
cljs.spec.gen.alpha.generator_QMARK_ = function(g_QMARK__5035, g_5036, mkg_5037) {
  return function cljs$spec$gen$alpha$generator_QMARK_(x) {
    return cljs.core.deref.call(null, g_QMARK__5035).call(null, x);
  };
}(g_QMARK__5035, g_5036, mkg_5037);
cljs.spec.gen.alpha.generator = function(g_QMARK__5035, g_5036, mkg_5037) {
  return function cljs$spec$gen$alpha$generator(gfn) {
    return cljs.core.deref.call(null, mkg_5037).call(null, gfn);
  };
}(g_QMARK__5035, g_5036, mkg_5037);
cljs.spec.gen.alpha.generate = function(g_QMARK__5035, g_5036, mkg_5037) {
  return function cljs$spec$gen$alpha$generate(generator) {
    return cljs.core.deref.call(null, g_5036).call(null, generator);
  };
}(g_QMARK__5035, g_5036, mkg_5037);
cljs.spec.gen.alpha.delay_impl = function cljs$spec$gen$alpha$delay_impl(gfnd) {
  return cljs.spec.gen.alpha.generator.call(null, function(rnd, size) {
    return (new cljs.core.Keyword(null, "gen", "gen", 142575302)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, gfnd)).call(null, rnd, size);
  });
};
var g__4999__auto___5058 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.hash_map !== "undefined") {
    return clojure.test.check.generators.hash_map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.hash_map = function(g__4999__auto___5058) {
  return function cljs$spec$gen$alpha$hash_map(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5059 = arguments.length;
    var i__4731__auto___5060 = 0;
    while (true) {
      if (i__4731__auto___5060 < len__4730__auto___5059) {
        args__4736__auto__.push(arguments[i__4731__auto___5060]);
        var G__5061 = i__4731__auto___5060 + 1;
        i__4731__auto___5060 = G__5061;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5058);
cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5058) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5058), args);
  };
}(g__4999__auto___5058);
cljs.spec.gen.alpha.hash_map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.hash_map.cljs$lang$applyTo = function(g__4999__auto___5058) {
  return function(seq5038) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5038));
  };
}(g__4999__auto___5058);
var g__4999__auto___5062 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.list !== "undefined") {
    return clojure.test.check.generators.list;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.list = function(g__4999__auto___5062) {
  return function cljs$spec$gen$alpha$list(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5063 = arguments.length;
    var i__4731__auto___5064 = 0;
    while (true) {
      if (i__4731__auto___5064 < len__4730__auto___5063) {
        args__4736__auto__.push(arguments[i__4731__auto___5064]);
        var G__5065 = i__4731__auto___5064 + 1;
        i__4731__auto___5064 = G__5065;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5062);
cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5062) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5062), args);
  };
}(g__4999__auto___5062);
cljs.spec.gen.alpha.list.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.list.cljs$lang$applyTo = function(g__4999__auto___5062) {
  return function(seq5039) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5039));
  };
}(g__4999__auto___5062);
var g__4999__auto___5066 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.map !== "undefined") {
    return clojure.test.check.generators.map;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.map = function(g__4999__auto___5066) {
  return function cljs$spec$gen$alpha$map(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5067 = arguments.length;
    var i__4731__auto___5068 = 0;
    while (true) {
      if (i__4731__auto___5068 < len__4730__auto___5067) {
        args__4736__auto__.push(arguments[i__4731__auto___5068]);
        var G__5069 = i__4731__auto___5068 + 1;
        i__4731__auto___5068 = G__5069;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5066);
cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5066) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5066), args);
  };
}(g__4999__auto___5066);
cljs.spec.gen.alpha.map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.map.cljs$lang$applyTo = function(g__4999__auto___5066) {
  return function(seq5040) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5040));
  };
}(g__4999__auto___5066);
var g__4999__auto___5070 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.not_empty !== "undefined") {
    return clojure.test.check.generators.not_empty;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.not_empty = function(g__4999__auto___5070) {
  return function cljs$spec$gen$alpha$not_empty(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5071 = arguments.length;
    var i__4731__auto___5072 = 0;
    while (true) {
      if (i__4731__auto___5072 < len__4730__auto___5071) {
        args__4736__auto__.push(arguments[i__4731__auto___5072]);
        var G__5073 = i__4731__auto___5072 + 1;
        i__4731__auto___5072 = G__5073;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5070);
cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5070) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5070), args);
  };
}(g__4999__auto___5070);
cljs.spec.gen.alpha.not_empty.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.not_empty.cljs$lang$applyTo = function(g__4999__auto___5070) {
  return function(seq5041) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5041));
  };
}(g__4999__auto___5070);
var g__4999__auto___5074 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.set !== "undefined") {
    return clojure.test.check.generators.set;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.set = function(g__4999__auto___5074) {
  return function cljs$spec$gen$alpha$set(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5075 = arguments.length;
    var i__4731__auto___5076 = 0;
    while (true) {
      if (i__4731__auto___5076 < len__4730__auto___5075) {
        args__4736__auto__.push(arguments[i__4731__auto___5076]);
        var G__5077 = i__4731__auto___5076 + 1;
        i__4731__auto___5076 = G__5077;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5074);
cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5074) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5074), args);
  };
}(g__4999__auto___5074);
cljs.spec.gen.alpha.set.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.set.cljs$lang$applyTo = function(g__4999__auto___5074) {
  return function(seq5042) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5042));
  };
}(g__4999__auto___5074);
var g__4999__auto___5078 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.vector !== "undefined") {
    return clojure.test.check.generators.vector;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector = function(g__4999__auto___5078) {
  return function cljs$spec$gen$alpha$vector(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5079 = arguments.length;
    var i__4731__auto___5080 = 0;
    while (true) {
      if (i__4731__auto___5080 < len__4730__auto___5079) {
        args__4736__auto__.push(arguments[i__4731__auto___5080]);
        var G__5081 = i__4731__auto___5080 + 1;
        i__4731__auto___5080 = G__5081;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5078);
cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5078) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5078), args);
  };
}(g__4999__auto___5078);
cljs.spec.gen.alpha.vector.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector.cljs$lang$applyTo = function(g__4999__auto___5078) {
  return function(seq5043) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5043));
  };
}(g__4999__auto___5078);
var g__4999__auto___5082 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.vector_distinct !== "undefined") {
    return clojure.test.check.generators.vector_distinct;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.vector_distinct = function(g__4999__auto___5082) {
  return function cljs$spec$gen$alpha$vector_distinct(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5083 = arguments.length;
    var i__4731__auto___5084 = 0;
    while (true) {
      if (i__4731__auto___5084 < len__4730__auto___5083) {
        args__4736__auto__.push(arguments[i__4731__auto___5084]);
        var G__5085 = i__4731__auto___5084 + 1;
        i__4731__auto___5084 = G__5085;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5082);
cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5082) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5082), args);
  };
}(g__4999__auto___5082);
cljs.spec.gen.alpha.vector_distinct.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector_distinct.cljs$lang$applyTo = function(g__4999__auto___5082) {
  return function(seq5044) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5044));
  };
}(g__4999__auto___5082);
var g__4999__auto___5086 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.fmap !== "undefined") {
    return clojure.test.check.generators.fmap;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.fmap = function(g__4999__auto___5086) {
  return function cljs$spec$gen$alpha$fmap(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5087 = arguments.length;
    var i__4731__auto___5088 = 0;
    while (true) {
      if (i__4731__auto___5088 < len__4730__auto___5087) {
        args__4736__auto__.push(arguments[i__4731__auto___5088]);
        var G__5089 = i__4731__auto___5088 + 1;
        i__4731__auto___5088 = G__5089;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5086);
cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5086) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5086), args);
  };
}(g__4999__auto___5086);
cljs.spec.gen.alpha.fmap.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.fmap.cljs$lang$applyTo = function(g__4999__auto___5086) {
  return function(seq5045) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5045));
  };
}(g__4999__auto___5086);
var g__4999__auto___5090 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.elements !== "undefined") {
    return clojure.test.check.generators.elements;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.elements = function(g__4999__auto___5090) {
  return function cljs$spec$gen$alpha$elements(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5091 = arguments.length;
    var i__4731__auto___5092 = 0;
    while (true) {
      if (i__4731__auto___5092 < len__4730__auto___5091) {
        args__4736__auto__.push(arguments[i__4731__auto___5092]);
        var G__5093 = i__4731__auto___5092 + 1;
        i__4731__auto___5092 = G__5093;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5090);
cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5090) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5090), args);
  };
}(g__4999__auto___5090);
cljs.spec.gen.alpha.elements.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.elements.cljs$lang$applyTo = function(g__4999__auto___5090) {
  return function(seq5046) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5046));
  };
}(g__4999__auto___5090);
var g__4999__auto___5094 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.bind !== "undefined") {
    return clojure.test.check.generators.bind;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.bind = function(g__4999__auto___5094) {
  return function cljs$spec$gen$alpha$bind(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5095 = arguments.length;
    var i__4731__auto___5096 = 0;
    while (true) {
      if (i__4731__auto___5096 < len__4730__auto___5095) {
        args__4736__auto__.push(arguments[i__4731__auto___5096]);
        var G__5097 = i__4731__auto___5096 + 1;
        i__4731__auto___5096 = G__5097;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5094);
cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5094) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5094), args);
  };
}(g__4999__auto___5094);
cljs.spec.gen.alpha.bind.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.bind.cljs$lang$applyTo = function(g__4999__auto___5094) {
  return function(seq5047) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5047));
  };
}(g__4999__auto___5094);
var g__4999__auto___5098 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.choose !== "undefined") {
    return clojure.test.check.generators.choose;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.choose = function(g__4999__auto___5098) {
  return function cljs$spec$gen$alpha$choose(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5099 = arguments.length;
    var i__4731__auto___5100 = 0;
    while (true) {
      if (i__4731__auto___5100 < len__4730__auto___5099) {
        args__4736__auto__.push(arguments[i__4731__auto___5100]);
        var G__5101 = i__4731__auto___5100 + 1;
        i__4731__auto___5100 = G__5101;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5098);
cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5098) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5098), args);
  };
}(g__4999__auto___5098);
cljs.spec.gen.alpha.choose.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.choose.cljs$lang$applyTo = function(g__4999__auto___5098) {
  return function(seq5048) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5048));
  };
}(g__4999__auto___5098);
var g__4999__auto___5102 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.one_of !== "undefined") {
    return clojure.test.check.generators.one_of;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.one_of = function(g__4999__auto___5102) {
  return function cljs$spec$gen$alpha$one_of(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5103 = arguments.length;
    var i__4731__auto___5104 = 0;
    while (true) {
      if (i__4731__auto___5104 < len__4730__auto___5103) {
        args__4736__auto__.push(arguments[i__4731__auto___5104]);
        var G__5105 = i__4731__auto___5104 + 1;
        i__4731__auto___5104 = G__5105;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5102);
cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5102) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5102), args);
  };
}(g__4999__auto___5102);
cljs.spec.gen.alpha.one_of.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.one_of.cljs$lang$applyTo = function(g__4999__auto___5102) {
  return function(seq5049) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5049));
  };
}(g__4999__auto___5102);
var g__4999__auto___5106 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.such_that !== "undefined") {
    return clojure.test.check.generators.such_that;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.such_that = function(g__4999__auto___5106) {
  return function cljs$spec$gen$alpha$such_that(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5107 = arguments.length;
    var i__4731__auto___5108 = 0;
    while (true) {
      if (i__4731__auto___5108 < len__4730__auto___5107) {
        args__4736__auto__.push(arguments[i__4731__auto___5108]);
        var G__5109 = i__4731__auto___5108 + 1;
        i__4731__auto___5108 = G__5109;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5106);
cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5106) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5106), args);
  };
}(g__4999__auto___5106);
cljs.spec.gen.alpha.such_that.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.such_that.cljs$lang$applyTo = function(g__4999__auto___5106) {
  return function(seq5050) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5050));
  };
}(g__4999__auto___5106);
var g__4999__auto___5110 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.tuple !== "undefined") {
    return clojure.test.check.generators.tuple;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.tuple = function(g__4999__auto___5110) {
  return function cljs$spec$gen$alpha$tuple(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5111 = arguments.length;
    var i__4731__auto___5112 = 0;
    while (true) {
      if (i__4731__auto___5112 < len__4730__auto___5111) {
        args__4736__auto__.push(arguments[i__4731__auto___5112]);
        var G__5113 = i__4731__auto___5112 + 1;
        i__4731__auto___5112 = G__5113;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5110);
cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5110) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5110), args);
  };
}(g__4999__auto___5110);
cljs.spec.gen.alpha.tuple.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.tuple.cljs$lang$applyTo = function(g__4999__auto___5110) {
  return function(seq5051) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5051));
  };
}(g__4999__auto___5110);
var g__4999__auto___5114 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.sample !== "undefined") {
    return clojure.test.check.generators.sample;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.sample = function(g__4999__auto___5114) {
  return function cljs$spec$gen$alpha$sample(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5115 = arguments.length;
    var i__4731__auto___5116 = 0;
    while (true) {
      if (i__4731__auto___5116 < len__4730__auto___5115) {
        args__4736__auto__.push(arguments[i__4731__auto___5116]);
        var G__5117 = i__4731__auto___5116 + 1;
        i__4731__auto___5116 = G__5117;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5114);
cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5114) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5114), args);
  };
}(g__4999__auto___5114);
cljs.spec.gen.alpha.sample.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.sample.cljs$lang$applyTo = function(g__4999__auto___5114) {
  return function(seq5052) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5052));
  };
}(g__4999__auto___5114);
var g__4999__auto___5118 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.return$ !== "undefined") {
    return clojure.test.check.generators.return$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.return$ = function(g__4999__auto___5118) {
  return function cljs$spec$gen$alpha$return(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5119 = arguments.length;
    var i__4731__auto___5120 = 0;
    while (true) {
      if (i__4731__auto___5120 < len__4730__auto___5119) {
        args__4736__auto__.push(arguments[i__4731__auto___5120]);
        var G__5121 = i__4731__auto___5120 + 1;
        i__4731__auto___5120 = G__5121;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5118);
cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5118) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5118), args);
  };
}(g__4999__auto___5118);
cljs.spec.gen.alpha.return$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.return$.cljs$lang$applyTo = function(g__4999__auto___5118) {
  return function(seq5053) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5053));
  };
}(g__4999__auto___5118);
var g__4999__auto___5122 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.large_integer_STAR_ !== "undefined") {
    return clojure.test.check.generators.large_integer_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer_STAR_ = function(g__4999__auto___5122) {
  return function cljs$spec$gen$alpha$large_integer_STAR_(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5123 = arguments.length;
    var i__4731__auto___5124 = 0;
    while (true) {
      if (i__4731__auto___5124 < len__4730__auto___5123) {
        args__4736__auto__.push(arguments[i__4731__auto___5124]);
        var G__5125 = i__4731__auto___5124 + 1;
        i__4731__auto___5124 = G__5125;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5122);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5122) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5122), args);
  };
}(g__4999__auto___5122);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$applyTo = function(g__4999__auto___5122) {
  return function(seq5054) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5054));
  };
}(g__4999__auto___5122);
var g__4999__auto___5126 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.double_STAR_ !== "undefined") {
    return clojure.test.check.generators.double_STAR_;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double_STAR_ = function(g__4999__auto___5126) {
  return function cljs$spec$gen$alpha$double_STAR_(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5127 = arguments.length;
    var i__4731__auto___5128 = 0;
    while (true) {
      if (i__4731__auto___5128 < len__4730__auto___5127) {
        args__4736__auto__.push(arguments[i__4731__auto___5128]);
        var G__5129 = i__4731__auto___5128 + 1;
        i__4731__auto___5128 = G__5129;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5126);
cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5126) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5126), args);
  };
}(g__4999__auto___5126);
cljs.spec.gen.alpha.double_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double_STAR_.cljs$lang$applyTo = function(g__4999__auto___5126) {
  return function(seq5055) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5055));
  };
}(g__4999__auto___5126);
var g__4999__auto___5130 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.frequency !== "undefined") {
    return clojure.test.check.generators.frequency;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.frequency = function(g__4999__auto___5130) {
  return function cljs$spec$gen$alpha$frequency(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5131 = arguments.length;
    var i__4731__auto___5132 = 0;
    while (true) {
      if (i__4731__auto___5132 < len__4730__auto___5131) {
        args__4736__auto__.push(arguments[i__4731__auto___5132]);
        var G__5133 = i__4731__auto___5132 + 1;
        i__4731__auto___5132 = G__5133;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5130);
cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5130) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5130), args);
  };
}(g__4999__auto___5130);
cljs.spec.gen.alpha.frequency.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.frequency.cljs$lang$applyTo = function(g__4999__auto___5130) {
  return function(seq5056) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5056));
  };
}(g__4999__auto___5130);
var g__4999__auto___5134 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.shuffle !== "undefined") {
    return clojure.test.check.generators.shuffle;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "shuffle", "clojure.test.check.generators/shuffle", 1032401055, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "shuffle", "clojure.test.check.generators/shuffle", 1032401055, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.shuffle = function(g__4999__auto___5134) {
  return function cljs$spec$gen$alpha$shuffle(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5135 = arguments.length;
    var i__4731__auto___5136 = 0;
    while (true) {
      if (i__4731__auto___5136 < len__4730__auto___5135) {
        args__4736__auto__.push(arguments[i__4731__auto___5136]);
        var G__5137 = i__4731__auto___5136 + 1;
        i__4731__auto___5136 = G__5137;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.shuffle.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__4999__auto___5134);
cljs.spec.gen.alpha.shuffle.cljs$core$IFn$_invoke$arity$variadic = function(g__4999__auto___5134) {
  return function(args) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, g__4999__auto___5134), args);
  };
}(g__4999__auto___5134);
cljs.spec.gen.alpha.shuffle.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.shuffle.cljs$lang$applyTo = function(g__4999__auto___5134) {
  return function(seq5057) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5057));
  };
}(g__4999__auto___5134);
var g__5012__auto___5159 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.any !== "undefined") {
    return clojure.test.check.generators.any;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any = function(g__5012__auto___5159) {
  return function cljs$spec$gen$alpha$any(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5160 = arguments.length;
    var i__4731__auto___5161 = 0;
    while (true) {
      if (i__4731__auto___5161 < len__4730__auto___5160) {
        args__4736__auto__.push(arguments[i__4731__auto___5161]);
        var G__5162 = i__4731__auto___5161 + 1;
        i__4731__auto___5161 = G__5162;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5159);
cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5159) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5159);
  };
}(g__5012__auto___5159);
cljs.spec.gen.alpha.any.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any.cljs$lang$applyTo = function(g__5012__auto___5159) {
  return function(seq5138) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5138));
  };
}(g__5012__auto___5159);
var g__5012__auto___5163 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.any_printable !== "undefined") {
    return clojure.test.check.generators.any_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.any_printable = function(g__5012__auto___5163) {
  return function cljs$spec$gen$alpha$any_printable(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5164 = arguments.length;
    var i__4731__auto___5165 = 0;
    while (true) {
      if (i__4731__auto___5165 < len__4730__auto___5164) {
        args__4736__auto__.push(arguments[i__4731__auto___5165]);
        var G__5166 = i__4731__auto___5165 + 1;
        i__4731__auto___5165 = G__5166;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5163);
cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5163) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5163);
  };
}(g__5012__auto___5163);
cljs.spec.gen.alpha.any_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any_printable.cljs$lang$applyTo = function(g__5012__auto___5163) {
  return function(seq5139) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5139));
  };
}(g__5012__auto___5163);
var g__5012__auto___5167 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.boolean$ !== "undefined") {
    return clojure.test.check.generators.boolean$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.boolean$ = function(g__5012__auto___5167) {
  return function cljs$spec$gen$alpha$boolean(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5168 = arguments.length;
    var i__4731__auto___5169 = 0;
    while (true) {
      if (i__4731__auto___5169 < len__4730__auto___5168) {
        args__4736__auto__.push(arguments[i__4731__auto___5169]);
        var G__5170 = i__4731__auto___5169 + 1;
        i__4731__auto___5169 = G__5170;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5167);
cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5167) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5167);
  };
}(g__5012__auto___5167);
cljs.spec.gen.alpha.boolean$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.boolean$.cljs$lang$applyTo = function(g__5012__auto___5167) {
  return function(seq5140) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5140));
  };
}(g__5012__auto___5167);
var g__5012__auto___5171 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char$ !== "undefined") {
    return clojure.test.check.generators.char$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char$ = function(g__5012__auto___5171) {
  return function cljs$spec$gen$alpha$char(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5172 = arguments.length;
    var i__4731__auto___5173 = 0;
    while (true) {
      if (i__4731__auto___5173 < len__4730__auto___5172) {
        args__4736__auto__.push(arguments[i__4731__auto___5173]);
        var G__5174 = i__4731__auto___5173 + 1;
        i__4731__auto___5173 = G__5174;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5171);
cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5171) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5171);
  };
}(g__5012__auto___5171);
cljs.spec.gen.alpha.char$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char$.cljs$lang$applyTo = function(g__5012__auto___5171) {
  return function(seq5141) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5141));
  };
}(g__5012__auto___5171);
var g__5012__auto___5175 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_alpha !== "undefined") {
    return clojure.test.check.generators.char_alpha;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alpha = function(g__5012__auto___5175) {
  return function cljs$spec$gen$alpha$char_alpha(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5176 = arguments.length;
    var i__4731__auto___5177 = 0;
    while (true) {
      if (i__4731__auto___5177 < len__4730__auto___5176) {
        args__4736__auto__.push(arguments[i__4731__auto___5177]);
        var G__5178 = i__4731__auto___5177 + 1;
        i__4731__auto___5177 = G__5178;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5175);
cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5175) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5175);
  };
}(g__5012__auto___5175);
cljs.spec.gen.alpha.char_alpha.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alpha.cljs$lang$applyTo = function(g__5012__auto___5175) {
  return function(seq5142) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5142));
  };
}(g__5012__auto___5175);
var g__5012__auto___5179 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_alphanumeric !== "undefined") {
    return clojure.test.check.generators.char_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_alphanumeric = function(g__5012__auto___5179) {
  return function cljs$spec$gen$alpha$char_alphanumeric(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5180 = arguments.length;
    var i__4731__auto___5181 = 0;
    while (true) {
      if (i__4731__auto___5181 < len__4730__auto___5180) {
        args__4736__auto__.push(arguments[i__4731__auto___5181]);
        var G__5182 = i__4731__auto___5181 + 1;
        i__4731__auto___5181 = G__5182;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5179);
cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5179) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5179);
  };
}(g__5012__auto___5179);
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$applyTo = function(g__5012__auto___5179) {
  return function(seq5143) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5143));
  };
}(g__5012__auto___5179);
var g__5012__auto___5183 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.char_ascii !== "undefined") {
    return clojure.test.check.generators.char_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.char_ascii = function(g__5012__auto___5183) {
  return function cljs$spec$gen$alpha$char_ascii(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5184 = arguments.length;
    var i__4731__auto___5185 = 0;
    while (true) {
      if (i__4731__auto___5185 < len__4730__auto___5184) {
        args__4736__auto__.push(arguments[i__4731__auto___5185]);
        var G__5186 = i__4731__auto___5185 + 1;
        i__4731__auto___5185 = G__5186;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5183);
cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5183) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5183);
  };
}(g__5012__auto___5183);
cljs.spec.gen.alpha.char_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_ascii.cljs$lang$applyTo = function(g__5012__auto___5183) {
  return function(seq5144) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5144));
  };
}(g__5012__auto___5183);
var g__5012__auto___5187 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.double$ !== "undefined") {
    return clojure.test.check.generators.double$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.double$ = function(g__5012__auto___5187) {
  return function cljs$spec$gen$alpha$double(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5188 = arguments.length;
    var i__4731__auto___5189 = 0;
    while (true) {
      if (i__4731__auto___5189 < len__4730__auto___5188) {
        args__4736__auto__.push(arguments[i__4731__auto___5189]);
        var G__5190 = i__4731__auto___5189 + 1;
        i__4731__auto___5189 = G__5190;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5187);
cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5187) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5187);
  };
}(g__5012__auto___5187);
cljs.spec.gen.alpha.double$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double$.cljs$lang$applyTo = function(g__5012__auto___5187) {
  return function(seq5145) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5145));
  };
}(g__5012__auto___5187);
var g__5012__auto___5191 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.int$ !== "undefined") {
    return clojure.test.check.generators.int$;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.int$ = function(g__5012__auto___5191) {
  return function cljs$spec$gen$alpha$int(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5192 = arguments.length;
    var i__4731__auto___5193 = 0;
    while (true) {
      if (i__4731__auto___5193 < len__4730__auto___5192) {
        args__4736__auto__.push(arguments[i__4731__auto___5193]);
        var G__5194 = i__4731__auto___5193 + 1;
        i__4731__auto___5193 = G__5194;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5191);
cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5191) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5191);
  };
}(g__5012__auto___5191);
cljs.spec.gen.alpha.int$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.int$.cljs$lang$applyTo = function(g__5012__auto___5191) {
  return function(seq5146) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5146));
  };
}(g__5012__auto___5191);
var g__5012__auto___5195 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.keyword !== "undefined") {
    return clojure.test.check.generators.keyword;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword = function(g__5012__auto___5195) {
  return function cljs$spec$gen$alpha$keyword(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5196 = arguments.length;
    var i__4731__auto___5197 = 0;
    while (true) {
      if (i__4731__auto___5197 < len__4730__auto___5196) {
        args__4736__auto__.push(arguments[i__4731__auto___5197]);
        var G__5198 = i__4731__auto___5197 + 1;
        i__4731__auto___5197 = G__5198;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5195);
cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5195) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5195);
  };
}(g__5012__auto___5195);
cljs.spec.gen.alpha.keyword.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword.cljs$lang$applyTo = function(g__5012__auto___5195) {
  return function(seq5147) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5147));
  };
}(g__5012__auto___5195);
var g__5012__auto___5199 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.keyword_ns !== "undefined") {
    return clojure.test.check.generators.keyword_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.keyword_ns = function(g__5012__auto___5199) {
  return function cljs$spec$gen$alpha$keyword_ns(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5200 = arguments.length;
    var i__4731__auto___5201 = 0;
    while (true) {
      if (i__4731__auto___5201 < len__4730__auto___5200) {
        args__4736__auto__.push(arguments[i__4731__auto___5201]);
        var G__5202 = i__4731__auto___5201 + 1;
        i__4731__auto___5201 = G__5202;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5199);
cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5199) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5199);
  };
}(g__5012__auto___5199);
cljs.spec.gen.alpha.keyword_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword_ns.cljs$lang$applyTo = function(g__5012__auto___5199) {
  return function(seq5148) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5148));
  };
}(g__5012__auto___5199);
var g__5012__auto___5203 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.large_integer !== "undefined") {
    return clojure.test.check.generators.large_integer;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.large_integer = function(g__5012__auto___5203) {
  return function cljs$spec$gen$alpha$large_integer(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5204 = arguments.length;
    var i__4731__auto___5205 = 0;
    while (true) {
      if (i__4731__auto___5205 < len__4730__auto___5204) {
        args__4736__auto__.push(arguments[i__4731__auto___5205]);
        var G__5206 = i__4731__auto___5205 + 1;
        i__4731__auto___5205 = G__5206;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5203);
cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5203) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5203);
  };
}(g__5012__auto___5203);
cljs.spec.gen.alpha.large_integer.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer.cljs$lang$applyTo = function(g__5012__auto___5203) {
  return function(seq5149) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5149));
  };
}(g__5012__auto___5203);
var g__5012__auto___5207 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.ratio !== "undefined") {
    return clojure.test.check.generators.ratio;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.ratio = function(g__5012__auto___5207) {
  return function cljs$spec$gen$alpha$ratio(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5208 = arguments.length;
    var i__4731__auto___5209 = 0;
    while (true) {
      if (i__4731__auto___5209 < len__4730__auto___5208) {
        args__4736__auto__.push(arguments[i__4731__auto___5209]);
        var G__5210 = i__4731__auto___5209 + 1;
        i__4731__auto___5209 = G__5210;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5207);
cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5207) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5207);
  };
}(g__5012__auto___5207);
cljs.spec.gen.alpha.ratio.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.ratio.cljs$lang$applyTo = function(g__5012__auto___5207) {
  return function(seq5150) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5150));
  };
}(g__5012__auto___5207);
var g__5012__auto___5211 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.simple_type !== "undefined") {
    return clojure.test.check.generators.simple_type;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type = function(g__5012__auto___5211) {
  return function cljs$spec$gen$alpha$simple_type(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5212 = arguments.length;
    var i__4731__auto___5213 = 0;
    while (true) {
      if (i__4731__auto___5213 < len__4730__auto___5212) {
        args__4736__auto__.push(arguments[i__4731__auto___5213]);
        var G__5214 = i__4731__auto___5213 + 1;
        i__4731__auto___5213 = G__5214;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5211);
cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5211) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5211);
  };
}(g__5012__auto___5211);
cljs.spec.gen.alpha.simple_type.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type.cljs$lang$applyTo = function(g__5012__auto___5211) {
  return function(seq5151) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5151));
  };
}(g__5012__auto___5211);
var g__5012__auto___5215 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.simple_type_printable !== "undefined") {
    return clojure.test.check.generators.simple_type_printable;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.simple_type_printable = function(g__5012__auto___5215) {
  return function cljs$spec$gen$alpha$simple_type_printable(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5216 = arguments.length;
    var i__4731__auto___5217 = 0;
    while (true) {
      if (i__4731__auto___5217 < len__4730__auto___5216) {
        args__4736__auto__.push(arguments[i__4731__auto___5217]);
        var G__5218 = i__4731__auto___5217 + 1;
        i__4731__auto___5217 = G__5218;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5215);
cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5215) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5215);
  };
}(g__5012__auto___5215);
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$applyTo = function(g__5012__auto___5215) {
  return function(seq5152) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5152));
  };
}(g__5012__auto___5215);
var g__5012__auto___5219 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string !== "undefined") {
    return clojure.test.check.generators.string;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string = function(g__5012__auto___5219) {
  return function cljs$spec$gen$alpha$string(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5220 = arguments.length;
    var i__4731__auto___5221 = 0;
    while (true) {
      if (i__4731__auto___5221 < len__4730__auto___5220) {
        args__4736__auto__.push(arguments[i__4731__auto___5221]);
        var G__5222 = i__4731__auto___5221 + 1;
        i__4731__auto___5221 = G__5222;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5219);
cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5219) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5219);
  };
}(g__5012__auto___5219);
cljs.spec.gen.alpha.string.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string.cljs$lang$applyTo = function(g__5012__auto___5219) {
  return function(seq5153) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5153));
  };
}(g__5012__auto___5219);
var g__5012__auto___5223 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string_ascii !== "undefined") {
    return clojure.test.check.generators.string_ascii;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_ascii = function(g__5012__auto___5223) {
  return function cljs$spec$gen$alpha$string_ascii(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5224 = arguments.length;
    var i__4731__auto___5225 = 0;
    while (true) {
      if (i__4731__auto___5225 < len__4730__auto___5224) {
        args__4736__auto__.push(arguments[i__4731__auto___5225]);
        var G__5226 = i__4731__auto___5225 + 1;
        i__4731__auto___5225 = G__5226;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5223);
cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5223) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5223);
  };
}(g__5012__auto___5223);
cljs.spec.gen.alpha.string_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_ascii.cljs$lang$applyTo = function(g__5012__auto___5223) {
  return function(seq5154) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5154));
  };
}(g__5012__auto___5223);
var g__5012__auto___5227 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.string_alphanumeric !== "undefined") {
    return clojure.test.check.generators.string_alphanumeric;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.string_alphanumeric = function(g__5012__auto___5227) {
  return function cljs$spec$gen$alpha$string_alphanumeric(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5228 = arguments.length;
    var i__4731__auto___5229 = 0;
    while (true) {
      if (i__4731__auto___5229 < len__4730__auto___5228) {
        args__4736__auto__.push(arguments[i__4731__auto___5229]);
        var G__5230 = i__4731__auto___5229 + 1;
        i__4731__auto___5229 = G__5230;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5227);
cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5227) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5227);
  };
}(g__5012__auto___5227);
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$applyTo = function(g__5012__auto___5227) {
  return function(seq5155) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5155));
  };
}(g__5012__auto___5227);
var g__5012__auto___5231 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.symbol !== "undefined") {
    return clojure.test.check.generators.symbol;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol = function(g__5012__auto___5231) {
  return function cljs$spec$gen$alpha$symbol(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5232 = arguments.length;
    var i__4731__auto___5233 = 0;
    while (true) {
      if (i__4731__auto___5233 < len__4730__auto___5232) {
        args__4736__auto__.push(arguments[i__4731__auto___5233]);
        var G__5234 = i__4731__auto___5233 + 1;
        i__4731__auto___5233 = G__5234;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5231);
cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5231) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5231);
  };
}(g__5012__auto___5231);
cljs.spec.gen.alpha.symbol.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol.cljs$lang$applyTo = function(g__5012__auto___5231) {
  return function(seq5156) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5156));
  };
}(g__5012__auto___5231);
var g__5012__auto___5235 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.symbol_ns !== "undefined") {
    return clojure.test.check.generators.symbol_ns;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.symbol_ns = function(g__5012__auto___5235) {
  return function cljs$spec$gen$alpha$symbol_ns(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5236 = arguments.length;
    var i__4731__auto___5237 = 0;
    while (true) {
      if (i__4731__auto___5237 < len__4730__auto___5236) {
        args__4736__auto__.push(arguments[i__4731__auto___5237]);
        var G__5238 = i__4731__auto___5237 + 1;
        i__4731__auto___5237 = G__5238;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5235);
cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5235) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5235);
  };
}(g__5012__auto___5235);
cljs.spec.gen.alpha.symbol_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol_ns.cljs$lang$applyTo = function(g__5012__auto___5235) {
  return function(seq5157) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5157));
  };
}(g__5012__auto___5235);
var g__5012__auto___5239 = new cljs.spec.gen.alpha.LazyVar(function() {
  if (typeof clojure !== "undefined" && typeof clojure.test !== "undefined" && typeof clojure.test.check !== "undefined" && typeof clojure.test.check.generators !== "undefined" && typeof clojure.test.check.generators.uuid !== "undefined") {
    return clojure.test.check.generators.uuid;
  } else {
    throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " never required"].join(""));
  }
}, null);
cljs.spec.gen.alpha.uuid = function(g__5012__auto___5239) {
  return function cljs$spec$gen$alpha$uuid(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___5240 = arguments.length;
    var i__4731__auto___5241 = 0;
    while (true) {
      if (i__4731__auto___5241 < len__4730__auto___5240) {
        args__4736__auto__.push(arguments[i__4731__auto___5241]);
        var G__5242 = i__4731__auto___5241 + 1;
        i__4731__auto___5241 = G__5242;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
  };
}(g__5012__auto___5239);
cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic = function(g__5012__auto___5239) {
  return function(args) {
    return cljs.core.deref.call(null, g__5012__auto___5239);
  };
}(g__5012__auto___5239);
cljs.spec.gen.alpha.uuid.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.uuid.cljs$lang$applyTo = function(g__5012__auto___5239) {
  return function(seq5158) {
    var self__4718__auto__ = this;
    return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5158));
  };
}(g__5012__auto___5239);
cljs.spec.gen.alpha.cat = function cljs$spec$gen$alpha$cat(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5245 = arguments.length;
  var i__4731__auto___5246 = 0;
  while (true) {
    if (i__4731__auto___5246 < len__4730__auto___5245) {
      args__4736__auto__.push(arguments[i__4731__auto___5246]);
      var G__5247 = i__4731__auto___5246 + 1;
      i__4731__auto___5246 = G__5247;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic = function(gens) {
  return cljs.spec.gen.alpha.fmap.call(null, function(p1__5243_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.concat, p1__5243_SHARP_);
  }, cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gens));
};
cljs.spec.gen.alpha.cat.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.cat.cljs$lang$applyTo = function(seq5244) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5244));
};
cljs.spec.gen.alpha.qualified_QMARK_ = function cljs$spec$gen$alpha$qualified_QMARK_(ident) {
  return !(cljs.core.namespace.call(null, ident) == null);
};
cljs.spec.gen.alpha.gen_builtins = new cljs.core.Delay(function() {
  var simple = cljs.spec.gen.alpha.simple_type_printable.call(null);
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.qualified_keyword_QMARK_, cljs.core.seq_QMARK_, cljs.core.vector_QMARK_, cljs.core.any_QMARK_, cljs.core.boolean_QMARK_, cljs.core.char_QMARK_, cljs.core.some_QMARK_, cljs.core.inst_QMARK_, cljs.core.simple_symbol_QMARK_, cljs.core.sequential_QMARK_, cljs.core.float_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_, cljs.core.empty_QMARK_, cljs.core.string_QMARK_, cljs.core.uri_QMARK_, cljs.core.double_QMARK_, cljs.core.int_QMARK_, cljs.core.associative_QMARK_, 
  cljs.core.keyword_QMARK_, cljs.core.indexed_QMARK_, cljs.core.zero_QMARK_, cljs.core.simple_keyword_QMARK_, cljs.core.neg_int_QMARK_, cljs.core.nil_QMARK_, cljs.core.ident_QMARK_, cljs.core.qualified_ident_QMARK_, cljs.core.true_QMARK_, cljs.core.integer_QMARK_, cljs.core.nat_int_QMARK_, cljs.core.pos_int_QMARK_, cljs.core.uuid_QMARK_, cljs.core.false_QMARK_, cljs.core.list_QMARK_, cljs.core.simple_ident_QMARK_, cljs.core.number_QMARK_, cljs.core.qualified_symbol_QMARK_, cljs.core.seqable_QMARK_, 
  cljs.core.symbol_QMARK_, cljs.core.coll_QMARK_], [cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.keyword_ns.call(null)), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.any_printable.call(null)], null)), cljs.spec.gen.alpha.boolean$.call(null), 
  cljs.spec.gen.alpha.char$.call(null), cljs.spec.gen.alpha.such_that.call(null, cljs.core.some_QMARK_, cljs.spec.gen.alpha.any_printable.call(null)), cljs.spec.gen.alpha.fmap.call(null, function(simple) {
    return function(p1__5249_SHARP_) {
      return new Date(p1__5249_SHARP_);
    };
  }(simple), cljs.spec.gen.alpha.large_integer.call(null)), cljs.spec.gen.alpha.symbol.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.elements.call(null, new cljs.core.PersistentVector(null, 
  5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentHashSet.EMPTY], null)), cljs.spec.gen.alpha.string_alphanumeric.call(null), cljs.spec.gen.alpha.fmap.call(null, function(simple) {
    return function(p1__5248_SHARP_) {
      return new goog.Uri(["http://", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__5248_SHARP_), ".com"].join(""));
    };
  }(simple), cljs.spec.gen.alpha.uuid.call(null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.vector.call(null, simple)], null)), cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.return$.call(null, 0), cljs.spec.gen.alpha.keyword.call(null), 
  cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), -1], null)), cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, 
  cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null))), cljs.spec.gen.alpha.return$.call(null, true), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null)), cljs.spec.gen.alpha.large_integer_STAR_.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)), cljs.spec.gen.alpha.uuid.call(null), cljs.spec.gen.alpha.return$.call(null, false), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.symbol.call(null)], null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.double$.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.symbol_ns.call(null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, 
  simple), cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.set.call(null, simple), cljs.spec.gen.alpha.string_alphanumeric.call(null)], null)), cljs.spec.gen.alpha.symbol_ns.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, simple, simple), cljs.spec.gen.alpha.list.call(null, simple), cljs.spec.gen.alpha.vector.call(null, simple), cljs.spec.gen.alpha.set.call(null, 
  simple)], null))]);
}, null);
cljs.spec.gen.alpha.gen_for_pred = function cljs$spec$gen$alpha$gen_for_pred(pred) {
  if (cljs.core.set_QMARK_.call(null, pred)) {
    return cljs.spec.gen.alpha.elements.call(null, pred);
  } else {
    return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.gen_builtins), pred);
  }
};
goog.provide("cljs.spec.alpha");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("cljs.spec.gen.alpha");
goog.require("clojure.string");
cljs.spec.alpha.MAX_INT = 9007199254740991;
cljs.spec.alpha._STAR_recursion_limit_STAR_ = 4;
cljs.spec.alpha._STAR_fspec_iterations_STAR_ = 21;
cljs.spec.alpha._STAR_coll_check_limit_STAR_ = 101;
cljs.spec.alpha._STAR_coll_error_limit_STAR_ = 20;
cljs.spec.alpha.Spec = function() {
};
cljs.spec.alpha.conform_STAR_ = function cljs$spec$alpha$conform_STAR_(spec, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$conform_STAR_$arity$2(spec, x);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.conform_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec, x);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.conform_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.conform*", spec);
      }
    }
  }
};
cljs.spec.alpha.unform_STAR_ = function cljs$spec$alpha$unform_STAR_(spec, y) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$unform_STAR_$arity$2(spec, y);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.unform_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec, y);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.unform_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec, y);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.unform*", spec);
      }
    }
  }
};
cljs.spec.alpha.explain_STAR_ = function cljs$spec$alpha$explain_STAR_(spec, path, via, in$, x) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5 == null)) {
    return spec.cljs$spec$alpha$Spec$explain_STAR_$arity$5(spec, path, via, in$, x);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.explain_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec, path, via, in$, x);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.explain_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec, path, via, in$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.explain*", spec);
      }
    }
  }
};
cljs.spec.alpha.gen_STAR_ = function cljs$spec$alpha$gen_STAR_(spec, overrides, path, rmap) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4 == null)) {
    return spec.cljs$spec$alpha$Spec$gen_STAR_$arity$4(spec, overrides, path, rmap);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.gen_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec, overrides, path, rmap);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.gen_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec, overrides, path, rmap);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.gen*", spec);
      }
    }
  }
};
cljs.spec.alpha.with_gen_STAR_ = function cljs$spec$alpha$with_gen_STAR_(spec, gfn) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 == null)) {
    return spec.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2(spec, gfn);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.with_gen_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec, gfn);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.with_gen_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec, gfn);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.with-gen*", spec);
      }
    }
  }
};
cljs.spec.alpha.describe_STAR_ = function cljs$spec$alpha$describe_STAR_(spec) {
  if (!(spec == null) && !(spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1 == null)) {
    return spec.cljs$spec$alpha$Spec$describe_STAR_$arity$1(spec);
  } else {
    var x__4433__auto__ = spec == null ? null : spec;
    var m__4434__auto__ = cljs.spec.alpha.describe_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, spec);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.describe_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, spec);
      } else {
        throw cljs.core.missing_protocol.call(null, "Spec.describe*", spec);
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.registry_ref !== "undefined") {
} else {
  cljs.spec.alpha.registry_ref = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
cljs.spec.alpha.deep_resolve = function cljs$spec$alpha$deep_resolve(reg, k) {
  var spec = k;
  while (true) {
    if (cljs.core.ident_QMARK_.call(null, spec)) {
      var G__5523 = cljs.core.get.call(null, reg, spec);
      spec = G__5523;
      continue;
    } else {
      return spec;
    }
    break;
  }
};
cljs.spec.alpha.reg_resolve = function cljs$spec$alpha$reg_resolve(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var reg = cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
    var spec = cljs.core.get.call(null, reg, k);
    if (!cljs.core.ident_QMARK_.call(null, spec)) {
      return spec;
    } else {
      return cljs.spec.alpha.deep_resolve.call(null, reg, spec);
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.reg_resolve_BANG_ = function cljs$spec$alpha$reg_resolve_BANG_(k) {
  if (cljs.core.ident_QMARK_.call(null, k)) {
    var or__4131__auto__ = cljs.spec.alpha.reg_resolve.call(null, k);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)].join(""));
    }
  } else {
    return k;
  }
};
cljs.spec.alpha.spec_QMARK_ = function cljs$spec$alpha$spec_QMARK_(x) {
  if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.cljs$spec$alpha$Spec$ ? true : false : false) {
    return x;
  } else {
    return null;
  }
};
cljs.spec.alpha.regex_QMARK_ = function cljs$spec$alpha$regex_QMARK_(x) {
  var and__4120__auto__ = (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(x);
  if (cljs.core.truth_(and__4120__auto__)) {
    return x;
  } else {
    return and__4120__auto__;
  }
};
cljs.spec.alpha.with_name = function cljs$spec$alpha$with_name(spec, name) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return cljs.core.assoc.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, spec, cljs.core.assoc.call(null, cljs.core.meta.call(null, spec), new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), name));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.spec_name = function cljs$spec$alpha$spec_name(spec) {
  if (cljs.core.ident_QMARK_.call(null, spec)) {
    return spec;
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec))) {
      return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(spec);
    } else {
      if (!(spec == null) ? spec.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === spec.cljs$core$IMeta$ ? true : false : false) {
        return (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, spec));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.maybe_spec = function cljs$spec$alpha$maybe_spec(spec_or_k) {
  var s = function() {
    var or__4131__auto__ = function() {
      var and__4120__auto__ = cljs.core.ident_QMARK_.call(null, spec_or_k);
      if (and__4120__auto__) {
        return cljs.spec.alpha.reg_resolve.call(null, spec_or_k);
      } else {
        return and__4120__auto__;
      }
    }();
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      var or__4131__auto____$1 = cljs.spec.alpha.spec_QMARK_.call(null, spec_or_k);
      if (cljs.core.truth_(or__4131__auto____$1)) {
        return or__4131__auto____$1;
      } else {
        var or__4131__auto____$2 = cljs.spec.alpha.regex_QMARK_.call(null, spec_or_k);
        if (cljs.core.truth_(or__4131__auto____$2)) {
          return or__4131__auto____$2;
        } else {
          return null;
        }
      }
    }
  }();
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, s))) {
    return cljs.spec.alpha.with_name.call(null, cljs.spec.alpha.regex_spec_impl.call(null, s, null), cljs.spec.alpha.spec_name.call(null, s));
  } else {
    return s;
  }
};
cljs.spec.alpha.the_spec = function cljs$spec$alpha$the_spec(spec_or_k) {
  var or__4131__auto__ = cljs.spec.alpha.maybe_spec.call(null, spec_or_k);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    if (cljs.core.ident_QMARK_.call(null, spec_or_k)) {
      throw new Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec_or_k)].join(""));
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.fn_sym = function cljs$spec$alpha$fn_sym(f_n) {
  if (clojure.string.blank_QMARK_.call(null, f_n)) {
    return null;
  } else {
    var xs = cljs.core.map.call(null, cljs.core.demunge, clojure.string.split.call(null, f_n, "$"));
    if (2 <= cljs.core.count.call(null, xs) && cljs.core.every_QMARK_.call(null, function(xs) {
      return function(p1__5527_SHARP_) {
        return !clojure.string.blank_QMARK_.call(null, p1__5527_SHARP_);
      };
    }(xs), xs)) {
      var vec__5528 = cljs.core.juxt.call(null, cljs.core.butlast, cljs.core.last).call(null, xs);
      var xs__$1 = cljs.core.nth.call(null, vec__5528, 0, null);
      var y = cljs.core.nth.call(null, vec__5528, 1, null);
      return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, ".", xs__$1)), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.Specize = function() {
};
cljs.spec.alpha.specize_STAR_ = function cljs$spec$alpha$specize_STAR_(var_args) {
  var G__5532 = arguments.length;
  switch(G__5532) {
    case 1:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(_) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$1 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$1(_);
  } else {
    var x__4433__auto__ = _ == null ? null : _;
    var m__4434__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, _);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(_, form) {
  if (!(_ == null) && !(_.cljs$spec$alpha$Specize$specize_STAR_$arity$2 == null)) {
    return _.cljs$spec$alpha$Specize$specize_STAR_$arity$2(_, form);
  } else {
    var x__4433__auto__ = _ == null ? null : _;
    var m__4434__auto__ = cljs.spec.alpha.specize_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, _, form);
    } else {
      var m__4431__auto__ = cljs.spec.alpha.specize_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, _, form);
      } else {
        throw cljs.core.missing_protocol.call(null, "Specize.specize*", _);
      }
    }
  }
};
cljs.spec.alpha.specize_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(k) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(k, _) {
  var k__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, k__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
  var s__$1 = this;
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, s__$1));
};
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, s__$1, s__$1, null, null);
};
cljs.core.PersistentHashSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, form) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, form, s__$1, null, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, s__$1, s__$1, null, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, form) {
  var s__$1 = this;
  return cljs.spec.alpha.spec_impl.call(null, form, s__$1, null, null);
};
goog.object.set(cljs.spec.alpha.Specize, "_", true);
goog.object.set(cljs.spec.alpha.specize_STAR_, "_", function() {
  var G__5534 = null;
  var G__5534__1 = function(o) {
    var temp__5718__auto__ = function() {
      var and__4120__auto__ = cljs.core.fn_QMARK_.call(null, o);
      if (and__4120__auto__) {
        return cljs.spec.alpha.fn_sym.call(null, o.name);
      } else {
        return and__4120__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var f_n = temp__5718__auto__;
      return cljs.spec.alpha.spec_impl.call(null, f_n, o, null, null);
    } else {
      return cljs.spec.alpha.spec_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818), o, null, null);
    }
  };
  var G__5534__2 = function(o, form) {
    return cljs.spec.alpha.spec_impl.call(null, form, o, null, null);
  };
  G__5534 = function(o, form) {
    switch(arguments.length) {
      case 1:
        return G__5534__1.call(this, o);
      case 2:
        return G__5534__2.call(this, o, form);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5534.cljs$core$IFn$_invoke$arity$1 = G__5534__1;
  G__5534.cljs$core$IFn$_invoke$arity$2 = G__5534__2;
  return G__5534;
}());
cljs.spec.alpha.specize = function cljs$spec$alpha$specize(var_args) {
  var G__5536 = arguments.length;
  switch(G__5536) {
    case 1:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1 = function(s) {
  var or__4131__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s);
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2 = function(s, form) {
  var or__4131__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, s);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.spec.alpha.specize_STAR_.call(null, s, form);
  }
};
cljs.spec.alpha.specize.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.invalid_QMARK_ = function cljs$spec$alpha$invalid_QMARK_(ret) {
  return cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119), ret);
};
cljs.spec.alpha.conform = function cljs$spec$alpha$conform(spec, x) {
  return cljs.spec.alpha.conform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.unform = function cljs$spec$alpha$unform(spec, x) {
  return cljs.spec.alpha.unform_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), x);
};
cljs.spec.alpha.form = function cljs$spec$alpha$form(spec) {
  return cljs.spec.alpha.describe_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec));
};
cljs.spec.alpha.abbrev = function cljs$spec$alpha$abbrev(form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return clojure.walk.postwalk.call(null, function(form__$1) {
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = form__$1 instanceof cljs.core.Symbol;
        if (and__4120__auto__) {
          return cljs.core.namespace.call(null, form__$1);
        } else {
          return and__4120__auto__;
        }
      }())) {
        return cljs.core.symbol.call(null, cljs.core.name.call(null, form__$1));
      } else {
        if (cljs.core.seq_QMARK_.call(null, form__$1) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), cljs.core.first.call(null, form__$1)) && cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.second.call(null, form__$1))) {
          return cljs.core.last.call(null, form__$1);
        } else {
          return form__$1;
        }
      }
    }, form);
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = form instanceof cljs.core.Symbol;
      if (and__4120__auto__) {
        return cljs.core.namespace.call(null, form);
      } else {
        return and__4120__auto__;
      }
    }())) {
      return cljs.core.symbol.call(null, cljs.core.name.call(null, form));
    } else {
      return form;
    }
  }
};
cljs.spec.alpha.describe = function cljs$spec$alpha$describe(spec) {
  return cljs.spec.alpha.abbrev.call(null, cljs.spec.alpha.form.call(null, spec));
};
cljs.spec.alpha.with_gen = function cljs$spec$alpha$with_gen(spec, gen_fn) {
  var spec__$1 = cljs.spec.alpha.reg_resolve.call(null, spec);
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, spec__$1))) {
    return cljs.core.assoc.call(null, spec__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375), gen_fn);
  } else {
    return cljs.spec.alpha.with_gen_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec__$1), gen_fn);
  }
};
cljs.spec.alpha.explain_data_STAR_ = function cljs$spec$alpha$explain_data_STAR_(spec, path, via, in$, x) {
  var temp__5720__auto__ = cljs.spec.alpha.explain_STAR_.call(null, cljs.spec.alpha.specize.call(null, spec), path, via, in$, x);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var probs = temp__5720__auto__;
    if (cljs.core.empty_QMARK_.call(null, probs)) {
      return null;
    } else {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), probs, new cljs.core.Keyword("cljs.spec.alpha", "spec", "cljs.spec.alpha/spec", 1947137578), spec, new cljs.core.Keyword("cljs.spec.alpha", "value", "cljs.spec.alpha/value", 1974786274), x], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.explain_data = function cljs$spec$alpha$explain_data(spec, x) {
  return cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, function() {
    var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, spec);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var name = temp__5718__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }(), cljs.core.PersistentVector.EMPTY, x);
};
cljs.spec.alpha.explain_printer = function cljs$spec$alpha$explain_printer(ed) {
  if (cljs.core.truth_(ed)) {
    var problems = cljs.core.sort_by.call(null, function(p1__5539_SHARP_) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(p1__5539_SHARP_));
    }, cljs.core.sort_by.call(null, function(p1__5538_SHARP_) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "in", "in", -1531184865)).cljs$core$IFn$_invoke$arity$1(p1__5538_SHARP_));
    }, (new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814)).cljs$core$IFn$_invoke$arity$1(ed)));
    return cljs.core.print.call(null, function() {
      var sb__4661__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR__orig_val__5540_5620 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR__orig_val__5541_5621 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_newline_STAR__temp_val__5542_5622 = true;
      var _STAR_print_fn_STAR__temp_val__5543_5623 = function(_STAR_print_newline_STAR__orig_val__5540_5620, _STAR_print_fn_STAR__orig_val__5541_5621, _STAR_print_newline_STAR__temp_val__5542_5622, sb__4661__auto__, problems) {
        return function(x__4662__auto__) {
          return sb__4661__auto__.append(x__4662__auto__);
        };
      }(_STAR_print_newline_STAR__orig_val__5540_5620, _STAR_print_fn_STAR__orig_val__5541_5621, _STAR_print_newline_STAR__temp_val__5542_5622, sb__4661__auto__, problems);
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__5542_5622;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__5543_5623;
      try {
        var seq__5544_5624 = cljs.core.seq.call(null, problems);
        var chunk__5545_5625 = null;
        var count__5546_5626 = 0;
        var i__5547_5627 = 0;
        while (true) {
          if (i__5547_5627 < count__5546_5626) {
            var map__5584_5628 = cljs.core._nth.call(null, chunk__5545_5625, i__5547_5627);
            var map__5584_5629__$1 = (!(map__5584_5628 == null) ? map__5584_5628.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5584_5628.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5584_5628) : map__5584_5628;
            var prob_5630 = map__5584_5629__$1;
            var path_5631 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
            var pred_5632 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
            var val_5633 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
            var reason_5634 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
            var via_5635 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
            var in_5636 = cljs.core.get.call(null, map__5584_5629__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
            cljs.core.pr.call(null, val_5633);
            cljs.core.print.call(null, " - failed: ");
            if (cljs.core.truth_(reason_5634)) {
              cljs.core.print.call(null, reason_5634);
            } else {
              cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_5632));
            }
            if (cljs.core.empty_QMARK_.call(null, in_5636)) {
            } else {
              cljs.core.print.call(null, [" in: ", cljs.core.pr_str.call(null, in_5636)].join(""));
            }
            if (cljs.core.empty_QMARK_.call(null, path_5631)) {
            } else {
              cljs.core.print.call(null, [" at: ", cljs.core.pr_str.call(null, path_5631)].join(""));
            }
            if (cljs.core.empty_QMARK_.call(null, via_5635)) {
            } else {
              cljs.core.print.call(null, [" spec: ", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_5635))].join(""));
            }
            var seq__5586_5637 = cljs.core.seq.call(null, prob_5630);
            var chunk__5587_5638 = null;
            var count__5588_5639 = 0;
            var i__5589_5640 = 0;
            while (true) {
              if (i__5589_5640 < count__5588_5639) {
                var vec__5596_5641 = cljs.core._nth.call(null, chunk__5587_5638, i__5589_5640);
                var k_5642 = cljs.core.nth.call(null, vec__5596_5641, 0, null);
                var v_5643 = cljs.core.nth.call(null, vec__5596_5641, 1, null);
                if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                null)).call(null, k_5642))) {
                } else {
                  cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5642), " ");
                  cljs.core.pr.call(null, v_5643);
                }
                var G__5644 = seq__5586_5637;
                var G__5645 = chunk__5587_5638;
                var G__5646 = count__5588_5639;
                var G__5647 = i__5589_5640 + 1;
                seq__5586_5637 = G__5644;
                chunk__5587_5638 = G__5645;
                count__5588_5639 = G__5646;
                i__5589_5640 = G__5647;
                continue;
              } else {
                var temp__5720__auto___5648 = cljs.core.seq.call(null, seq__5586_5637);
                if (temp__5720__auto___5648) {
                  var seq__5586_5649__$1 = temp__5720__auto___5648;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__5586_5649__$1)) {
                    var c__4550__auto___5650 = cljs.core.chunk_first.call(null, seq__5586_5649__$1);
                    var G__5651 = cljs.core.chunk_rest.call(null, seq__5586_5649__$1);
                    var G__5652 = c__4550__auto___5650;
                    var G__5653 = cljs.core.count.call(null, c__4550__auto___5650);
                    var G__5654 = 0;
                    seq__5586_5637 = G__5651;
                    chunk__5587_5638 = G__5652;
                    count__5588_5639 = G__5653;
                    i__5589_5640 = G__5654;
                    continue;
                  } else {
                    var vec__5599_5655 = cljs.core.first.call(null, seq__5586_5649__$1);
                    var k_5656 = cljs.core.nth.call(null, vec__5599_5655, 0, null);
                    var v_5657 = cljs.core.nth.call(null, vec__5599_5655, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_5656))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5656), " ");
                      cljs.core.pr.call(null, v_5657);
                    }
                    var G__5658 = cljs.core.next.call(null, seq__5586_5649__$1);
                    var G__5659 = null;
                    var G__5660 = 0;
                    var G__5661 = 0;
                    seq__5586_5637 = G__5658;
                    chunk__5587_5638 = G__5659;
                    count__5588_5639 = G__5660;
                    i__5589_5640 = G__5661;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            cljs.core.newline.call(null);
            var G__5662 = seq__5544_5624;
            var G__5663 = chunk__5545_5625;
            var G__5664 = count__5546_5626;
            var G__5665 = i__5547_5627 + 1;
            seq__5544_5624 = G__5662;
            chunk__5545_5625 = G__5663;
            count__5546_5626 = G__5664;
            i__5547_5627 = G__5665;
            continue;
          } else {
            var temp__5720__auto___5666 = cljs.core.seq.call(null, seq__5544_5624);
            if (temp__5720__auto___5666) {
              var seq__5544_5667__$1 = temp__5720__auto___5666;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__5544_5667__$1)) {
                var c__4550__auto___5668 = cljs.core.chunk_first.call(null, seq__5544_5667__$1);
                var G__5669 = cljs.core.chunk_rest.call(null, seq__5544_5667__$1);
                var G__5670 = c__4550__auto___5668;
                var G__5671 = cljs.core.count.call(null, c__4550__auto___5668);
                var G__5672 = 0;
                seq__5544_5624 = G__5669;
                chunk__5545_5625 = G__5670;
                count__5546_5626 = G__5671;
                i__5547_5627 = G__5672;
                continue;
              } else {
                var map__5602_5673 = cljs.core.first.call(null, seq__5544_5667__$1);
                var map__5602_5674__$1 = (!(map__5602_5673 == null) ? map__5602_5673.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5602_5673.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5602_5673) : map__5602_5673;
                var prob_5675 = map__5602_5674__$1;
                var path_5676 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
                var pred_5677 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
                var val_5678 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                var reason_5679 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759));
                var via_5680 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
                var in_5681 = cljs.core.get.call(null, map__5602_5674__$1, new cljs.core.Keyword(null, "in", "in", -1531184865));
                cljs.core.pr.call(null, val_5678);
                cljs.core.print.call(null, " - failed: ");
                if (cljs.core.truth_(reason_5679)) {
                  cljs.core.print.call(null, reason_5679);
                } else {
                  cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, pred_5677));
                }
                if (cljs.core.empty_QMARK_.call(null, in_5681)) {
                } else {
                  cljs.core.print.call(null, [" in: ", cljs.core.pr_str.call(null, in_5681)].join(""));
                }
                if (cljs.core.empty_QMARK_.call(null, path_5676)) {
                } else {
                  cljs.core.print.call(null, [" at: ", cljs.core.pr_str.call(null, path_5676)].join(""));
                }
                if (cljs.core.empty_QMARK_.call(null, via_5680)) {
                } else {
                  cljs.core.print.call(null, [" spec: ", cljs.core.pr_str.call(null, cljs.core.last.call(null, via_5680))].join(""));
                }
                var seq__5604_5682 = cljs.core.seq.call(null, prob_5675);
                var chunk__5605_5683 = null;
                var count__5606_5684 = 0;
                var i__5607_5685 = 0;
                while (true) {
                  if (i__5607_5685 < count__5606_5684) {
                    var vec__5614_5686 = cljs.core._nth.call(null, chunk__5605_5683, i__5607_5685);
                    var k_5687 = cljs.core.nth.call(null, vec__5614_5686, 0, null);
                    var v_5688 = cljs.core.nth.call(null, vec__5614_5686, 1, null);
                    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, k_5687))) {
                    } else {
                      cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5687), " ");
                      cljs.core.pr.call(null, v_5688);
                    }
                    var G__5689 = seq__5604_5682;
                    var G__5690 = chunk__5605_5683;
                    var G__5691 = count__5606_5684;
                    var G__5692 = i__5607_5685 + 1;
                    seq__5604_5682 = G__5689;
                    chunk__5605_5683 = G__5690;
                    count__5606_5684 = G__5691;
                    i__5607_5685 = G__5692;
                    continue;
                  } else {
                    var temp__5720__auto___5693__$1 = cljs.core.seq.call(null, seq__5604_5682);
                    if (temp__5720__auto___5693__$1) {
                      var seq__5604_5694__$1 = temp__5720__auto___5693__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__5604_5694__$1)) {
                        var c__4550__auto___5695 = cljs.core.chunk_first.call(null, seq__5604_5694__$1);
                        var G__5696 = cljs.core.chunk_rest.call(null, seq__5604_5694__$1);
                        var G__5697 = c__4550__auto___5695;
                        var G__5698 = cljs.core.count.call(null, c__4550__auto___5695);
                        var G__5699 = 0;
                        seq__5604_5682 = G__5696;
                        chunk__5605_5683 = G__5697;
                        count__5606_5684 = G__5698;
                        i__5607_5685 = G__5699;
                        continue;
                      } else {
                        var vec__5617_5700 = cljs.core.first.call(null, seq__5604_5694__$1);
                        var k_5701 = cljs.core.nth.call(null, vec__5617_5700, 0, null);
                        var v_5702 = cljs.core.nth.call(null, vec__5617_5700, 1, null);
                        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], 
                        null), null)).call(null, k_5701))) {
                        } else {
                          cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, k_5701), " ");
                          cljs.core.pr.call(null, v_5702);
                        }
                        var G__5703 = cljs.core.next.call(null, seq__5604_5694__$1);
                        var G__5704 = null;
                        var G__5705 = 0;
                        var G__5706 = 0;
                        seq__5604_5682 = G__5703;
                        chunk__5605_5683 = G__5704;
                        count__5606_5684 = G__5705;
                        i__5607_5685 = G__5706;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                cljs.core.newline.call(null);
                var G__5707 = cljs.core.next.call(null, seq__5544_5667__$1);
                var G__5708 = null;
                var G__5709 = 0;
                var G__5710 = 0;
                seq__5544_5624 = G__5707;
                chunk__5545_5625 = G__5708;
                count__5546_5626 = G__5709;
                i__5547_5627 = G__5710;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__5541_5621;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__5540_5620;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
    }());
  } else {
    return cljs.core.println.call(null, "Success!");
  }
};
cljs.spec.alpha._STAR_explain_out_STAR_ = cljs.spec.alpha.explain_printer;
cljs.spec.alpha.explain_out = function cljs$spec$alpha$explain_out(ed) {
  return cljs.spec.alpha._STAR_explain_out_STAR_.call(null, ed);
};
cljs.spec.alpha.explain = function cljs$spec$alpha$explain(spec, x) {
  return cljs.spec.alpha.explain_out.call(null, cljs.spec.alpha.explain_data.call(null, spec, x));
};
cljs.spec.alpha.explain_str = function cljs$spec$alpha$explain_str(spec, x) {
  var sb__4661__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR__orig_val__5711_5715 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR__orig_val__5712_5716 = cljs.core._STAR_print_fn_STAR_;
  var _STAR_print_newline_STAR__temp_val__5713_5717 = true;
  var _STAR_print_fn_STAR__temp_val__5714_5718 = function(_STAR_print_newline_STAR__orig_val__5711_5715, _STAR_print_fn_STAR__orig_val__5712_5716, _STAR_print_newline_STAR__temp_val__5713_5717, sb__4661__auto__) {
    return function(x__4662__auto__) {
      return sb__4661__auto__.append(x__4662__auto__);
    };
  }(_STAR_print_newline_STAR__orig_val__5711_5715, _STAR_print_fn_STAR__orig_val__5712_5716, _STAR_print_newline_STAR__temp_val__5713_5717, sb__4661__auto__);
  cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__5713_5717;
  cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__5714_5718;
  try {
    cljs.spec.alpha.explain.call(null, spec, x);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__5712_5716;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__5711_5715;
  }
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
};
cljs.spec.alpha.gensub = function cljs$spec$alpha$gensub(spec, overrides, path, rmap, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  var temp__5718__auto__ = function() {
    var or__4131__auto__ = function() {
      var temp__5720__auto__ = function() {
        var or__4131__auto__ = cljs.core.get.call(null, overrides, function() {
          var or__4131__auto__ = cljs.spec.alpha.spec_name.call(null, spec__$1);
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return spec__$1;
          }
        }());
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.get.call(null, overrides, path);
        }
      }();
      if (cljs.core.truth_(temp__5720__auto__)) {
        var gfn = temp__5720__auto__;
        return gfn.call(null);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.spec.alpha.gen_STAR_.call(null, spec__$1, overrides, path, rmap);
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var g = temp__5718__auto__;
    return cljs.spec.gen.alpha.such_that.call(null, function(g, temp__5718__auto__, spec__$1) {
      return function(p1__5719_SHARP_) {
        return cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, p1__5719_SHARP_);
      };
    }(g, temp__5718__auto__, spec__$1), g, 100);
  } else {
    throw new Error(["Unable to construct gen at: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), " for: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.abbrev.call(null, form))].join(""));
  }
};
cljs.spec.alpha.gen = function cljs$spec$alpha$gen(var_args) {
  var G__5721 = arguments.length;
  switch(G__5721) {
    case 1:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.gen.call(null, spec, null);
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2 = function(spec, overrides) {
  return cljs.spec.alpha.gensub.call(null, spec, overrides, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994), cljs.spec.alpha._STAR_recursion_limit_STAR_], null), spec);
};
cljs.spec.alpha.gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.def_impl = function cljs$spec$alpha$def_impl(k, form, spec) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.ident_QMARK_.call(null, k);
    if (and__4120__auto__) {
      return cljs.core.namespace.call(null, k);
    } else {
      return and__4120__auto__;
    }
  }())) {
  } else {
    throw new Error(["Assert failed: ", "k must be namespaced keyword or resolveable symbol", "\n", "(c/and (ident? k) (namespace k))"].join(""));
  }
  if (spec == null) {
    cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.dissoc, k);
  } else {
    var spec_5723__$1 = cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.spec.alpha.spec_QMARK_.call(null, spec);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = cljs.spec.alpha.regex_QMARK_.call(null, spec);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.alpha.registry_ref), spec);
        }
      }
    }()) ? spec : cljs.spec.alpha.spec_impl.call(null, form, spec, null, null);
    cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.assoc, k, cljs.spec.alpha.with_name.call(null, spec_5723__$1, k));
  }
  return k;
};
cljs.spec.alpha.registry = function cljs$spec$alpha$registry() {
  return cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
};
cljs.spec.alpha.__GT_sym = function cljs$spec$alpha$__GT_sym(x) {
  if (cljs.core.var_QMARK_.call(null, x)) {
    return x.sym;
  } else {
    return x;
  }
};
cljs.spec.alpha.get_spec = function cljs$spec$alpha$get_spec(k) {
  return cljs.core.get.call(null, cljs.spec.alpha.registry.call(null), k instanceof cljs.core.Keyword ? k : cljs.spec.alpha.__GT_sym.call(null, k));
};
cljs.spec.alpha.macroexpand_check = function cljs$spec$alpha$macroexpand_check(v, args) {
  var specs = cljs.spec.alpha.get_spec.call(null, v);
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var arg_spec = temp__5720__auto__;
    if (cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform.call(null, arg_spec, args))) {
      var ed = cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, arg_spec, cljs.core.PersistentVector.EMPTY, function() {
        var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, arg_spec);
        if (cljs.core.truth_(temp__5718__auto__)) {
          var name = temp__5718__auto__;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null);
        } else {
          return cljs.core.PersistentVector.EMPTY;
        }
      }(), cljs.core.PersistentVector.EMPTY, args), new cljs.core.Keyword("cljs.spec.alpha", "args", "cljs.spec.alpha/args", 1870769783), args);
      throw cljs.core.ex_info.call(null, ["Call to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.__GT_sym.call(null, v)), " did not conform to spec."].join(""), ed);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.recur_limit_QMARK_ = function cljs$spec$alpha$recur_limit_QMARK_(rmap, id, path, k) {
  return cljs.core.get.call(null, rmap, id) > (new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994)).cljs$core$IFn$_invoke$arity$1(rmap) && cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, path), k);
};
cljs.spec.alpha.inck = function cljs$spec$alpha$inck(m, k) {
  return cljs.core.assoc.call(null, m, k, function() {
    var or__4131__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return 0;
    }
  }() + 1);
};
cljs.spec.alpha.dt = function cljs$spec$alpha$dt(var_args) {
  var G__5725 = arguments.length;
  switch(G__5725) {
    case 3:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return cljs.spec.alpha.dt.call(null, pred, x, form, null);
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4 = function(pred, x, form, cpred_QMARK_) {
  if (cljs.core.truth_(pred)) {
    var temp__5718__auto__ = cljs.spec.alpha.the_spec.call(null, pred);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var spec = temp__5718__auto__;
      return cljs.spec.alpha.conform.call(null, spec, x);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, pred)) {
        if (cljs.core.truth_(cpred_QMARK_)) {
          return pred.call(null, x);
        } else {
          if (cljs.core.truth_(pred.call(null, x))) {
            return x;
          } else {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
        }
      } else {
        throw new Error([cljs.core.pr_str.call(null, form), " is not a fn, expected predicate fn"].join(""));
      }
    }
  } else {
    return x;
  }
};
cljs.spec.alpha.dt.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.valid_QMARK_ = function cljs$spec$alpha$valid_QMARK_(var_args) {
  var G__5728 = arguments.length;
  switch(G__5728) {
    case 2:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(spec, x) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec);
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x));
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(spec, x, form) {
  var spec__$1 = cljs.spec.alpha.specize.call(null, spec, form);
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, spec__$1, x));
};
cljs.spec.alpha.valid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.pvalid_QMARK_ = function cljs$spec$alpha$pvalid_QMARK_(var_args) {
  var G__5731 = arguments.length;
  switch(G__5731) {
    case 2:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(pred, x) {
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818)));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(pred, x, form) {
  return !cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, pred, x, form));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.explain_1 = function cljs$spec$alpha$explain_1(form, pred, path, via, in$, v) {
  var pred__$1 = cljs.spec.alpha.maybe_spec.call(null, pred);
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred__$1))) {
    return cljs.spec.alpha.explain_STAR_.call(null, pred__$1, path, function() {
      var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, pred__$1);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var name = temp__5718__auto__;
        return cljs.core.conj.call(null, via, name);
      } else {
        return via;
      }
    }(), in$, v);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), form, new cljs.core.Keyword(null, "val", "val", 128701612), v, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
  }
};
cljs.spec.alpha.k_gen = function cljs$spec$alpha$k_gen(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.spec.gen.alpha.return$.call(null, f);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.first.call(null, f))) {
      return cljs.spec.alpha.or_k_gen.call(null, 1, cljs.core.rest.call(null, f));
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.first.call(null, f))) {
        return cljs.spec.alpha.and_k_gen.call(null, cljs.core.rest.call(null, f));
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.or_k_gen = function cljs$spec$alpha$or_k_gen(var_args) {
  var G__5734 = arguments.length;
  switch(G__5734) {
    case 1:
      return cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.spec.alpha.or_k_gen.call(null, 0, s);
};
cljs.spec.alpha.or_k_gen.cljs$core$IFn$_invoke$arity$2 = function(min_count, s) {
  return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.tuple.call(null, cljs.spec.gen.alpha.choose.call(null, min_count, cljs.core.count.call(null, s)), cljs.spec.gen.alpha.shuffle.call(null, cljs.core.map.call(null, cljs.spec.alpha.k_gen, s))), function(p__5735) {
    var vec__5736 = p__5735;
    var n = cljs.core.nth.call(null, vec__5736, 0, null);
    var gens = cljs.core.nth.call(null, vec__5736, 1, null);
    return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.take.call(null, n, gens));
  });
};
cljs.spec.alpha.or_k_gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.and_k_gen = function cljs$spec$alpha$and_k_gen(s) {
  return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, cljs.spec.alpha.k_gen, s));
};
cljs.spec.alpha.map_spec_impl = function cljs$spec$alpha$map_spec_impl(p__5743) {
  var map__5744 = p__5743;
  var map__5744__$1 = (!(map__5744 == null) ? map__5744.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5744.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5744) : map__5744;
  var argm = map__5744__$1;
  var opt = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369));
  var req_un = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008));
  var opt_un = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496));
  var gfn = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "gfn", "gfn", 791517474));
  var pred_exprs = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "pred-exprs", "pred-exprs", 1792271395));
  var keys_pred = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "keys-pred", "keys-pred", 858984739));
  var opt_keys = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "opt-keys", "opt-keys", 1262688261));
  var req_specs = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "req-specs", "req-specs", 553962313));
  var req = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "req", "req", -326448303));
  var req_keys = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "req-keys", "req-keys", 514319221));
  var opt_specs = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "opt-specs", "opt-specs", -384905450));
  var pred_forms = cljs.core.get.call(null, map__5744__$1, new cljs.core.Keyword(null, "pred-forms", "pred-forms", 172611832));
  var k__GT_s = cljs.core.zipmap.call(null, cljs.core.concat.call(null, req_keys, opt_keys), cljs.core.concat.call(null, req_specs, opt_specs));
  var keys__GT_specnames = function(k__GT_s, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
    return function(p1__5740_SHARP_) {
      var or__4131__auto__ = k__GT_s.call(null, p1__5740_SHARP_);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p1__5740_SHARP_;
      }
    };
  }(k__GT_s, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
  var id = cljs.core.random_uuid.call(null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5746 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5746 = function(keys__GT_specnames, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, map__5744, req, id, req_keys, opt_specs, k__GT_s, p__5743, pred_forms, meta5747) {
      this.keys__GT_specnames = keys__GT_specnames;
      this.opt = opt;
      this.req_un = req_un;
      this.opt_un = opt_un;
      this.gfn = gfn;
      this.pred_exprs = pred_exprs;
      this.keys_pred = keys_pred;
      this.argm = argm;
      this.opt_keys = opt_keys;
      this.req_specs = req_specs;
      this.map__5744 = map__5744;
      this.req = req;
      this.id = id;
      this.req_keys = req_keys;
      this.opt_specs = opt_specs;
      this.k__GT_s = k__GT_s;
      this.p__5743 = p__5743;
      this.pred_forms = pred_forms;
      this.meta5747 = meta5747;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_5748, meta5747__$1) {
        var self__ = this;
        var _5748__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5746(self__.keys__GT_specnames, self__.opt, self__.req_un, self__.opt_un, self__.gfn, self__.pred_exprs, self__.keys_pred, self__.argm, self__.opt_keys, self__.req_specs, self__.map__5744, self__.req, self__.id, self__.req_keys, self__.opt_specs, self__.k__GT_s, self__.p__5743, self__.pred_forms, meta5747__$1);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$core$IMeta$_meta$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_5748) {
        var self__ = this;
        var _5748__$1 = this;
        return self__.meta5747;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, m) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.keys_pred.call(null, m))) {
          var reg = cljs.spec.alpha.registry.call(null);
          var ret = m;
          var G__5755 = m;
          var vec__5756 = G__5755;
          var seq__5757 = cljs.core.seq.call(null, vec__5756);
          var first__5758 = cljs.core.first.call(null, seq__5757);
          var seq__5757__$1 = cljs.core.next.call(null, seq__5757);
          var vec__5759 = first__5758;
          var k = cljs.core.nth.call(null, vec__5759, 0, null);
          var v = cljs.core.nth.call(null, vec__5759, 1, null);
          var ks = seq__5757__$1;
          var keys = vec__5756;
          var ret__$1 = ret;
          var G__5755__$1 = G__5755;
          while (true) {
            var ret__$2 = ret__$1;
            var vec__5762 = G__5755__$1;
            var seq__5763 = cljs.core.seq.call(null, vec__5762);
            var first__5764 = cljs.core.first.call(null, seq__5763);
            var seq__5763__$1 = cljs.core.next.call(null, seq__5763);
            var vec__5765 = first__5764;
            var k__$1 = cljs.core.nth.call(null, vec__5765, 0, null);
            var v__$1 = cljs.core.nth.call(null, vec__5765, 1, null);
            var ks__$1 = seq__5763__$1;
            var keys__$1 = vec__5762;
            if (cljs.core.truth_(keys__$1)) {
              var sname = self__.keys__GT_specnames.call(null, k__$1);
              var temp__5718__auto__ = cljs.core.get.call(null, reg, sname);
              if (cljs.core.truth_(temp__5718__auto__)) {
                var s = temp__5718__auto__;
                var cv = cljs.spec.alpha.conform.call(null, s, v__$1);
                if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5790 = cv === v__$1 ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, cv);
                  var G__5791 = ks__$1;
                  ret__$1 = G__5790;
                  G__5755__$1 = G__5791;
                  continue;
                }
              } else {
                var G__5792 = ret__$2;
                var G__5793 = ks__$1;
                ret__$1 = G__5792;
                G__5755__$1 = G__5793;
                continue;
              }
            } else {
              return ret__$2;
            }
            break;
          }
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, m) {
        var self__ = this;
        var ___$1 = this;
        var reg = cljs.spec.alpha.registry.call(null);
        var ret = m;
        var G__5771 = cljs.core.keys.call(null, m);
        var vec__5772 = G__5771;
        var seq__5773 = cljs.core.seq.call(null, vec__5772);
        var first__5774 = cljs.core.first.call(null, seq__5773);
        var seq__5773__$1 = cljs.core.next.call(null, seq__5773);
        var k = first__5774;
        var ks = seq__5773__$1;
        var keys = vec__5772;
        var ret__$1 = ret;
        var G__5771__$1 = G__5771;
        while (true) {
          var ret__$2 = ret__$1;
          var vec__5778 = G__5771__$1;
          var seq__5779 = cljs.core.seq.call(null, vec__5778);
          var first__5780 = cljs.core.first.call(null, seq__5779);
          var seq__5779__$1 = cljs.core.next.call(null, seq__5779);
          var k__$1 = first__5780;
          var ks__$1 = seq__5779__$1;
          var keys__$1 = vec__5778;
          if (cljs.core.truth_(keys__$1)) {
            if (cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k__$1))) {
              var cv = cljs.core.get.call(null, m, k__$1);
              var v = cljs.spec.alpha.unform.call(null, self__.keys__GT_specnames.call(null, k__$1), cv);
              var G__5794 = cv === v ? ret__$2 : cljs.core.assoc.call(null, ret__$2, k__$1, v);
              var G__5795 = ks__$1;
              ret__$1 = G__5794;
              G__5771__$1 = G__5795;
              continue;
            } else {
              var G__5796 = ret__$2;
              var G__5797 = ks__$1;
              ret__$1 = G__5796;
              G__5771__$1 = G__5797;
              continue;
            }
          } else {
            return ret__$2;
          }
          break;
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (!cljs.core.map_QMARK_.call(null, x)) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", 
          -1531184865), in$], null)], null);
        } else {
          var reg = cljs.spec.alpha.registry.call(null);
          return cljs.core.apply.call(null, cljs.core.concat, function() {
            var temp__5720__auto__ = cljs.core.seq.call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
              return function(pred, form) {
                if (cljs.core.truth_(pred.call(null, x))) {
                  return null;
                } else {
                  return form;
                }
              };
            }(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), self__.pred_exprs, self__.pred_forms)));
            if (temp__5720__auto__) {
              var probs = temp__5720__auto__;
              return cljs.core.map.call(null, function(probs, temp__5720__auto__, reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
                return function(p1__5741_SHARP_) {
                  return cljs.core.identity.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), p1__5741_SHARP_, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
                };
              }(probs, temp__5720__auto__, reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), probs);
            } else {
              return null;
            }
          }(), cljs.core.map.call(null, function(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(p__5781) {
              var vec__5782 = p__5781;
              var k = cljs.core.nth.call(null, vec__5782, 0, null);
              var v = cljs.core.nth.call(null, vec__5782, 1, null);
              if (!cljs.core.contains_QMARK_.call(null, reg, self__.keys__GT_specnames.call(null, k)) || cljs.spec.alpha.pvalid_QMARK_.call(null, self__.keys__GT_specnames.call(null, k), v, k)) {
                return null;
              } else {
                return cljs.spec.alpha.explain_1.call(null, self__.keys__GT_specnames.call(null, k), self__.keys__GT_specnames.call(null, k), cljs.core.conj.call(null, path, k), via, cljs.core.conj.call(null, in$, k), v);
              }
            };
          }(reg, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), cljs.core.seq.call(null, x)));
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
          var rgen = function(rmap__$1, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(k, s) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k)], null);
            };
          }(rmap__$1, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
          var ogen = function(rmap__$1, rgen, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
            return function(k, s) {
              if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
                return null;
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, rgen, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
                  return function() {
                    return cljs.spec.alpha.gensub.call(null, s, overrides, cljs.core.conj.call(null, path, k), rmap__$1, k);
                  };
                }(rmap__$1, rgen, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), null))], null);
              }
            };
          }(rmap__$1, rgen, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
          var reqs = cljs.core.map.call(null, rgen, self__.req_keys, self__.req_specs);
          var opts = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, ogen, self__.opt_keys, self__.opt_specs));
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.second, reqs), cljs.core.map.call(null, cljs.core.second, opts)))) {
            return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.tuple.call(null, cljs.spec.alpha.and_k_gen.call(null, self__.req), cljs.spec.alpha.or_k_gen.call(null, self__.opt), cljs.spec.alpha.and_k_gen.call(null, self__.req_un), cljs.spec.alpha.or_k_gen.call(null, self__.opt_un)), function(rmap__$1, rgen, ogen, reqs, opts, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, 
            pred_forms) {
              return function(p__5785) {
                var vec__5786 = p__5785;
                var req_ks = cljs.core.nth.call(null, vec__5786, 0, null);
                var opt_ks = cljs.core.nth.call(null, vec__5786, 1, null);
                var req_un_ks = cljs.core.nth.call(null, vec__5786, 2, null);
                var opt_un_ks = cljs.core.nth.call(null, vec__5786, 3, null);
                var qks = cljs.core.flatten.call(null, cljs.core.concat.call(null, req_ks, opt_ks));
                var unqks = cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.keyword, cljs.core.name), cljs.core.flatten.call(null, cljs.core.concat.call(null, req_un_ks, opt_un_ks)));
                return cljs.core.apply.call(null, cljs.spec.gen.alpha.hash_map, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(qks, unqks, vec__5786, req_ks, opt_ks, req_un_ks, opt_un_ks, rmap__$1, rgen, ogen, reqs, opts, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
                  return function(p1__5742_SHARP_) {
                    return cljs.core.set.call(null, cljs.core.concat.call(null, qks, unqks)).call(null, cljs.core.first.call(null, p1__5742_SHARP_));
                  };
                }(qks, unqks, vec__5786, req_ks, opt_ks, req_un_ks, opt_un_ks, rmap__$1, rgen, ogen, reqs, opts, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms), cljs.core.into.call(null, reqs, opts))));
              };
            }(rmap__$1, rgen, ogen, reqs, opts, ___$1, k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms));
          } else {
            return null;
          }
        }
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.map_spec_impl.call(null, cljs.core.assoc.call(null, self__.argm, new cljs.core.Keyword(null, "gfn", "gfn", 791517474), gfn__$1));
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "keys", "cljs.spec.alpha/keys", 1109346032, null), function() {
          var G__5789 = cljs.core.PersistentVector.EMPTY;
          var G__5789__$1 = cljs.core.truth_(self__.req) ? cljs.core.conj.call(null, G__5789, new cljs.core.Keyword(null, "req", "req", -326448303), self__.req) : G__5789;
          var G__5789__$2 = cljs.core.truth_(self__.opt) ? cljs.core.conj.call(null, G__5789__$1, new cljs.core.Keyword(null, "opt", "opt", -794706369), self__.opt) : G__5789__$1;
          var G__5789__$3 = cljs.core.truth_(self__.req_un) ? cljs.core.conj.call(null, G__5789__$2, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008), self__.req_un) : G__5789__$2;
          if (cljs.core.truth_(self__.opt_un)) {
            return cljs.core.conj.call(null, G__5789__$3, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496), self__.opt_un);
          } else {
            return G__5789__$3;
          }
        }());
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.getBasis = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function() {
        return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys-\x3especnames", "keys-\x3especnames", 1791294693, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null), new cljs.core.Symbol(null, "req-un", "req-un", -1579864761, null), new cljs.core.Symbol(null, "opt-un", "opt-un", -1770993273, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "pred-exprs", "pred-exprs", -862164374, 
        null), new cljs.core.Symbol(null, "keys-pred", "keys-pred", -1795451030, null), new cljs.core.Symbol(null, "argm", "argm", -181546357, null), new cljs.core.Symbol(null, "opt-keys", "opt-keys", -1391747508, null), new cljs.core.Symbol(null, "req-specs", "req-specs", -2100473456, null), new cljs.core.Symbol(null, "map__5744", "map__5744", -599558093, null), new cljs.core.Symbol(null, "req", "req", 1314083224, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, 
        "req-keys", "req-keys", -2140116548, null), new cljs.core.Symbol(null, "opt-specs", "opt-specs", 1255626077, null), new cljs.core.Symbol(null, "k-\x3es", "k-\x3es", -1685112801, null), new cljs.core.Symbol(null, "p__5743", "p__5743", 1931122399, null), new cljs.core.Symbol(null, "pred-forms", "pred-forms", 1813143359, null), new cljs.core.Symbol(null, "meta5747", "meta5747", 1789454896, null)], null);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.t_cljs$spec$alpha5746.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5746.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5746";
    cljs.spec.alpha.t_cljs$spec$alpha5746.cljs$lang$ctorPrWriter = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5746");
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5746 = function(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms) {
      return function cljs$spec$alpha$map_spec_impl_$___GT_t_cljs$spec$alpha5746(keys__GT_specnames__$1, opt__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, map__5744__$2, req__$1, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, p__5743__$1, pred_forms__$1, meta5747) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5746(keys__GT_specnames__$1, opt__$1, req_un__$1, opt_un__$1, gfn__$1, pred_exprs__$1, keys_pred__$1, argm__$1, opt_keys__$1, req_specs__$1, map__5744__$2, req__$1, id__$1, req_keys__$1, opt_specs__$1, k__GT_s__$1, p__5743__$1, pred_forms__$1, meta5747);
      };
    }(k__GT_s, keys__GT_specnames, id, map__5744, map__5744__$1, argm, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, opt_keys, req_specs, req, req_keys, opt_specs, pred_forms);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5746(keys__GT_specnames, opt, req_un, opt_un, gfn, pred_exprs, keys_pred, argm, opt_keys, req_specs, map__5744__$1, req, id, req_keys, opt_specs, k__GT_s, p__5743, pred_forms, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.spec_impl = function cljs$spec$alpha$spec_impl(var_args) {
  var G__5799 = arguments.length;
  switch(G__5799) {
    case 4:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, gfn, cpred_QMARK_) {
  return cljs.spec.alpha.spec_impl.call(null, form, pred, gfn, cpred_QMARK_, null);
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5 = function(form, pred, gfn, cpred_QMARK_, unc) {
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, pred))) {
    var G__5800 = pred;
    if (cljs.core.truth_(gfn)) {
      return cljs.spec.alpha.with_gen.call(null, G__5800, gfn);
    } else {
      return G__5800;
    }
  } else {
    if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, pred))) {
      return cljs.spec.alpha.regex_spec_impl.call(null, pred, gfn);
    } else {
      if (cljs.core.ident_QMARK_.call(null, pred)) {
        var G__5801 = cljs.spec.alpha.the_spec.call(null, pred);
        if (cljs.core.truth_(gfn)) {
          return cljs.spec.alpha.with_gen.call(null, G__5801, gfn);
        } else {
          return G__5801;
        }
      } else {
        if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5802 !== "undefined") {
        } else {
          cljs.spec.alpha.t_cljs$spec$alpha5802 = function(form, pred, gfn, cpred_QMARK_, unc, meta5803) {
            this.form = form;
            this.pred = pred;
            this.gfn = gfn;
            this.cpred_QMARK_ = cpred_QMARK_;
            this.unc = unc;
            this.meta5803 = meta5803;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5804, meta5803__$1) {
            var self__ = this;
            var _5804__$1 = this;
            return new cljs.spec.alpha.t_cljs$spec$alpha5802(self__.form, self__.pred, self__.gfn, self__.cpred_QMARK_, self__.unc, meta5803__$1);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5804) {
            var self__ = this;
            var _5804__$1 = this;
            return self__.meta5803;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
            var self__ = this;
            var s__$1 = this;
            return s__$1;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            var ret = self__.pred.call(null, x);
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              return ret;
            } else {
              if (cljs.core.truth_(ret)) {
                return x;
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.core.truth_(self__.cpred_QMARK_)) {
              if (cljs.core.truth_(self__.unc)) {
                return self__.unc.call(null, x);
              } else {
                throw new Error("no unform fn for conformer");
              }
            } else {
              return x;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
            var self__ = this;
            var ___$1 = this;
            if (cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, self__.pred, x, self__.form, self__.cpred_QMARK_))) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
            } else {
              return null;
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, ___$1, ___$2, ___$3) {
            var self__ = this;
            var ___$4 = this;
            if (cljs.core.truth_(self__.gfn)) {
              return self__.gfn.call(null);
            } else {
              return cljs.spec.gen.alpha.gen_for_pred.call(null, self__.pred);
            }
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
            var self__ = this;
            var ___$1 = this;
            return cljs.spec.alpha.spec_impl.call(null, self__.form, self__.pred, gfn__$1, self__.cpred_QMARK_, self__.unc);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.form;
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.getBasis = function() {
            return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "cpred?", "cpred?", 35589515, null), new cljs.core.Symbol(null, "unc", "unc", -465250751, null), new cljs.core.Symbol(null, "meta5803", "meta5803", -1826081156, null)], null);
          };
          cljs.spec.alpha.t_cljs$spec$alpha5802.cljs$lang$type = true;
          cljs.spec.alpha.t_cljs$spec$alpha5802.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5802";
          cljs.spec.alpha.t_cljs$spec$alpha5802.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
            return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5802");
          };
          cljs.spec.alpha.__GT_t_cljs$spec$alpha5802 = function cljs$spec$alpha$__GT_t_cljs$spec$alpha5802(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta5803) {
            return new cljs.spec.alpha.t_cljs$spec$alpha5802(form__$1, pred__$1, gfn__$1, cpred_QMARK___$1, unc__$1, meta5803);
          };
        }
        return new cljs.spec.alpha.t_cljs$spec$alpha5802(form, pred, gfn, cpred_QMARK_, unc, cljs.core.PersistentArrayMap.EMPTY);
      }
    }
  }
};
cljs.spec.alpha.spec_impl.cljs$lang$maxFixedArity = 5;
cljs.spec.alpha.multi_spec_impl = function cljs$spec$alpha$multi_spec_impl(var_args) {
  var G__5812 = arguments.length;
  switch(G__5812) {
    case 3:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3 = function(form, mmvar, retag) {
  return cljs.spec.alpha.multi_spec_impl.call(null, form, mmvar, retag, null);
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4 = function(form, mmvar, retag, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var predx = function(id) {
    return function(p1__5806_SHARP_) {
      var mm = cljs.core.deref.call(null, mmvar);
      var and__4120__auto__ = cljs.core._get_method.call(null, mm, cljs.core._dispatch_fn.call(null, mm).call(null, p1__5806_SHARP_));
      if (cljs.core.truth_(and__4120__auto__)) {
        return mm.call(null, p1__5806_SHARP_);
      } else {
        return and__4120__auto__;
      }
    };
  }(id);
  var dval = function(id, predx) {
    return function(p1__5807_SHARP_) {
      return cljs.core._dispatch_fn.call(null, cljs.core.deref.call(null, mmvar)).call(null, p1__5807_SHARP_);
    };
  }(id, predx);
  var tag = retag instanceof cljs.core.Keyword ? function(id, predx, dval) {
    return function(p1__5808_SHARP_, p2__5809_SHARP_) {
      return cljs.core.assoc.call(null, p1__5808_SHARP_, retag, p2__5809_SHARP_);
    };
  }(id, predx, dval) : retag;
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5813 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5813 = function(form, mmvar, retag, gfn, id, predx, dval, tag, meta5814) {
      this.form = form;
      this.mmvar = mmvar;
      this.retag = retag;
      this.gfn = gfn;
      this.id = id;
      this.predx = predx;
      this.dval = dval;
      this.tag = tag;
      this.meta5814 = meta5814;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(id, predx, dval, tag) {
      return function(_5815, meta5814__$1) {
        var self__ = this;
        var _5815__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5813(self__.form, self__.mmvar, self__.retag, self__.gfn, self__.id, self__.predx, self__.dval, self__.tag, meta5814__$1);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$core$IMeta$_meta$arity$1 = function(id, predx, dval, tag) {
      return function(_5815) {
        var self__ = this;
        var _5815__$1 = this;
        return self__.meta5814;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(id, predx, dval, tag) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var temp__5718__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__5718__auto__)) {
          var pred = temp__5718__auto__;
          return cljs.spec.alpha.dt.call(null, pred, x, self__.form);
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var temp__5718__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__5718__auto__)) {
          var pred = temp__5718__auto__;
          return cljs.spec.alpha.unform.call(null, pred, x);
        } else {
          throw new Error(["No method of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.form), " for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.dval.call(null, x))].join(""));
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(id, predx, dval, tag) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        var dv = self__.dval.call(null, x);
        var path__$1 = cljs.core.conj.call(null, path, dv);
        var temp__5718__auto__ = self__.predx.call(null, x);
        if (cljs.core.truth_(temp__5718__auto__)) {
          var pred = temp__5718__auto__;
          return cljs.spec.alpha.explain_1.call(null, self__.form, pred, path__$1, via, in$, x);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.form, new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "no method", new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, 
          "in", "in", -1531184865), in$], null)], null);
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(id, predx, dval, tag) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, id, predx, dval, tag) {
            return function(p__5816) {
              var vec__5817 = p__5816;
              var k = cljs.core.nth.call(null, vec__5817, 0, null);
              var f = cljs.core.nth.call(null, vec__5817, 1, null);
              var p = f.call(null, null);
              var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
              if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
                return null;
              } else {
                return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, p, vec__5817, k, f, ___$1, id, predx, dval, tag) {
                  return function() {
                    return cljs.spec.gen.alpha.fmap.call(null, function(rmap__$1, p, vec__5817, k, f, ___$1, id, predx, dval, tag) {
                      return function(p1__5810_SHARP_) {
                        return self__.tag.call(null, p1__5810_SHARP_, k);
                      };
                    }(rmap__$1, p, vec__5817, k, f, ___$1, id, predx, dval, tag), cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, new cljs.core.List(null, new cljs.core.Symbol(null, "method", "method", 1696235119, null), new cljs.core.List(null, self__.form, new cljs.core.List(null, k, null, 1, null), 2, null), 3, null)));
                  };
                }(rmap__$1, p, vec__5817, k, f, ___$1, id, predx, dval, tag), null));
              }
            };
          }(___$1, id, predx, dval, tag);
          var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, cljs.core.remove.call(null, function(gen, ___$1, id, predx, dval, tag) {
            return function(p__5820) {
              var vec__5821 = p__5820;
              var k = cljs.core.nth.call(null, vec__5821, 0, null);
              return cljs.spec.alpha.invalid_QMARK_.call(null, k);
            };
          }(gen, ___$1, id, predx, dval, tag), cljs.core.methods$.call(null, cljs.core.deref.call(null, self__.mmvar)))));
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
            return cljs.spec.gen.alpha.one_of.call(null, gs);
          } else {
            return null;
          }
        }
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(id, predx, dval, tag) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.multi_spec_impl.call(null, self__.form, self__.mmvar, self__.retag, gfn__$1);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(id, predx, dval, tag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "multi-spec", "cljs.spec.alpha/multi-spec", 175821274, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), new cljs.core.List(null, self__.retag, null, 1, null))));
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.getBasis = function(id, predx, dval, tag) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "mmvar", "mmvar", -1714325675, null), new cljs.core.Symbol(null, "retag", "retag", 528972725, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "predx", "predx", 2063470948, null), new cljs.core.Symbol(null, "dval", 
        "dval", 835211877, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "meta5814", "meta5814", -599234628, null)], null);
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.t_cljs$spec$alpha5813.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5813.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5813";
    cljs.spec.alpha.t_cljs$spec$alpha5813.cljs$lang$ctorPrWriter = function(id, predx, dval, tag) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5813");
      };
    }(id, predx, dval, tag);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5813 = function(id, predx, dval, tag) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5813(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta5814) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5813(form__$1, mmvar__$1, retag__$1, gfn__$1, id__$1, predx__$1, dval__$1, tag__$1, meta5814);
      };
    }(id, predx, dval, tag);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5813(form, mmvar, retag, gfn, id, predx, dval, tag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.multi_spec_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.tuple_impl = function cljs$spec$alpha$tuple_impl(var_args) {
  var G__5826 = arguments.length;
  switch(G__5826) {
    case 2:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2 = function(forms, preds) {
  return cljs.spec.alpha.tuple_impl.call(null, forms, preds, null);
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3 = function(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cnt = cljs.core.count.call(null, preds);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5827 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5827 = function(forms, preds, gfn, specs, cnt, meta5828) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cnt = cnt;
      this.meta5828 = meta5828;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs, cnt) {
      return function(_5829, meta5828__$1) {
        var self__ = this;
        var _5829__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5827(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cnt, meta5828__$1);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs, cnt) {
      return function(_5829) {
        var self__ = this;
        var _5829__$1 = this;
        return self__.meta5828;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs, cnt) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs, cnt) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs, cnt) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var specs__$1 = cljs.core.deref.call(null, self__.specs);
        if (!(cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), self__.cnt))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          var ret = x;
          var i = 0;
          while (true) {
            if (cljs.core._EQ_.call(null, i, self__.cnt)) {
              return ret;
            } else {
              var v = x.call(null, i);
              var cv = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), v);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                var G__5831 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, cv);
                var G__5832 = i + 1;
                ret = G__5831;
                i = G__5832;
                continue;
              }
            }
            break;
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs, cnt) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
        } else {
          throw new Error("Assert failed: (c/and (vector? x) (\x3d (count x) (count preds)))");
        }
        var ret = x;
        var i = 0;
        while (true) {
          if (cljs.core._EQ_.call(null, i, cljs.core.count.call(null, x))) {
            return ret;
          } else {
            var cv = x.call(null, i);
            var v = cljs.spec.alpha.unform.call(null, self__.preds.call(null, i), cv);
            var G__5833 = cv === v ? ret : cljs.core.assoc.call(null, ret, i, v);
            var G__5834 = i + 1;
            ret = G__5833;
            i = G__5834;
            continue;
          }
          break;
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs, cnt) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (!cljs.core.vector_QMARK_.call(null, x)) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", 
          "in", -1531184865), in$], null)], null);
        } else {
          if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, self__.preds))) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
            cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.count.call(null, self__.preds), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
          } else {
            return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(___$1, specs, cnt) {
              return function(i, form, pred) {
                var v = x.call(null, i);
                if (cljs.spec.alpha.pvalid_QMARK_.call(null, pred, v)) {
                  return null;
                } else {
                  return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, i), via, cljs.core.conj.call(null, in$, i), v);
                }
              };
            }(___$1, specs, cnt), cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.forms, self__.preds));
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs, cnt) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, specs, cnt) {
            return function(i, p, f) {
              return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, i), rmap, f);
            };
          }(___$1, specs, cnt);
          var gs = cljs.core.map.call(null, gen, cljs.core.range.call(null, cljs.core.count.call(null, self__.preds)), self__.preds, self__.forms);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gs)) {
            return cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, gs);
          } else {
            return null;
          }
        }
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs, cnt) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.tuple_impl.call(null, self__.forms, self__.preds, gfn__$1);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs, cnt) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "tuple", "cljs.spec.alpha/tuple", -415901908, null), null, 1, null), self__.forms)));
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.getBasis = function(specs, cnt) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta5828", "meta5828", -1976127676, null)], null);
      };
    }(specs, cnt);
    cljs.spec.alpha.t_cljs$spec$alpha5827.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5827.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5827";
    cljs.spec.alpha.t_cljs$spec$alpha5827.cljs$lang$ctorPrWriter = function(specs, cnt) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5827");
      };
    }(specs, cnt);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5827 = function(specs, cnt) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5827(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta5828) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5827(forms__$1, preds__$1, gfn__$1, specs__$1, cnt__$1, meta5828);
      };
    }(specs, cnt);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5827(forms, preds, gfn, specs, cnt, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.tuple_impl.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.tagged_ret = function cljs$spec$alpha$tagged_ret(tag, ret) {
  return new cljs.core.MapEntry(tag, ret, null);
};
cljs.spec.alpha.or_spec_impl = function cljs$spec$alpha$or_spec_impl(keys, forms, preds, gfn) {
  var id = cljs.core.random_uuid.call(null);
  var kps = cljs.core.zipmap.call(null, keys, preds);
  var specs = new cljs.core.Delay(function(id, kps) {
    return function() {
      return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
    };
  }(id, kps), null);
  var cform = function() {
    var G__5835 = cljs.core.count.call(null, preds);
    switch(G__5835) {
      case 2:
        return function(G__5835, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
              }
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
            }
          };
        }(G__5835, id, kps, specs);
        break;
      case 3:
        return function(G__5835, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), x);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
                var ret__$2 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), x);
                if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$2)) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 2), ret__$2);
                }
              } else {
                return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 1), ret__$1);
              }
            } else {
              return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, 0), ret);
            }
          };
        }(G__5835, id, kps, specs);
        break;
      default:
        return function(G__5835, id, kps, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var i = 0;
            while (true) {
              if (i < cljs.core.count.call(null, specs__$1)) {
                var spec = specs__$1.call(null, i);
                var ret = cljs.spec.alpha.conform_STAR_.call(null, spec, x);
                if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
                  var G__5844 = i + 1;
                  i = G__5844;
                  continue;
                } else {
                  return cljs.spec.alpha.tagged_ret.call(null, keys.call(null, i), ret);
                }
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
              break;
            }
          };
        }(G__5835, id, kps, specs);
    }
  }();
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5836 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5836 = function(keys, forms, preds, gfn, id, kps, specs, cform, meta5837) {
      this.keys = keys;
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.id = id;
      this.kps = kps;
      this.specs = specs;
      this.cform = cform;
      this.meta5837 = meta5837;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(id, kps, specs, cform) {
      return function(_5838, meta5837__$1) {
        var self__ = this;
        var _5838__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5836(self__.keys, self__.forms, self__.preds, self__.gfn, self__.id, self__.kps, self__.specs, self__.cform, meta5837__$1);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$core$IMeta$_meta$arity$1 = function(id, kps, specs, cform) {
      return function(_5838) {
        var self__ = this;
        var _5838__$1 = this;
        return self__.meta5837;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(id, kps, specs, cform) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return self__.cform.call(null, x);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, p__5839) {
        var self__ = this;
        var vec__5840 = p__5839;
        var k = cljs.core.nth.call(null, vec__5840, 0, null);
        var x = cljs.core.nth.call(null, vec__5840, 1, null);
        var ___$1 = this;
        return cljs.spec.alpha.unform.call(null, self__.kps.call(null, k), x);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(id, kps, specs, cform) {
      return function(this$, path, via, in$, x) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.spec.alpha.pvalid_QMARK_.call(null, this$__$1, x)) {
          return null;
        } else {
          return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(this$__$1, id, kps, specs, cform) {
            return function(k, form, pred) {
              if (cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x)) {
                return null;
              } else {
                return cljs.spec.alpha.explain_1.call(null, form, pred, cljs.core.conj.call(null, path, k), via, in$, x);
              }
            };
          }(this$__$1, id, kps, specs, cform), self__.keys, self__.forms, self__.preds));
        }
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(id, kps, specs, cform) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var gen = function(___$1, id, kps, specs, cform) {
            return function(k, p, f) {
              var rmap__$1 = cljs.spec.alpha.inck.call(null, rmap, self__.id);
              if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, self__.id, path, k)) {
                return null;
              } else {
                return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(rmap__$1, ___$1, id, kps, specs, cform) {
                  return function() {
                    return cljs.spec.alpha.gensub.call(null, p, overrides, cljs.core.conj.call(null, path, k), rmap__$1, f);
                  };
                }(rmap__$1, ___$1, id, kps, specs, cform), null));
              }
            };
          }(___$1, id, kps, specs, cform);
          var gs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, gen, self__.keys, self__.preds, self__.forms));
          if (cljs.core.empty_QMARK_.call(null, gs)) {
            return null;
          } else {
            return cljs.spec.gen.alpha.one_of.call(null, gs);
          }
        }
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(id, kps, specs, cform) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.or_spec_impl.call(null, self__.keys, self__.forms, self__.preds, gfn__$1);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(id, kps, specs, cform) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "or", "cljs.spec.alpha/or", -831679639, null), null, 1, null), cljs.core.mapcat.call(null, cljs.core.vector, self__.keys, self__.forms))));
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.getBasis = function(id, kps, specs, cform) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "kps", "kps", -1157342767, null), new cljs.core.Symbol(null, "specs", 
        "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta5837", "meta5837", -2121638943, null)], null);
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5836.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5836.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5836";
    cljs.spec.alpha.t_cljs$spec$alpha5836.cljs$lang$ctorPrWriter = function(id, kps, specs, cform) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5836");
      };
    }(id, kps, specs, cform);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5836 = function(id, kps, specs, cform) {
      return function cljs$spec$alpha$or_spec_impl_$___GT_t_cljs$spec$alpha5836(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta5837) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5836(keys__$1, forms__$1, preds__$1, gfn__$1, id__$1, kps__$1, specs__$1, cform__$1, meta5837);
      };
    }(id, kps, specs, cform);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5836(keys, forms, preds, gfn, id, kps, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.and_preds = function cljs$spec$alpha$and_preds(x, preds, forms) {
  var ret = x;
  var G__5851 = preds;
  var vec__5853 = G__5851;
  var seq__5854 = cljs.core.seq.call(null, vec__5853);
  var first__5855 = cljs.core.first.call(null, seq__5854);
  var seq__5854__$1 = cljs.core.next.call(null, seq__5854);
  var pred = first__5855;
  var preds__$1 = seq__5854__$1;
  var G__5852 = forms;
  var vec__5856 = G__5852;
  var seq__5857 = cljs.core.seq.call(null, vec__5856);
  var first__5858 = cljs.core.first.call(null, seq__5857);
  var seq__5857__$1 = cljs.core.next.call(null, seq__5857);
  var form = first__5858;
  var forms__$1 = seq__5857__$1;
  var ret__$1 = ret;
  var G__5851__$1 = G__5851;
  var G__5852__$1 = G__5852;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__5859 = G__5851__$1;
    var seq__5860 = cljs.core.seq.call(null, vec__5859);
    var first__5861 = cljs.core.first.call(null, seq__5860);
    var seq__5860__$1 = cljs.core.next.call(null, seq__5860);
    var pred__$1 = first__5861;
    var preds__$2 = seq__5860__$1;
    var vec__5862 = G__5852__$1;
    var seq__5863 = cljs.core.seq.call(null, vec__5862);
    var first__5864 = cljs.core.first.call(null, seq__5863);
    var seq__5863__$1 = cljs.core.next.call(null, seq__5863);
    var form__$1 = first__5864;
    var forms__$2 = seq__5863__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        var G__5865 = nret;
        var G__5866 = preds__$2;
        var G__5867 = forms__$2;
        ret__$1 = G__5865;
        G__5851__$1 = G__5866;
        G__5852__$1 = G__5867;
        continue;
      }
    } else {
      return ret__$2;
    }
    break;
  }
};
cljs.spec.alpha.explain_pred_list = function cljs$spec$alpha$explain_pred_list(forms, preds, path, via, in$, x) {
  var ret = x;
  var G__5874 = forms;
  var vec__5876 = G__5874;
  var seq__5877 = cljs.core.seq.call(null, vec__5876);
  var first__5878 = cljs.core.first.call(null, seq__5877);
  var seq__5877__$1 = cljs.core.next.call(null, seq__5877);
  var form = first__5878;
  var forms__$1 = seq__5877__$1;
  var G__5875 = preds;
  var vec__5879 = G__5875;
  var seq__5880 = cljs.core.seq.call(null, vec__5879);
  var first__5881 = cljs.core.first.call(null, seq__5880);
  var seq__5880__$1 = cljs.core.next.call(null, seq__5880);
  var pred = first__5881;
  var preds__$1 = seq__5880__$1;
  var ret__$1 = ret;
  var G__5874__$1 = G__5874;
  var G__5875__$1 = G__5875;
  while (true) {
    var ret__$2 = ret__$1;
    var vec__5882 = G__5874__$1;
    var seq__5883 = cljs.core.seq.call(null, vec__5882);
    var first__5884 = cljs.core.first.call(null, seq__5883);
    var seq__5883__$1 = cljs.core.next.call(null, seq__5883);
    var form__$1 = first__5884;
    var forms__$2 = seq__5883__$1;
    var vec__5885 = G__5875__$1;
    var seq__5886 = cljs.core.seq.call(null, vec__5885);
    var first__5887 = cljs.core.first.call(null, seq__5886);
    var seq__5886__$1 = cljs.core.next.call(null, seq__5886);
    var pred__$1 = first__5887;
    var preds__$2 = seq__5886__$1;
    if (cljs.core.truth_(pred__$1)) {
      var nret = cljs.spec.alpha.dt.call(null, pred__$1, ret__$2, form__$1);
      if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
        return cljs.spec.alpha.explain_1.call(null, form__$1, pred__$1, path, via, in$, ret__$2);
      } else {
        var G__5888 = nret;
        var G__5889 = forms__$2;
        var G__5890 = preds__$2;
        ret__$1 = G__5888;
        G__5874__$1 = G__5889;
        G__5875__$1 = G__5890;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.spec.alpha.and_spec_impl = function cljs$spec$alpha$and_spec_impl(forms, preds, gfn) {
  var specs = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, preds, forms);
  }, null);
  var cform = function() {
    var G__5893 = cljs.core.count.call(null, preds);
    switch(G__5893) {
      case 2:
        return function(G__5893, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
            }
          };
        }(G__5893, specs);
        break;
      case 3:
        return function(G__5893, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 0), x);
            if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            } else {
              var ret__$1 = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 1), ret);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              } else {
                return cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, 2), ret__$1);
              }
            }
          };
        }(G__5893, specs);
        break;
      default:
        return function(G__5893, specs) {
          return function(x) {
            var specs__$1 = cljs.core.deref.call(null, specs);
            var ret = x;
            var i = 0;
            while (true) {
              if (i < cljs.core.count.call(null, specs__$1)) {
                var nret = cljs.spec.alpha.conform_STAR_.call(null, specs__$1.call(null, i), ret);
                if (cljs.spec.alpha.invalid_QMARK_.call(null, nret)) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5898 = nret;
                  var G__5899 = i + 1;
                  ret = G__5898;
                  i = G__5899;
                  continue;
                }
              } else {
                return ret;
              }
              break;
            }
          };
        }(G__5893, specs);
    }
  }();
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5894 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5894 = function(forms, preds, gfn, specs, cform, meta5895) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.specs = specs;
      this.cform = cform;
      this.meta5895 = meta5895;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs, cform) {
      return function(_5896, meta5895__$1) {
        var self__ = this;
        var _5896__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5894(self__.forms, self__.preds, self__.gfn, self__.specs, self__.cform, meta5895__$1);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs, cform) {
      return function(_5896) {
        var self__ = this;
        var _5896__$1 = this;
        return self__.meta5895;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs, cform) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs, cform) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return self__.cform.call(null, x);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs, cform) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.reduce.call(null, function(___$1, specs, cform) {
          return function(p1__5892_SHARP_, p2__5891_SHARP_) {
            return cljs.spec.alpha.unform.call(null, p2__5891_SHARP_, p1__5892_SHARP_);
          };
        }(___$1, specs, cform), x, cljs.core.reverse.call(null, self__.preds));
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs, cform) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.explain_pred_list.call(null, self__.forms, self__.preds, path, via, in$, x);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs, cform) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.alpha.gensub.call(null, cljs.core.first.call(null, self__.preds), overrides, path, rmap, cljs.core.first.call(null, self__.forms));
        }
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs, cform) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.and_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs, cform) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "and", "cljs.spec.alpha/and", -2060279705, null), null, 1, null), self__.forms)));
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.getBasis = function(specs, cform) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta5895", "meta5895", 123312985, null)], null);
      };
    }(specs, cform);
    cljs.spec.alpha.t_cljs$spec$alpha5894.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5894.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5894";
    cljs.spec.alpha.t_cljs$spec$alpha5894.cljs$lang$ctorPrWriter = function(specs, cform) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5894");
      };
    }(specs, cform);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5894 = function(specs, cform) {
      return function cljs$spec$alpha$and_spec_impl_$___GT_t_cljs$spec$alpha5894(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta5895) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5894(forms__$1, preds__$1, gfn__$1, specs__$1, cform__$1, meta5895);
      };
    }(specs, cform);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5894(forms, preds, gfn, specs, cform, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.coll_prob = function cljs$spec$alpha$coll_prob(x, kfn, kform, distinct, count, min_count, max_count, path, via, in$) {
  var pred = function() {
    var or__4131__auto__ = kfn;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.core.coll_QMARK_;
    }
  }();
  var kform__$1 = function() {
    var or__4131__auto__ = kform;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null);
    }
  }();
  if (!cljs.spec.alpha.pvalid_QMARK_.call(null, pred, x)) {
    return cljs.spec.alpha.explain_1.call(null, kform__$1, pred, path, via, in$, x);
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = count;
      if (cljs.core.truth_(and__4120__auto__)) {
        return cljs.core.not_EQ_.call(null, count, cljs.core.bounded_count.call(null, count, x));
      } else {
        return and__4120__auto__;
      }
    }())) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, count, null, 
      1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), in$], null)], null);
    } else {
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = function() {
          var or__4131__auto__ = min_count;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return max_count;
          }
        }();
        if (cljs.core.truth_(and__4120__auto__)) {
          return !(function() {
            var or__4131__auto__ = min_count;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return 0;
            }
          }() <= cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) && cljs.core.bounded_count.call(null, cljs.core.truth_(max_count) ? max_count + 1 : min_count, x) <= function() {
            var or__4131__auto__ = max_count;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return 9007199254740991;
            }
          }());
        } else {
          return and__4120__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null), null, 1, null), new cljs.core.List(null, function() {
          var or__4131__auto__ = min_count;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return 0;
          }
        }(), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, function() {
          var or__4131__auto__ = max_count;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return 9007199254740991;
          }
        }(), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      } else {
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = distinct;
          if (cljs.core.truth_(and__4120__auto__)) {
            return !cljs.core.empty_QMARK_.call(null, x) && cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core.distinct_QMARK_, x));
          } else {
            return and__4120__auto__;
          }
        }())) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "distinct?", "distinct?", -1684357959, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), 
          in$], null)], null);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.spec.alpha.merge_spec_impl = function cljs$spec$alpha$merge_spec_impl(forms, preds, gfn) {
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5908 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5908 = function(forms, preds, gfn, meta5909) {
      this.forms = forms;
      this.preds = preds;
      this.gfn = gfn;
      this.meta5909 = meta5909;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5910, meta5909__$1) {
      var self__ = this;
      var _5910__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha5908(self__.forms, self__.preds, self__.gfn, meta5909__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5910) {
      var self__ = this;
      var _5910__$1 = this;
      return self__.meta5909;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      var ms = cljs.core.map.call(null, function(___$1) {
        return function(p1__5900_SHARP_, p2__5901_SHARP_) {
          return cljs.spec.alpha.dt.call(null, p1__5900_SHARP_, x, p2__5901_SHARP_);
        };
      }(___$1), self__.preds, self__.forms);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.spec.alpha.invalid_QMARK_, ms))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      } else {
        return cljs.core.apply.call(null, cljs.core.merge, ms);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, function(___$1) {
        return function(p1__5902_SHARP_) {
          return cljs.spec.alpha.unform.call(null, p1__5902_SHARP_, x);
        };
      }(___$1), cljs.core.reverse.call(null, self__.preds)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(___$1) {
        return function(p1__5903_SHARP_, p2__5904_SHARP_) {
          return cljs.spec.alpha.explain_1.call(null, p1__5903_SHARP_, p2__5904_SHARP_, path, via, in$, x);
        };
      }(___$1), self__.forms, self__.preds));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.gen.alpha.fmap.call(null, function(___$1) {
          return function(p1__5905_SHARP_) {
            return cljs.core.apply.call(null, cljs.core.merge, p1__5905_SHARP_);
          };
        }(___$1), cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, function(___$1) {
          return function(p1__5906_SHARP_, p2__5907_SHARP_) {
            return cljs.spec.alpha.gensub.call(null, p1__5906_SHARP_, overrides, path, rmap, p2__5907_SHARP_);
          };
        }(___$1), self__.preds, self__.forms)));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.merge_spec_impl.call(null, self__.forms, self__.preds, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "merge", "cljs.spec.alpha/merge", 1420080689, null), null, 1, null), self__.forms)));
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta5909", "meta5909", 186822001, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha5908.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5908.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5908";
    cljs.spec.alpha.t_cljs$spec$alpha5908.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5908");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5908 = function cljs$spec$alpha$merge_spec_impl_$___GT_t_cljs$spec$alpha5908(forms__$1, preds__$1, gfn__$1, meta5909) {
      return new cljs.spec.alpha.t_cljs$spec$alpha5908(forms__$1, preds__$1, gfn__$1, meta5909);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5908(forms, preds, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.empty_coll = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), cljs.core.PersistentVector.EMPTY, new cljs.core.Symbol("cljs.core", "set?", "cljs.core/set?", -1176684971, null), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Symbol("cljs.core", "list?", "cljs.core/list?", -684796618, null), cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), cljs.core.PersistentArrayMap.EMPTY], 
null);
cljs.spec.alpha.every_impl = function cljs$spec$alpha$every_impl(var_args) {
  var G__5916 = arguments.length;
  switch(G__5916) {
    case 3:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3 = function(form, pred, opts) {
  return cljs.spec.alpha.every_impl.call(null, form, pred, opts, null);
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4 = function(form, pred, p__5917, gfn) {
  var map__5918 = p__5917;
  var map__5918__$1 = (!(map__5918 == null) ? map__5918.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5918.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5918) : map__5918;
  var opts = map__5918__$1;
  var max_count = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "max-count", "max-count", 1539185305));
  var kind_form = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword("cljs.spec.alpha", "kind-form", "cljs.spec.alpha/kind-form", -1047104697));
  var gen_max = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "gen-max", "gen-max", -793680445), 20);
  var cpred = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword("cljs.spec.alpha", "cpred", "cljs.spec.alpha/cpred", -693471218));
  var conform_keys = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "conform-keys", "conform-keys", -1800041814));
  var describe_form = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword("cljs.spec.alpha", "describe", "cljs.spec.alpha/describe", 1883026911));
  var distinct = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "distinct", "distinct", -1788879121));
  var kfn = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword("cljs.spec.alpha", "kfn", "cljs.spec.alpha/kfn", 672643897));
  var count = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  var min_count = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "min-count", "min-count", 1594709013));
  var kind = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "kind", "kind", -717265803));
  var conform_all = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword("cljs.spec.alpha", "conform-all", "cljs.spec.alpha/conform-all", 45201917));
  var conform_into = cljs.core.get.call(null, map__5918__$1, new cljs.core.Keyword(null, "into", "into", -150836029));
  var gen_into = cljs.core.truth_(conform_into) ? cljs.core.empty.call(null, conform_into) : cljs.core.get.call(null, cljs.spec.alpha.empty_coll, kind_form);
  var spec = new cljs.core.Delay(function(gen_into, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
    return function() {
      return cljs.spec.alpha.specize.call(null, pred);
    };
  }(gen_into, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), null);
  var check_QMARK_ = function(gen_into, spec, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
    return function(p1__5911_SHARP_) {
      return cljs.spec.alpha.valid_QMARK_.call(null, cljs.core.deref.call(null, spec), p1__5911_SHARP_);
    };
  }(gen_into, spec, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
  var kfn__$1 = function() {
    var or__4131__auto__ = kfn;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return function(or__4131__auto__, gen_into, spec, check_QMARK_, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
        return function(i, v) {
          return i;
        };
      }(or__4131__auto__, gen_into, spec, check_QMARK_, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    }
  }();
  var addcv = function(gen_into, spec, check_QMARK_, kfn__$1, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
    return function(ret, i, v, cv) {
      return cljs.core.conj.call(null, ret, cv);
    };
  }(gen_into, spec, check_QMARK_, kfn__$1, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
  var cfns = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
    return function(x) {
      if (cljs.core.vector_QMARK_.call(null, x) && (cljs.core.not.call(null, conform_into) || cljs.core.vector_QMARK_.call(null, conform_into))) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.identity, function(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
          return function(ret, i, v, cv) {
            if (v === cv) {
              return ret;
            } else {
              return cljs.core.assoc.call(null, ret, i, cv);
            }
          };
        }(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), cljs.core.identity], null);
      } else {
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = cljs.core.map_QMARK_.call(null, x);
          if (and__4120__auto__) {
            var or__4131__auto__ = function() {
              var and__4120__auto____$1 = kind;
              if (cljs.core.truth_(and__4120__auto____$1)) {
                return cljs.core.not.call(null, conform_into);
              } else {
                return and__4120__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return cljs.core.map_QMARK_.call(null, conform_into);
            }
          } else {
            return and__4120__auto__;
          }
        }())) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(conform_keys) ? cljs.core.empty : cljs.core.identity, function(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
            return function(ret, i, v, cv) {
              if (v === cv && cljs.core.not.call(null, conform_keys)) {
                return ret;
              } else {
                return cljs.core.assoc.call(null, ret, cljs.core.nth.call(null, cljs.core.truth_(conform_keys) ? cv : v, 0), cljs.core.nth.call(null, cv, 1));
              }
            };
          }(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), cljs.core.identity], null);
        } else {
          if (cljs.core.list_QMARK_.call(null, conform_into) || cljs.core.seq_QMARK_.call(null, conform_into) || cljs.core.not.call(null, conform_into) && (cljs.core.list_QMARK_.call(null, x) || cljs.core.seq_QMARK_.call(null, x))) {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.empty, addcv, cljs.core.reverse], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
              return function(p1__5912_SHARP_) {
                return cljs.core.empty.call(null, function() {
                  var or__4131__auto__ = conform_into;
                  if (cljs.core.truth_(or__4131__auto__)) {
                    return or__4131__auto__;
                  } else {
                    return p1__5912_SHARP_;
                  }
                }());
              };
            }(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), addcv, cljs.core.identity], null);
          }
        }
      }
    };
  }(gen_into, spec, check_QMARK_, kfn__$1, addcv, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha5920 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha5920 = function(form, max_count, p__5917, check_QMARK_, map__5918, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, spec, kfn, gen_into, count, min_count, opts, kind, conform_all, conform_into, meta5921) {
      this.form = form;
      this.max_count = max_count;
      this.p__5917 = p__5917;
      this.check_QMARK_ = check_QMARK_;
      this.map__5918 = map__5918;
      this.gfn = gfn;
      this.gen_max = gen_max;
      this.pred = pred;
      this.cpred = cpred;
      this.conform_keys = conform_keys;
      this.kind_form = kind_form;
      this.addcv = addcv;
      this.cfns = cfns;
      this.describe_form = describe_form;
      this.distinct = distinct;
      this.spec = spec;
      this.kfn = kfn;
      this.gen_into = gen_into;
      this.count = count;
      this.min_count = min_count;
      this.opts = opts;
      this.kind = kind;
      this.conform_all = conform_all;
      this.conform_into = conform_into;
      this.meta5921 = meta5921;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_5922, meta5921__$1) {
        var self__ = this;
        var _5922__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha5920(self__.form, self__.max_count, self__.p__5917, self__.check_QMARK_, self__.map__5918, self__.gfn, self__.gen_max, self__.pred, self__.cpred, self__.conform_keys, self__.kind_form, self__.addcv, self__.cfns, self__.describe_form, self__.distinct, self__.spec, self__.kfn, self__.gen_into, self__.count, self__.min_count, self__.opts, self__.kind, self__.conform_all, self__.conform_into, meta5921__$1);
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$core$IMeta$_meta$arity$1 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_5922) {
        var self__ = this;
        var _5922__$1 = this;
        return self__.meta5921;
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var spec__$1 = cljs.core.deref.call(null, self__.spec);
        if (cljs.core.not.call(null, self__.cpred.call(null, x))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          if (cljs.core.truth_(self__.conform_all)) {
            var vec__5923 = self__.cfns.call(null, x);
            var init = cljs.core.nth.call(null, vec__5923, 0, null);
            var add = cljs.core.nth.call(null, vec__5923, 1, null);
            var complete = cljs.core.nth.call(null, vec__5923, 2, null);
            var ret = init.call(null, x);
            var i = 0;
            var G__5929 = cljs.core.seq.call(null, x);
            var vec__5930 = G__5929;
            var seq__5931 = cljs.core.seq.call(null, vec__5930);
            var first__5932 = cljs.core.first.call(null, seq__5931);
            var seq__5931__$1 = cljs.core.next.call(null, seq__5931);
            var v = first__5932;
            var vs = seq__5931__$1;
            var vseq = vec__5930;
            var ret__$1 = ret;
            var i__$1 = i;
            var G__5929__$1 = G__5929;
            while (true) {
              var ret__$2 = ret__$1;
              var i__$2 = i__$1;
              var vec__5933 = G__5929__$1;
              var seq__5934 = cljs.core.seq.call(null, vec__5933);
              var first__5935 = cljs.core.first.call(null, seq__5934);
              var seq__5934__$1 = cljs.core.next.call(null, seq__5934);
              var v__$1 = first__5935;
              var vs__$1 = seq__5934__$1;
              var vseq__$1 = vec__5933;
              if (vseq__$1) {
                var cv = cljs.spec.alpha.conform_STAR_.call(null, spec__$1, v__$1);
                if (cljs.spec.alpha.invalid_QMARK_.call(null, cv)) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                } else {
                  var G__5960 = add.call(null, ret__$2, i__$2, v__$1, cv);
                  var G__5961 = i__$2 + 1;
                  var G__5962 = vs__$1;
                  ret__$1 = G__5960;
                  i__$1 = G__5961;
                  G__5929__$1 = G__5962;
                  continue;
                }
              } else {
                return complete.call(null, ret__$2);
              }
              break;
            }
          } else {
            if (cljs.core.indexed_QMARK_.call(null, x)) {
              var step = function() {
                var x__4219__auto__ = 1;
                var y__4220__auto__ = cljs.core.long$.call(null, cljs.core.count.call(null, x) / cljs.spec.alpha._STAR_coll_check_limit_STAR_);
                return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
              }();
              var i = 0;
              while (true) {
                if (i >= cljs.core.count.call(null, x)) {
                  return x;
                } else {
                  if (cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, cljs.core.nth.call(null, x, i))) {
                    var G__5963 = i + step;
                    i = G__5963;
                    continue;
                  } else {
                    return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                  }
                }
                break;
              }
            } else {
              var limit = cljs.spec.alpha._STAR_coll_check_limit_STAR_;
              var i = 0;
              var G__5939 = cljs.core.seq.call(null, x);
              var vec__5940 = G__5939;
              var seq__5941 = cljs.core.seq.call(null, vec__5940);
              var first__5942 = cljs.core.first.call(null, seq__5941);
              var seq__5941__$1 = cljs.core.next.call(null, seq__5941);
              var v = first__5942;
              var vs = seq__5941__$1;
              var vseq = vec__5940;
              var i__$1 = i;
              var G__5939__$1 = G__5939;
              while (true) {
                var i__$2 = i__$1;
                var vec__5943 = G__5939__$1;
                var seq__5944 = cljs.core.seq.call(null, vec__5943);
                var first__5945 = cljs.core.first.call(null, seq__5944);
                var seq__5944__$1 = cljs.core.next.call(null, seq__5944);
                var v__$1 = first__5945;
                var vs__$1 = seq__5944__$1;
                var vseq__$1 = vec__5943;
                if (vseq__$1 == null || cljs.core._EQ_.call(null, i__$2, limit)) {
                  return x;
                } else {
                  if (cljs.spec.alpha.valid_QMARK_.call(null, spec__$1, v__$1)) {
                    var G__5964 = i__$2 + 1;
                    var G__5965 = vs__$1;
                    i__$1 = G__5964;
                    G__5939__$1 = G__5965;
                    continue;
                  } else {
                    return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                  }
                }
                break;
              }
            }
          }
        }
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.conform_all)) {
          var spec__$1 = cljs.core.deref.call(null, self__.spec);
          var vec__5946 = self__.cfns.call(null, x);
          var init = cljs.core.nth.call(null, vec__5946, 0, null);
          var add = cljs.core.nth.call(null, vec__5946, 1, null);
          var complete = cljs.core.nth.call(null, vec__5946, 2, null);
          var ret = init.call(null, x);
          var i = 0;
          var G__5952 = cljs.core.seq.call(null, x);
          var vec__5953 = G__5952;
          var seq__5954 = cljs.core.seq.call(null, vec__5953);
          var first__5955 = cljs.core.first.call(null, seq__5954);
          var seq__5954__$1 = cljs.core.next.call(null, seq__5954);
          var v = first__5955;
          var vs = seq__5954__$1;
          var vseq = vec__5953;
          var ret__$1 = ret;
          var i__$1 = i;
          var G__5952__$1 = G__5952;
          while (true) {
            var ret__$2 = ret__$1;
            var i__$2 = i__$1;
            var vec__5956 = G__5952__$1;
            var seq__5957 = cljs.core.seq.call(null, vec__5956);
            var first__5958 = cljs.core.first.call(null, seq__5957);
            var seq__5957__$1 = cljs.core.next.call(null, seq__5957);
            var v__$1 = first__5958;
            var vs__$1 = seq__5957__$1;
            var vseq__$1 = vec__5956;
            if (i__$2 >= cljs.core.count.call(null, x)) {
              return complete.call(null, ret__$2);
            } else {
              var G__5966 = add.call(null, ret__$2, i__$2, v__$1, cljs.spec.alpha.unform_STAR_.call(null, spec__$1, v__$1));
              var G__5967 = i__$2 + 1;
              var G__5968 = vs__$1;
              ret__$1 = G__5966;
              i__$1 = G__5967;
              G__5952__$1 = G__5968;
              continue;
            }
            break;
          }
        } else {
          return x;
        }
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        var or__4131__auto__ = cljs.spec.alpha.coll_prob.call(null, x, self__.kind, self__.kind_form, self__.distinct, self__.count, self__.min_count, self__.max_count, path, via, in$);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.apply.call(null, cljs.core.concat, (cljs.core.truth_(self__.conform_all) ? cljs.core.identity : cljs.core.partial.call(null, cljs.core.take, cljs.spec.alpha._STAR_coll_error_limit_STAR_)).call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(or__4131__auto__, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, 
          min_count, kind, conform_all, conform_into) {
            return function(i, v) {
              var k = self__.kfn.call(null, i, v);
              if (cljs.core.truth_(self__.check_QMARK_.call(null, v))) {
                return null;
              } else {
                var prob = cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, path, via, cljs.core.conj.call(null, in$, k), v);
                return prob;
              }
            };
          }(or__4131__auto__, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), cljs.core.range.call(null), x))));
        }
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          var pgen = cljs.spec.alpha.gensub.call(null, self__.pred, overrides, path, rmap, self__.form);
          return cljs.spec.gen.alpha.bind.call(null, cljs.core.truth_(self__.gen_into) ? cljs.spec.gen.alpha.return$.call(null, self__.gen_into) : cljs.core.truth_(self__.kind) ? cljs.spec.gen.alpha.fmap.call(null, function(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
            return function(p1__5913_SHARP_) {
              if (cljs.core.empty_QMARK_.call(null, p1__5913_SHARP_)) {
                return p1__5913_SHARP_;
              } else {
                return cljs.core.empty.call(null, p1__5913_SHARP_);
              }
            };
          }(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), cljs.spec.alpha.gensub.call(null, self__.kind, overrides, path, rmap, self__.form)) : cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY), function(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, 
          opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
            return function(init) {
              return cljs.spec.gen.alpha.fmap.call(null, function(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
                return function(p1__5914_SHARP_) {
                  if (cljs.core.vector_QMARK_.call(null, init)) {
                    return p1__5914_SHARP_;
                  } else {
                    return cljs.core.into.call(null, init, p1__5914_SHARP_);
                  }
                };
              }(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into), cljs.core.truth_(self__.distinct) ? cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "num-elements", "num-elements", 1960422107), self__.count, new cljs.core.Keyword(null, 
              "max-tries", "max-tries", -1824441792), 100], null)) : cljs.spec.gen.alpha.vector_distinct.call(null, pgen, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "min-elements", "min-elements", 949370780), function() {
                var or__4131__auto__ = self__.min_count;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return 0;
                }
              }(), new cljs.core.Keyword(null, "max-elements", "max-elements", 433034073), function() {
                var or__4131__auto__ = self__.max_count;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  var x__4219__auto__ = self__.gen_max;
                  var y__4220__auto__ = 2 * function() {
                    var or__4131__auto____$1 = self__.min_count;
                    if (cljs.core.truth_(or__4131__auto____$1)) {
                      return or__4131__auto____$1;
                    } else {
                      return 0;
                    }
                  }();
                  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
                }
              }(), new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.core.truth_(self__.count) ? cljs.spec.gen.alpha.vector.call(null, pgen, self__.count) : cljs.core.truth_(function() {
                var or__4131__auto__ = self__.min_count;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return self__.max_count;
                }
              }()) ? cljs.spec.gen.alpha.vector.call(null, pgen, function() {
                var or__4131__auto__ = self__.min_count;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return 0;
                }
              }(), function() {
                var or__4131__auto__ = self__.max_count;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  var x__4219__auto__ = self__.gen_max;
                  var y__4220__auto__ = 2 * function() {
                    var or__4131__auto____$1 = self__.min_count;
                    if (cljs.core.truth_(or__4131__auto____$1)) {
                      return or__4131__auto____$1;
                    } else {
                      return 0;
                    }
                  }();
                  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
                }
              }()) : cljs.spec.gen.alpha.vector.call(null, pgen, 0, self__.gen_max));
            };
          }(pgen, ___$1, gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into));
        }
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.every_impl.call(null, self__.form, self__.pred, self__.opts, gfn__$1);
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var or__4131__auto__ = self__.describe_form;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "every", "cljs.spec.alpha/every", 123912744, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null), cljs.core.mapcat.call(null, cljs.core.identity, self__.opts))));
        }
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.getBasis = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function() {
        return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "max-count", "max-count", -1115250464, null), new cljs.core.Symbol(null, "p__5917", "p__5917", -1206014523, null), new cljs.core.Symbol(null, "check?", "check?", 409539557, null), new cljs.core.Symbol(null, "map__5918", "map__5918", -4652664, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, 
        "gen-max", "gen-max", 846851082, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "cpred", "cpred", -540353554, null), new cljs.core.Symbol(null, "conform-keys", "conform-keys", -159510287, null), new cljs.core.Symbol(null, "kind-form", "kind-form", 1155997457, null), new cljs.core.Symbol(null, "addcv", "addcv", -1552991247, null), new cljs.core.Symbol(null, "cfns", "cfns", 1335482066, null), new cljs.core.Symbol(null, "describe-form", "describe-form", 
        -1410156588, null), new cljs.core.Symbol(null, "distinct", "distinct", -148347594, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "kfn", "kfn", 729311001, null), new cljs.core.Symbol(null, "gen-into", "gen-into", 592640985, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "min-count", "min-count", -1059726756, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, 
        "kind", "kind", 923265724, null), new cljs.core.Symbol(null, "conform-all", "conform-all", -980179459, null), new cljs.core.Symbol(null, "conform-into", "conform-into", -1039113729, null), new cljs.core.Symbol(null, "meta5921", "meta5921", 924674485, null)], null);
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.t_cljs$spec$alpha5920.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha5920.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha5920";
    cljs.spec.alpha.t_cljs$spec$alpha5920.cljs$lang$ctorPrWriter = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha5920");
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha5920 = function(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into) {
      return function cljs$spec$alpha$__GT_t_cljs$spec$alpha5920(form__$1, max_count__$1, p__5917__$1, check_QMARK___$1, map__5918__$2, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, spec__$1, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta5921) {
        return new cljs.spec.alpha.t_cljs$spec$alpha5920(form__$1, max_count__$1, p__5917__$1, check_QMARK___$1, map__5918__$2, gfn__$1, gen_max__$1, pred__$1, cpred__$1, conform_keys__$1, kind_form__$1, addcv__$1, cfns__$1, describe_form__$1, distinct__$1, spec__$1, kfn__$2, gen_into__$1, count__$1, min_count__$1, opts__$1, kind__$1, conform_all__$1, conform_into__$1, meta5921);
      };
    }(gen_into, spec, check_QMARK_, kfn__$1, addcv, cfns, map__5918, map__5918__$1, opts, max_count, kind_form, gen_max, cpred, conform_keys, describe_form, distinct, kfn, count, min_count, kind, conform_all, conform_into);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha5920(form, max_count, p__5917, check_QMARK_, map__5918__$1, gfn, gen_max, pred, cpred, conform_keys, kind_form, addcv, cfns, describe_form, distinct, spec, kfn__$1, gen_into, count, min_count, opts, kind, conform_all, conform_into, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.accept = function cljs$spec$alpha$accept(x) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), new cljs.core.Keyword(null, "ret", "ret", -468222814), x], null);
};
cljs.spec.alpha.accept_QMARK_ = function cljs$spec$alpha$accept_QMARK_(p__5969) {
  var map__5970 = p__5969;
  var map__5970__$1 = (!(map__5970 == null) ? map__5970.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5970.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5970) : map__5970;
  var op = cljs.core.get.call(null, map__5970__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), op);
};
cljs.spec.alpha.pcat_STAR_ = function cljs$spec$alpha$pcat_STAR_(p__5972) {
  var map__5973 = p__5972;
  var map__5973__$1 = (!(map__5973 == null) ? map__5973.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5973.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5973) : map__5973;
  var vec__5974 = cljs.core.get.call(null, map__5973__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__5975 = cljs.core.seq.call(null, vec__5974);
  var first__5976 = cljs.core.first.call(null, seq__5975);
  var seq__5975__$1 = cljs.core.next.call(null, seq__5975);
  var p1 = first__5976;
  var pr = seq__5975__$1;
  var ps = vec__5974;
  var vec__5977 = cljs.core.get.call(null, map__5973__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__5978 = cljs.core.seq.call(null, vec__5977);
  var first__5979 = cljs.core.first.call(null, seq__5978);
  var seq__5978__$1 = cljs.core.next.call(null, seq__5978);
  var k1 = first__5979;
  var kr = seq__5978__$1;
  var ks = vec__5977;
  var vec__5980 = cljs.core.get.call(null, map__5973__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var seq__5981 = cljs.core.seq.call(null, vec__5980);
  var first__5982 = cljs.core.first.call(null, seq__5981);
  var seq__5981__$1 = cljs.core.next.call(null, seq__5981);
  var f1 = first__5982;
  var fr = seq__5981__$1;
  var forms = vec__5980;
  var ret = cljs.core.get.call(null, map__5973__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var rep_PLUS_ = cljs.core.get.call(null, map__5973__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ps)) {
    if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
      var rp = (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1);
      var ret__$1 = cljs.core.conj.call(null, ret, cljs.core.truth_(ks) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k1, rp]) : rp);
      if (pr) {
        return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), fr, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret__$1], null));
      } else {
        return cljs.spec.alpha.accept.call(null, ret__$1);
      }
    } else {
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "rep+", "rep+", 
      -281382396), rep_PLUS_], null);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.pcat = function cljs$spec$alpha$pcat(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5985 = arguments.length;
  var i__4731__auto___5986 = 0;
  while (true) {
    if (i__4731__auto___5986 < len__4730__auto___5985) {
      args__4736__auto__.push(arguments[i__4731__auto___5986]);
      var G__5987 = i__4731__auto___5986 + 1;
      i__4731__auto___5986 = G__5987;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY], null));
};
cljs.spec.alpha.pcat.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.pcat.cljs$lang$applyTo = function(seq5984) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5984));
};
cljs.spec.alpha.cat_impl = function cljs$spec$alpha$cat_impl(ks, ps, forms) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "ps", "ps", 292358046), ps, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.spec.alpha.rep_STAR_ = function cljs$spec$alpha$rep_STAR_(p1, p2, ret, splice, form) {
  if (cljs.core.truth_(p1)) {
    var r = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), new cljs.core.Keyword(null, "p2", "p2", 905500641), p2, new cljs.core.Keyword(null, "splice", "splice", 449588165), splice, new cljs.core.Keyword(null, "forms", "forms", 2045992350), form, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null)], null);
    if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p2, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.conj.call(null, ret, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
    } else {
      return cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "p1", "p1", -936759954), p1, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret);
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.rep_impl = function cljs$spec$alpha$rep_impl(form, p) {
  return cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, false, form);
};
cljs.spec.alpha.rep_PLUS_impl = function cljs$spec$alpha$rep_PLUS_impl(form, p) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.rep_STAR_.call(null, p, p, cljs.core.PersistentVector.EMPTY, true, form)], null), new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
  form, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), null, 1, null), new cljs.core.List(null, form, null, 1, null)))), null, 1, null))))), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "rep+", "rep+", -281382396), form], null));
};
cljs.spec.alpha.amp_impl = function cljs$spec$alpha$amp_impl(re, re_form, preds, pred_forms) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), new cljs.core.Keyword(null, "p1", "p1", -936759954), re, new cljs.core.Keyword(null, "amp", "amp", 271690571), re_form, new cljs.core.Keyword(null, "ps", "ps", 292358046), preds, new cljs.core.Keyword(null, "forms", "forms", 2045992350), pred_forms], null);
};
cljs.spec.alpha.filter_alt = function cljs$spec$alpha$filter_alt(ps, ks, forms, f) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = ks;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return forms;
    }
  }())) {
    var pks = cljs.core.filter.call(null, function(p1__5988_SHARP_) {
      return f.call(null, cljs.core.first.call(null, p1__5988_SHARP_));
    }, cljs.core.map.call(null, cljs.core.vector, ps, function() {
      var or__4131__auto__ = cljs.core.seq.call(null, ks);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }(), function() {
      var or__4131__auto__ = cljs.core.seq.call(null, forms);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return cljs.core.repeat.call(null, null);
      }
    }()));
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, pks)), cljs.core.truth_(ks) ? cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, pks)) : null, cljs.core.truth_(forms) ? cljs.core.seq.call(null, cljs.core.map.call(null, function(pks) {
      return function(p1__5989_SHARP_) {
        return cljs.core.nth.call(null, p1__5989_SHARP_, 2);
      };
    }(pks), pks)) : null], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.filter.call(null, f, ps)), ks, forms], null);
  }
};
cljs.spec.alpha.alt_STAR_ = function cljs$spec$alpha$alt_STAR_(ps, ks, forms) {
  var vec__5990 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.core.identity);
  var vec__5993 = cljs.core.nth.call(null, vec__5990, 0, null);
  var seq__5994 = cljs.core.seq.call(null, vec__5993);
  var first__5995 = cljs.core.first.call(null, seq__5994);
  var seq__5994__$1 = cljs.core.next.call(null, seq__5994);
  var p1 = first__5995;
  var pr = seq__5994__$1;
  var ps__$1 = vec__5993;
  var vec__5996 = cljs.core.nth.call(null, vec__5990, 1, null);
  var k1 = cljs.core.nth.call(null, vec__5996, 0, null);
  var ks__$1 = vec__5996;
  var forms__$1 = cljs.core.nth.call(null, vec__5990, 2, null);
  if (cljs.core.truth_(ps__$1)) {
    var ret = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), new cljs.core.Keyword(null, "ps", "ps", 292358046), ps__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms__$1], null);
    if (pr == null) {
      if (cljs.core.truth_(k1)) {
        if (cljs.spec.alpha.accept_QMARK_.call(null, p1)) {
          return cljs.spec.alpha.accept.call(null, cljs.spec.alpha.tagged_ret.call(null, k1, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(p1)));
        } else {
          return ret;
        }
      } else {
        return p1;
      }
    } else {
      return ret;
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.alts = function cljs$spec$alpha$alts(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6000 = arguments.length;
  var i__4731__auto___6001 = 0;
  while (true) {
    if (i__4731__auto___6001 < len__4730__auto___6000) {
      args__4736__auto__.push(arguments[i__4731__auto___6001]);
      var G__6002 = i__4731__auto___6001 + 1;
      i__4731__auto___6001 = G__6002;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic = function(ps) {
  return cljs.spec.alpha.alt_STAR_.call(null, ps, null, null);
};
cljs.spec.alpha.alts.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.alts.cljs$lang$applyTo = function(seq5999) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq5999));
};
cljs.spec.alpha.alt2 = function cljs$spec$alpha$alt2(p1, p2) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = p1;
    if (cljs.core.truth_(and__4120__auto__)) {
      return p2;
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.spec.alpha.alts.call(null, p1, p2);
  } else {
    var or__4131__auto__ = p1;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return p2;
    }
  }
};
cljs.spec.alpha.alt_impl = function cljs$spec$alpha$alt_impl(ks, ps, forms) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, ps, ks, forms), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null));
};
cljs.spec.alpha.maybe_impl = function cljs$spec$alpha$maybe_impl(p, form) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.spec.alpha.accept.call(null, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))], null), null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [form, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)], null)), new cljs.core.Keyword(null, 
  "maybe", "maybe", -314397560), form);
};
cljs.spec.alpha.noret_QMARK_ = function cljs$spec$alpha$noret_QMARK_(p1, pret) {
  var or__4131__auto__ = cljs.core._EQ_.call(null, pret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950));
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = function() {
      var and__4120__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), null], null), null)).call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.reg_resolve_BANG_.call(null, p1)));
      if (cljs.core.truth_(and__4120__auto__)) {
        return cljs.core.empty_QMARK_.call(null, pret);
      } else {
        return and__4120__auto__;
      }
    }();
    if (cljs.core.truth_(or__4131__auto____$1)) {
      return or__4131__auto____$1;
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.accept_nil_QMARK_ = function cljs$spec$alpha$accept_nil_QMARK_(p) {
  var map__6003 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6003__$1 = (!(map__6003 == null) ? map__6003.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6003.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6003) : map__6003;
  var p__$1 = map__6003__$1;
  var op = cljs.core.get.call(null, map__6003__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__6003__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var p1 = cljs.core.get.call(null, map__6003__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__6003__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var forms = cljs.core.get.call(null, map__6003__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__6005 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6005)) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, null, G__6005)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6005)) {
        var and__4120__auto__ = cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
        if (cljs.core.truth_(and__4120__auto__)) {
          var ret = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1), ps, cljs.core.next.call(null, forms));
          return !cljs.spec.alpha.invalid_QMARK_.call(null, ret);
        } else {
          return and__4120__auto__;
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6005)) {
          var or__4131__auto__ = p1 === p2;
          if (or__4131__auto__) {
            return or__4131__auto__;
          } else {
            return cljs.spec.alpha.accept_nil_QMARK_.call(null, p1);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6005)) {
            return cljs.core.every_QMARK_.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6005)) {
              return cljs.core.some.call(null, cljs.spec.alpha.accept_nil_QMARK_, ps);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6005)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.preturn = function cljs$spec$alpha$preturn(p) {
  var map__6006 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6006__$1 = (!(map__6006 == null) ? map__6006.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6006.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6006) : map__6006;
  var p__$1 = map__6006__$1;
  var vec__6007 = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__6008 = cljs.core.seq.call(null, vec__6007);
  var first__6009 = cljs.core.first.call(null, seq__6008);
  var seq__6008__$1 = cljs.core.next.call(null, seq__6008);
  var p0 = first__6009;
  var pr = seq__6008__$1;
  var ps = vec__6007;
  var vec__6010 = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__6010, 0, null);
  var ks = vec__6010;
  var op = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__6006__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var G__6014 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6014)) {
    return ret;
  } else {
    if (cljs.core._EQ_.call(null, null, G__6014)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6014)) {
        var pret = cljs.spec.alpha.preturn.call(null, p1);
        if (cljs.core.truth_(cljs.spec.alpha.noret_QMARK_.call(null, p1, pret))) {
          return new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950);
        } else {
          return cljs.spec.alpha.and_preds.call(null, pret, ps, forms);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6014)) {
          return cljs.spec.alpha.add_ret.call(null, p1, ret, k);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6014)) {
            return cljs.spec.alpha.add_ret.call(null, p0, ret, k);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6014)) {
              var vec__6015 = cljs.spec.alpha.filter_alt.call(null, ps, ks, forms, cljs.spec.alpha.accept_nil_QMARK_);
              var vec__6018 = cljs.core.nth.call(null, vec__6015, 0, null);
              var p0__$1 = cljs.core.nth.call(null, vec__6018, 0, null);
              var vec__6021 = cljs.core.nth.call(null, vec__6015, 1, null);
              var k0 = cljs.core.nth.call(null, vec__6021, 0, null);
              var r = p0__$1 == null ? new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950) : cljs.spec.alpha.preturn.call(null, p0__$1);
              if (cljs.core.truth_(k0)) {
                return cljs.spec.alpha.tagged_ret.call(null, k0, r);
              } else {
                return r;
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6014)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.op_unform = function cljs$spec$alpha$op_unform(p, x) {
  var map__6028 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6028__$1 = (!(map__6028 == null) ? map__6028.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6028.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6028) : map__6028;
  var p__$1 = map__6028__$1;
  var vec__6029 = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__6030 = cljs.core.seq.call(null, vec__6029);
  var first__6031 = cljs.core.first.call(null, seq__6030);
  var seq__6030__$1 = cljs.core.next.call(null, seq__6030);
  var p0 = first__6031;
  var pr = seq__6030__$1;
  var ps = vec__6029;
  var vec__6032 = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var k = cljs.core.nth.call(null, vec__6032, 0, null);
  var ks = vec__6032;
  var op = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var p1 = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var ret = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var forms = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var rep_PLUS_ = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var maybe = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  var kps = cljs.core.zipmap.call(null, ks, ps);
  var G__6036 = op;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6036)) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null);
  } else {
    if (cljs.core._EQ_.call(null, null, G__6036)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p__$1, x)], null);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6036)) {
        var px = cljs.core.reduce.call(null, function(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
          return function(p1__6025_SHARP_, p2__6024_SHARP_) {
            return cljs.spec.alpha.unform.call(null, p2__6024_SHARP_, p1__6025_SHARP_);
          };
        }(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x, cljs.core.reverse.call(null, ps));
        return cljs.spec.alpha.op_unform.call(null, p1, px);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6036)) {
          return cljs.core.mapcat.call(null, function(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
            return function(p1__6026_SHARP_) {
              return cljs.spec.alpha.op_unform.call(null, p1, p1__6026_SHARP_);
            };
          }(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6036)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return cljs.core.mapcat.call(null, function(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
                return function(p1__6027_SHARP_) {
                  return cljs.spec.alpha.op_unform.call(null, p0, p1__6027_SHARP_);
                };
              }(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), x);
            } else {
              return cljs.core.mapcat.call(null, function(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps) {
                return function(k__$1) {
                  if (cljs.core.contains_QMARK_.call(null, x, k__$1)) {
                    return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), cljs.core.get.call(null, x, k__$1));
                  } else {
                    return null;
                  }
                };
              }(G__6036, map__6028, map__6028__$1, p__$1, vec__6029, seq__6030, first__6031, seq__6030__$1, p0, pr, ps, vec__6032, k, ks, op, p1, ret, forms, rep_PLUS_, maybe, kps), ks);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6036)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, p0, x)], null);
              } else {
                var vec__6037 = x;
                var k__$1 = cljs.core.nth.call(null, vec__6037, 0, null);
                var v = cljs.core.nth.call(null, vec__6037, 1, null);
                return cljs.spec.alpha.op_unform.call(null, kps.call(null, k__$1), v);
              }
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6036)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.add_ret = function cljs$spec$alpha$add_ret(p, r, k) {
  var map__6040 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6040__$1 = (!(map__6040 == null) ? map__6040.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6040.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6040) : map__6040;
  var p__$1 = map__6040__$1;
  var op = cljs.core.get.call(null, map__6040__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__6040__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var splice = cljs.core.get.call(null, map__6040__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var prop = function(map__6040, map__6040__$1, p__$1, op, ps, splice) {
    return function() {
      var ret = cljs.spec.alpha.preturn.call(null, p__$1);
      if (cljs.core.empty_QMARK_.call(null, ret)) {
        return r;
      } else {
        return (cljs.core.truth_(splice) ? cljs.core.into : cljs.core.conj).call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
      }
    };
  }(map__6040, map__6040__$1, p__$1, op, ps, splice);
  var G__6042 = op;
  if (cljs.core._EQ_.call(null, null, G__6042)) {
    return r;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6042)) {
      var ret = cljs.spec.alpha.preturn.call(null, p__$1);
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
        return r;
      } else {
        return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
      }
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6042)) {
        var ret = cljs.spec.alpha.preturn.call(null, p__$1);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return r;
        } else {
          return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6042)) {
          var ret = cljs.spec.alpha.preturn.call(null, p__$1);
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return r;
          } else {
            return cljs.core.conj.call(null, r, cljs.core.truth_(k) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ret]) : ret);
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6042)) {
            return prop.call(null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6042)) {
              return prop.call(null);
            } else {
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6042)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.spec.alpha.deriv = function cljs$spec$alpha$deriv(p, x) {
  var map__6044 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6044__$1 = (!(map__6044 == null) ? map__6044.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6044.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6044) : map__6044;
  var p__$1 = map__6044__$1;
  var forms = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var p2 = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var vec__6045 = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var seq__6046 = cljs.core.seq.call(null, vec__6045);
  var first__6047 = cljs.core.first.call(null, seq__6046);
  var seq__6046__$1 = cljs.core.next.call(null, seq__6046);
  var p0 = first__6047;
  var pr = seq__6046__$1;
  var ps = vec__6045;
  var ret = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var op = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var vec__6048 = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var seq__6049 = cljs.core.seq.call(null, vec__6048);
  var first__6050 = cljs.core.first.call(null, seq__6049);
  var seq__6049__$1 = cljs.core.next.call(null, seq__6049);
  var k0 = first__6050;
  var kr = seq__6049__$1;
  var ks = vec__6048;
  var amp = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "amp", "amp", 271690571));
  var p1 = cljs.core.get.call(null, map__6044__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  if (cljs.core.truth_(p__$1)) {
    var G__6052 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6052)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__6052)) {
        var ret__$1 = cljs.spec.alpha.dt.call(null, p__$1, x, p__$1);
        if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
          return null;
        } else {
          return cljs.spec.alpha.accept.call(null, ret__$1);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6052)) {
          var temp__5720__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
          if (cljs.core.truth_(temp__5720__auto__)) {
            var p1__$1 = temp__5720__auto__;
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p1__$1))) {
              var ret__$1 = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, p1__$1), ps, cljs.core.next.call(null, forms));
              if (cljs.spec.alpha.invalid_QMARK_.call(null, ret__$1)) {
                return null;
              } else {
                return cljs.spec.alpha.accept.call(null, ret__$1);
              }
            } else {
              return cljs.spec.alpha.amp_impl.call(null, p1__$1, amp, ps, forms);
            }
          } else {
            return null;
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6052)) {
            return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), cljs.core.cons.call(null, cljs.spec.alpha.deriv.call(null, p0, x), pr), new cljs.core.Keyword(null, "ks", "ks", 1900203942), ks, new cljs.core.Keyword(null, "forms", "forms", 2045992350), forms, new cljs.core.Keyword(null, "ret", "ret", -468222814), ret], null)), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, 
            p0)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), pr, new cljs.core.Keyword(null, "ks", "ks", 1900203942), kr, new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.next.call(null, forms), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.spec.alpha.add_ret.call(null, p0, ret, k0)], null)), x) : null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6052)) {
              return cljs.spec.alpha.alt_STAR_.call(null, cljs.core.map.call(null, function(G__6052, map__6044, map__6044__$1, p__$1, forms, p2, vec__6045, seq__6046, first__6047, seq__6046__$1, p0, pr, ps, ret, op, splice, vec__6048, seq__6049, first__6050, seq__6049__$1, k0, kr, ks, amp, p1) {
                return function(p1__6043_SHARP_) {
                  return cljs.spec.alpha.deriv.call(null, p1__6043_SHARP_, x);
                };
              }(G__6052, map__6044, map__6044__$1, p__$1, forms, p2, vec__6045, seq__6046, first__6047, seq__6046__$1, p0, pr, ps, ret, op, splice, vec__6048, seq__6049, first__6050, seq__6049__$1, k0, kr, ks, amp, p1), ps), ks, forms);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6052)) {
                return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.rep_STAR_.call(null, cljs.spec.alpha.deriv.call(null, p1, x), p2, ret, splice, forms), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.rep_STAR_.call(null, p2, p2, cljs.spec.alpha.add_ret.call(null, p1, ret, null), splice, forms), x) : null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6052)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_describe = function cljs$spec$alpha$op_describe(p) {
  var map__6053 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6053__$1 = (!(map__6053 == null) ? map__6053.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6053.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6053) : map__6053;
  var p__$1 = map__6053__$1;
  var ps = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var forms = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var rep_PLUS_ = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  var op = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var ks = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var maybe = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  var amp = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "amp", "amp", 271690571));
  var p1 = cljs.core.get.call(null, map__6053__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  if (cljs.core.truth_(p__$1)) {
    var G__6055 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6055)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__6055)) {
        return p__$1;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6055)) {
          return cljs.core.list_STAR_.call(null, new cljs.core.Symbol("cljs.spec.alpha", "\x26", "cljs.spec.alpha/\x26", 1635809823, null), amp, forms);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6055)) {
            if (cljs.core.truth_(rep_PLUS_)) {
              return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null), new cljs.core.List(null, rep_PLUS_, null, 1, null), 2, null);
            } else {
              return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), cljs.core.mapcat.call(null, cljs.core.vector, function() {
                var or__4131__auto__ = cljs.core.seq.call(null, ks);
                if (or__4131__auto__) {
                  return or__4131__auto__;
                } else {
                  return cljs.core.repeat.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199));
                }
              }(), forms));
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6055)) {
              if (cljs.core.truth_(maybe)) {
                return new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "?", "cljs.spec.alpha/?", 1605136319, null), new cljs.core.List(null, maybe, null, 1, null), 2, null);
              } else {
                return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", -2130750332, null), cljs.core.mapcat.call(null, cljs.core.vector, ks, forms));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6055)) {
                return new cljs.core.List(null, cljs.core.truth_(splice) ? new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null) : new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), new cljs.core.List(null, forms, null, 1, null), 2, null);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6055)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.op_explain = function cljs$spec$alpha$op_explain(form, p, path, via, in$, input) {
  var vec__6056 = input;
  var x = cljs.core.nth.call(null, vec__6056, 0, null);
  var input__$1 = vec__6056;
  var map__6059 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6059__$1 = (!(map__6059 == null) ? map__6059.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6059.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6059) : map__6059;
  var p__$1 = map__6059__$1;
  var op = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var ps = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var ks = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var forms = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var splice = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var p1 = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var p2 = cljs.core.get.call(null, map__6059__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var via__$1 = function() {
    var temp__5718__auto__ = cljs.spec.alpha.spec_name.call(null, p__$1);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var name = temp__5718__auto__;
      return cljs.core.conj.call(null, via, name);
    } else {
      return via;
    }
  }();
  var insufficient = function(vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1) {
    return function(path__$1, form__$1) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path__$1, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Insufficient input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), form__$1, new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "via", "via", -1904457336), via__$1, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), in$], null)], null);
    };
  }(vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1);
  if (cljs.core.truth_(p__$1)) {
    var G__6061 = op;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6061)) {
      return null;
    } else {
      if (cljs.core._EQ_.call(null, null, G__6061)) {
        if (cljs.core.empty_QMARK_.call(null, input__$1)) {
          return insufficient.call(null, path, form);
        } else {
          return cljs.spec.alpha.explain_1.call(null, form, p__$1, path, via__$1, in$, x);
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6061)) {
          if (cljs.core.empty_QMARK_.call(null, input__$1)) {
            if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p1))) {
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1));
            } else {
              return insufficient.call(null, path, (new cljs.core.Keyword(null, "amp", "amp", 271690571)).cljs$core$IFn$_invoke$arity$1(p__$1));
            }
          } else {
            var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p1, x);
            if (cljs.core.truth_(temp__5718__auto__)) {
              var p1__$1 = temp__5718__auto__;
              return cljs.spec.alpha.explain_pred_list.call(null, forms, ps, path, via__$1, in$, cljs.spec.alpha.preturn.call(null, p1__$1));
            } else {
              return cljs.spec.alpha.op_explain.call(null, (new cljs.core.Keyword(null, "amp", "amp", 271690571)).cljs$core$IFn$_invoke$arity$1(p__$1), p1, path, via__$1, in$, input__$1);
            }
          }
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6061)) {
            var pkfs = cljs.core.map.call(null, cljs.core.vector, ps, function() {
              var or__4131__auto__ = cljs.core.seq.call(null, ks);
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }(), function() {
              var or__4131__auto__ = cljs.core.seq.call(null, forms);
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                return cljs.core.repeat.call(null, null);
              }
            }());
            var vec__6062 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, pkfs)) ? cljs.core.first.call(null, pkfs) : cljs.core.first.call(null, cljs.core.remove.call(null, function(pkfs, G__6061, vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient) {
              return function(p__6065) {
                var vec__6066 = p__6065;
                var p__$2 = cljs.core.nth.call(null, vec__6066, 0, null);
                return cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2);
              };
            }(pkfs, G__6061, vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient), pkfs));
            var pred = cljs.core.nth.call(null, vec__6062, 0, null);
            var k = cljs.core.nth.call(null, vec__6062, 1, null);
            var form__$1 = cljs.core.nth.call(null, vec__6062, 2, null);
            var path__$1 = cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path;
            var form__$2 = function() {
              var or__4131__auto__ = form__$1;
              if (cljs.core.truth_(or__4131__auto__)) {
                return or__4131__auto__;
              } else {
                return cljs.spec.alpha.op_describe.call(null, pred);
              }
            }();
            if (cljs.core.empty_QMARK_.call(null, input__$1) && cljs.core.not.call(null, pred)) {
              return insufficient.call(null, path__$1, form__$2);
            } else {
              return cljs.spec.alpha.op_explain.call(null, form__$2, pred, path__$1, via__$1, in$, input__$1);
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6061)) {
              if (cljs.core.empty_QMARK_.call(null, input__$1)) {
                return insufficient.call(null, path, cljs.spec.alpha.op_describe.call(null, p__$1));
              } else {
                return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(G__6061, vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient) {
                  return function(k, form__$1, pred) {
                    return cljs.spec.alpha.op_explain.call(null, function() {
                      var or__4131__auto__ = form__$1;
                      if (cljs.core.truth_(or__4131__auto__)) {
                        return or__4131__auto__;
                      } else {
                        return cljs.spec.alpha.op_describe.call(null, pred);
                      }
                    }(), pred, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, via__$1, in$, input__$1);
                  };
                }(G__6061, vec__6056, x, input__$1, map__6059, map__6059__$1, p__$1, op, ps, ks, forms, splice, p1, p2, via__$1, insufficient), function() {
                  var or__4131__auto__ = cljs.core.seq.call(null, ks);
                  if (or__4131__auto__) {
                    return or__4131__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), function() {
                  var or__4131__auto__ = cljs.core.seq.call(null, forms);
                  if (or__4131__auto__) {
                    return or__4131__auto__;
                  } else {
                    return cljs.core.repeat.call(null, null);
                  }
                }(), ps));
              }
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6061)) {
                return cljs.spec.alpha.op_explain.call(null, p1 === p2 ? forms : cljs.spec.alpha.op_describe.call(null, p1), p1, path, via__$1, in$, input__$1);
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6061)].join(""));
              }
            }
          }
        }
      }
    }
  } else {
    return null;
  }
};
cljs.spec.alpha.re_gen = function cljs$spec$alpha$re_gen(p, overrides, path, rmap, f) {
  var map__6070 = cljs.spec.alpha.reg_resolve_BANG_.call(null, p);
  var map__6070__$1 = (!(map__6070 == null) ? map__6070.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6070.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6070) : map__6070;
  var p__$1 = map__6070__$1;
  var ps = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var forms = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  var p2 = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  var ret = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  var gfn = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375));
  var op = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  var splice = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  var ks = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "ks", "ks", 1900203942));
  var p1 = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var id = cljs.core.get.call(null, map__6070__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var rmap__$1 = cljs.core.truth_(id) ? cljs.spec.alpha.inck.call(null, rmap, id) : rmap;
  var ggens = function(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
    return function(ps__$1, ks__$1, forms__$1) {
      var gen = function(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
        return function(p__$2, k, f__$1) {
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = rmap__$1;
            if (cljs.core.truth_(and__4120__auto__)) {
              var and__4120__auto____$1 = id;
              if (cljs.core.truth_(and__4120__auto____$1)) {
                var and__4120__auto____$2 = k;
                if (cljs.core.truth_(and__4120__auto____$2)) {
                  return cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, path, k);
                } else {
                  return and__4120__auto____$2;
                }
              } else {
                return and__4120__auto____$1;
              }
            } else {
              return and__4120__auto__;
            }
          }())) {
            return null;
          } else {
            if (cljs.core.truth_(id)) {
              return cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1) {
                return function() {
                  return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
                    var or__4131__auto__ = f__$1;
                    if (cljs.core.truth_(or__4131__auto__)) {
                      return or__4131__auto__;
                    } else {
                      return p__$2;
                    }
                  }());
                };
              }(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1), null));
            } else {
              return cljs.spec.alpha.re_gen.call(null, p__$2, overrides, cljs.core.truth_(k) ? cljs.core.conj.call(null, path, k) : path, rmap__$1, function() {
                var or__4131__auto__ = f__$1;
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return p__$2;
                }
              }());
            }
          }
        };
      }(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1);
      return cljs.core.map.call(null, gen, ps__$1, function() {
        var or__4131__auto__ = cljs.core.seq.call(null, ks__$1);
        if (or__4131__auto__) {
          return or__4131__auto__;
        } else {
          return cljs.core.repeat.call(null, null);
        }
      }(), function() {
        var or__4131__auto__ = cljs.core.seq.call(null, forms__$1);
        if (or__4131__auto__) {
          return or__4131__auto__;
        } else {
          return cljs.core.repeat.call(null, null);
        }
      }());
    };
  }(map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1);
  var or__4131__auto__ = function() {
    var temp__5720__auto__ = cljs.core.get.call(null, overrides, path);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var g = temp__5720__auto__;
      var G__6073 = op;
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "accept", "accept", 1874130431), G__6073)) {
        return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
      } else {
        if (cljs.core._EQ_.call(null, null, G__6073)) {
          return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
        } else {
          return g;
        }
      }
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = cljs.core.truth_(gfn) ? gfn.call(null) : null;
    if (cljs.core.truth_(or__4131__auto____$1)) {
      return or__4131__auto____$1;
    } else {
      if (cljs.core.truth_(p__$1)) {
        var G__6074 = op;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), G__6074)) {
          if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
            return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
          } else {
            return cljs.spec.gen.alpha.return$.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret], null));
          }
        } else {
          if (cljs.core._EQ_.call(null, null, G__6074)) {
            var temp__5720__auto__ = cljs.spec.alpha.gensub.call(null, p__$1, overrides, path, rmap__$1, f);
            if (cljs.core.truth_(temp__5720__auto__)) {
              var g = temp__5720__auto__;
              return cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, g);
            } else {
              return null;
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), G__6074)) {
              return cljs.spec.alpha.re_gen.call(null, p1, overrides, path, rmap__$1, cljs.spec.alpha.op_describe.call(null, p1));
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), G__6074)) {
                var gens = ggens.call(null, ps, ks, forms);
                if (cljs.core.every_QMARK_.call(null, cljs.core.identity, gens)) {
                  return cljs.core.apply.call(null, cljs.spec.gen.alpha.cat, gens);
                } else {
                  return null;
                }
              } else {
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), G__6074)) {
                  var gens = cljs.core.remove.call(null, cljs.core.nil_QMARK_, ggens.call(null, ps, ks, forms));
                  if (cljs.core.empty_QMARK_.call(null, gens)) {
                    return null;
                  } else {
                    return cljs.spec.gen.alpha.one_of.call(null, gens);
                  }
                } else {
                  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), G__6074)) {
                    if (cljs.spec.alpha.recur_limit_QMARK_.call(null, rmap__$1, id, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [id], null), id)) {
                      return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
                    } else {
                      var temp__5720__auto__ = cljs.spec.alpha.re_gen.call(null, p2, overrides, path, rmap__$1, forms);
                      if (cljs.core.truth_(temp__5720__auto__)) {
                        var g = temp__5720__auto__;
                        return cljs.spec.gen.alpha.fmap.call(null, function(g, temp__5720__auto__, G__6074, or__4131__auto____$1, or__4131__auto__, map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1, ggens) {
                          return function(p1__6069_SHARP_) {
                            return cljs.core.apply.call(null, cljs.core.concat, p1__6069_SHARP_);
                          };
                        }(g, temp__5720__auto__, G__6074, or__4131__auto____$1, or__4131__auto__, map__6070, map__6070__$1, p__$1, ps, forms, p2, ret, gfn, op, splice, ks, p1, id, rmap__$1, ggens), cljs.spec.gen.alpha.vector.call(null, g));
                      } else {
                        return null;
                      }
                    }
                  } else {
                    throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6074)].join(""));
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.spec.alpha.re_conform = function cljs$spec$alpha$re_conform(p, p__6075) {
  while (true) {
    var vec__6076 = p__6075;
    var seq__6077 = cljs.core.seq.call(null, vec__6076);
    var first__6078 = cljs.core.first.call(null, seq__6077);
    var seq__6077__$1 = cljs.core.next.call(null, seq__6077);
    var x = first__6078;
    var xs = seq__6077__$1;
    var data = vec__6076;
    if (cljs.core.empty_QMARK_.call(null, data)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p))) {
        var ret = cljs.spec.alpha.preturn.call(null, p);
        if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))) {
          return null;
        } else {
          return ret;
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    } else {
      var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p, x);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var dp = temp__5718__auto__;
        var G__6079 = dp;
        var G__6080 = xs;
        p = G__6079;
        p__6075 = G__6080;
        continue;
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    }
    break;
  }
};
cljs.spec.alpha.re_explain = function cljs$spec$alpha$re_explain(path, via, in$, re, input) {
  var p = re;
  var G__6084 = input;
  var vec__6085 = G__6084;
  var seq__6086 = cljs.core.seq.call(null, vec__6085);
  var first__6087 = cljs.core.first.call(null, seq__6086);
  var seq__6086__$1 = cljs.core.next.call(null, seq__6086);
  var x = first__6087;
  var xs = seq__6086__$1;
  var data = vec__6085;
  var i = 0;
  var p__$1 = p;
  var G__6084__$1 = G__6084;
  var i__$1 = i;
  while (true) {
    var p__$2 = p__$1;
    var vec__6088 = G__6084__$1;
    var seq__6089 = cljs.core.seq.call(null, vec__6088);
    var first__6090 = cljs.core.first.call(null, seq__6089);
    var seq__6089__$1 = cljs.core.next.call(null, seq__6089);
    var x__$1 = first__6090;
    var xs__$1 = seq__6089__$1;
    var data__$1 = vec__6088;
    var i__$2 = i__$1;
    if (cljs.core.empty_QMARK_.call(null, data__$1)) {
      if (cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p__$2))) {
        return null;
      } else {
        return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, in$, null);
      }
    } else {
      var temp__5718__auto__ = cljs.spec.alpha.deriv.call(null, p__$2, x__$1);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var dp = temp__5718__auto__;
        var G__6091 = dp;
        var G__6092 = xs__$1;
        var G__6093 = i__$2 + 1;
        p__$1 = G__6091;
        G__6084__$1 = G__6092;
        i__$1 = G__6093;
        continue;
      } else {
        if (cljs.spec.alpha.accept_QMARK_.call(null, p__$2)) {
          if (cljs.core._EQ_.call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(p__$2), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623))) {
            return cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, re), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        } else {
          var or__4131__auto__ = cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, p__$2), p__$2, path, via, cljs.core.conj.call(null, in$, i__$2), cljs.core.seq.call(null, data__$1));
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, p__$2), new cljs.core.Keyword(null, "val", "val", 128701612), data__$1, new cljs.core.Keyword(null, "via", "via", -1904457336), 
            via, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, in$, i__$2)], null)], null);
          }
        }
      }
    }
    break;
  }
};
cljs.spec.alpha.regex_spec_impl = function cljs$spec$alpha$regex_spec_impl(re, gfn) {
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha6094 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha6094 = function(re, gfn, meta6095) {
      this.re = re;
      this.gfn = gfn;
      this.meta6095 = meta6095;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6096, meta6095__$1) {
      var self__ = this;
      var _6096__$1 = this;
      return new cljs.spec.alpha.t_cljs$spec$alpha6094(self__.re, self__.gfn, meta6095__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6096) {
      var self__ = this;
      var _6096__$1 = this;
      return self__.meta6095;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(s) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(s, _) {
      var self__ = this;
      var s__$1 = this;
      return s__$1;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.sequential_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_conform.call(null, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(_, x) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_unform.call(null, self__.re, x);
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(_, path, via, in$, x) {
      var self__ = this;
      var ___$1 = this;
      if (x == null || cljs.core.sequential_QMARK_.call(null, x)) {
        return cljs.spec.alpha.re_explain.call(null, path, via, in$, self__.re, cljs.core.seq.call(null, x));
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, 
        cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
        cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "sequential?", "cljs.core/sequential?", 1777854658, null), null, 
        1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(_, overrides, path, rmap) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.gfn)) {
        return self__.gfn.call(null);
      } else {
        return cljs.spec.alpha.re_gen.call(null, self__.re, overrides, path, rmap, cljs.spec.alpha.op_describe.call(null, self__.re));
      }
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(_, gfn__$1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.regex_spec_impl.call(null, self__.re, gfn__$1);
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.spec.alpha.op_describe.call(null, self__.re);
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta6095", "meta6095", -1455945088, null)], null);
    };
    cljs.spec.alpha.t_cljs$spec$alpha6094.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha6094.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha6094";
    cljs.spec.alpha.t_cljs$spec$alpha6094.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha6094");
    };
    cljs.spec.alpha.__GT_t_cljs$spec$alpha6094 = function cljs$spec$alpha$regex_spec_impl_$___GT_t_cljs$spec$alpha6094(re__$1, gfn__$1, meta6095) {
      return new cljs.spec.alpha.t_cljs$spec$alpha6094(re__$1, gfn__$1, meta6095);
    };
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha6094(re, gfn, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.call_valid_QMARK_ = function cljs$spec$alpha$call_valid_QMARK_(f, specs, args) {
  var cargs = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs), args);
  if (cljs.spec.alpha.invalid_QMARK_.call(null, cargs)) {
    return null;
  } else {
    var ret = cljs.core.apply.call(null, f, args);
    var cret = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(specs), ret);
    var and__4120__auto__ = !cljs.spec.alpha.invalid_QMARK_.call(null, cret);
    if (and__4120__auto__) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs))) {
        return cljs.spec.alpha.pvalid_QMARK_.call(null, (new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(specs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
      } else {
        return true;
      }
    } else {
      return and__4120__auto__;
    }
  }
};
cljs.spec.alpha.validate_fn = function cljs$spec$alpha$validate_fn(f, specs, iters) {
  var g = cljs.spec.alpha.gen.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(specs));
  var prop = cljs.spec.gen.alpha.for_all_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null), function(g) {
    return function(p1__6097_SHARP_) {
      return cljs.spec.alpha.call_valid_QMARK_.call(null, f, specs, p1__6097_SHARP_);
    };
  }(g));
  var ret = cljs.spec.gen.alpha.quick_check.call(null, iters, prop);
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "smallest", "smallest", -152623883)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "shrunk", "shrunk", -2041664412)).cljs$core$IFn$_invoke$arity$1(ret));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var vec__6098 = temp__5718__auto__;
    var smallest = cljs.core.nth.call(null, vec__6098, 0, null);
    return smallest;
  } else {
    return f;
  }
};
cljs.spec.alpha.fspec_impl = function cljs$spec$alpha$fspec_impl(argspec, aform, retspec, rform, fnspec, fform, gfn) {
  var specs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "args", "args", 1315556576), argspec, new cljs.core.Keyword(null, "ret", "ret", -468222814), retspec, new cljs.core.Keyword(null, "fn", "fn", -1175266204), fnspec], null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha6101 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha6101 = function(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, meta6102) {
      this.argspec = argspec;
      this.aform = aform;
      this.retspec = retspec;
      this.rform = rform;
      this.fnspec = fnspec;
      this.fform = fform;
      this.gfn = gfn;
      this.specs = specs;
      this.meta6102 = meta6102;
      this.cljs$lang$protocol_mask$partition0$ = 393472;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(specs) {
      return function(_6103, meta6102__$1) {
        var self__ = this;
        var _6103__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha6101(self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, self__.gfn, self__.specs, meta6102__$1);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$core$IMeta$_meta$arity$1 = function(specs) {
      return function(_6103) {
        var self__ = this;
        var _6103__$1 = this;
        return self__.meta6102;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$core$ILookup$_lookup$arity$2 = function(specs) {
      return function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return cljs.core.get.call(null, self__.specs, k);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$core$ILookup$_lookup$arity$3 = function(specs) {
      return function(_, k, not_found) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.get.call(null, self__.specs, k, not_found);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(specs) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(specs) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(specs) {
      return function(_, f) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.ifn_QMARK_.call(null, f)) {
          if (f === cljs.spec.alpha.validate_fn.call(null, f, self__.specs, cljs.spec.alpha._STAR_fspec_iterations_STAR_)) {
            return f;
          } else {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
        } else {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(specs) {
      return function(_, f) {
        var self__ = this;
        var ___$1 = this;
        return f;
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(specs) {
      return function(_, path, via, in$, f) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.ifn_QMARK_.call(null, f)) {
          var args = cljs.spec.alpha.validate_fn.call(null, f, self__.specs, 100);
          if (f === args) {
            return null;
          } else {
            var ret = function() {
              try {
                return cljs.core.apply.call(null, f, args);
              } catch (e6104) {
                if (e6104 instanceof Error) {
                  var t = e6104;
                  return t;
                } else {
                  throw e6104;
                }
              }
            }();
            if (ret instanceof Error) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.list(new cljs.core.Symbol(null, "apply", "apply", -1334050276, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null)), new cljs.core.Keyword(null, "val", "val", 128701612), args, new cljs.core.Keyword(null, "reason", 
              "reason", -2070751759), ret.message, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null)], null);
            } else {
              var cret = cljs.spec.alpha.dt.call(null, self__.retspec, ret, self__.rform);
              if (cljs.spec.alpha.invalid_QMARK_.call(null, cret)) {
                return cljs.spec.alpha.explain_1.call(null, self__.rform, self__.retspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "ret", "ret", -468222814)), via, in$, ret);
              } else {
                if (cljs.core.truth_(self__.fnspec)) {
                  var cargs = cljs.spec.alpha.conform.call(null, self__.argspec, args);
                  return cljs.spec.alpha.explain_1.call(null, self__.fform, self__.fnspec, cljs.core.conj.call(null, path, new cljs.core.Keyword(null, "fn", "fn", -1175266204)), via, in$, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), cargs, new cljs.core.Keyword(null, "ret", "ret", -468222814), cret], null));
                } else {
                  return null;
                }
              }
            }
          }
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Keyword(null, "val", "val", 128701612), f, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], 
          null)], null);
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(specs) {
      return function(_, overrides, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.gen.alpha.return$.call(null, function(___$3, specs) {
            return function() {
              var G__6113__delegate = function(args) {
                if (cljs.spec.alpha.pvalid_QMARK_.call(null, self__.argspec, args)) {
                } else {
                  throw new Error(["Assert failed: ", function() {
                    var sb__4661__auto__ = new goog.string.StringBuffer;
                    var _STAR_print_newline_STAR__orig_val__6109_6114 = cljs.core._STAR_print_newline_STAR_;
                    var _STAR_print_fn_STAR__orig_val__6110_6115 = cljs.core._STAR_print_fn_STAR_;
                    var _STAR_print_newline_STAR__temp_val__6111_6116 = true;
                    var _STAR_print_fn_STAR__temp_val__6112_6117 = function(_STAR_print_newline_STAR__orig_val__6109_6114, _STAR_print_fn_STAR__orig_val__6110_6115, _STAR_print_newline_STAR__temp_val__6111_6116, sb__4661__auto__, ___$3, specs) {
                      return function(x__4662__auto__) {
                        return sb__4661__auto__.append(x__4662__auto__);
                      };
                    }(_STAR_print_newline_STAR__orig_val__6109_6114, _STAR_print_fn_STAR__orig_val__6110_6115, _STAR_print_newline_STAR__temp_val__6111_6116, sb__4661__auto__, ___$3, specs);
                    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__6111_6116;
                    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__6112_6117;
                    try {
                      cljs.spec.alpha.explain.call(null, self__.argspec, args);
                    } finally {
                      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__6110_6115;
                      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__6109_6114;
                    }
                    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
                  }(), "\n", "(pvalid? argspec args)"].join(""));
                }
                return cljs.spec.gen.alpha.generate.call(null, cljs.spec.alpha.gen.call(null, self__.retspec, overrides));
              };
              var G__6113 = function(var_args) {
                var args = null;
                if (arguments.length > 0) {
                  var G__6118__i = 0, G__6118__a = new Array(arguments.length - 0);
                  while (G__6118__i < G__6118__a.length) {
                    G__6118__a[G__6118__i] = arguments[G__6118__i + 0];
                    ++G__6118__i;
                  }
                  args = new cljs.core.IndexedSeq(G__6118__a, 0, null);
                }
                return G__6113__delegate.call(this, args);
              };
              G__6113.cljs$lang$maxFixedArity = 0;
              G__6113.cljs$lang$applyTo = function(arglist__6119) {
                var args = cljs.core.seq(arglist__6119);
                return G__6113__delegate(args);
              };
              G__6113.cljs$core$IFn$_invoke$arity$variadic = G__6113__delegate;
              return G__6113;
            }();
          }(___$3, specs));
        }
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(specs) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.fspec_impl.call(null, self__.argspec, self__.aform, self__.retspec, self__.rform, self__.fnspec, self__.fform, gfn__$1);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(specs) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "args", "args", 1315556576), null, 1, null), new cljs.core.List(null, self__.aform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "ret", "ret", -468222814), null, 1, null), new cljs.core.List(null, 
        self__.rform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, 1, null), new cljs.core.List(null, self__.fform, null, 1, null))));
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.getBasis = function(specs) {
      return function() {
        return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "argspec", "argspec", -1207762746, null), new cljs.core.Symbol(null, "aform", "aform", 531303525, null), new cljs.core.Symbol(null, "retspec", "retspec", -920025354, null), new cljs.core.Symbol(null, "rform", "rform", -1420499912, null), new cljs.core.Symbol(null, "fnspec", "fnspec", -1865712406, null), new cljs.core.Symbol(null, "fform", "fform", -176049972, null), new cljs.core.Symbol(null, 
        "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "meta6102", "meta6102", 1271679763, null)], null);
      };
    }(specs);
    cljs.spec.alpha.t_cljs$spec$alpha6101.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha6101.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha6101";
    cljs.spec.alpha.t_cljs$spec$alpha6101.cljs$lang$ctorPrWriter = function(specs) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha6101");
      };
    }(specs);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha6101 = function(specs) {
      return function cljs$spec$alpha$fspec_impl_$___GT_t_cljs$spec$alpha6101(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta6102) {
        return new cljs.spec.alpha.t_cljs$spec$alpha6101(argspec__$1, aform__$1, retspec__$1, rform__$1, fnspec__$1, fform__$1, gfn__$1, specs__$1, meta6102);
      };
    }(specs);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha6101(argspec, aform, retspec, rform, fnspec, fform, gfn, specs, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.def_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "kvs-\x3emap", "cljs.spec.alpha/kvs-\x3emap", 579713455), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__6120#", "p1__6120#", -2044133243, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "p1__6120#", "p1__6120#", -2044133243, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "p1__6120#", 
"p1__6120#", -2044133243, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__6121#", "p1__6121#", -1623323488, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, 
cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), 
new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)), new cljs.core.Symbol(null, "p1__6121#", "p1__6121#", -1623323488, null)))), cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", 
-950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "%", "%", -950237169, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 
552625740), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 
552625740), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), function(p1__6120_SHARP_) {
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), p1__6120_SHARP_), cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), p1__6120_SHARP_));
}, null, true, function(p1__6121_SHARP_) {
  return cljs.core.map.call(null, function(p__6122) {
    var vec__6123 = p__6122;
    var k = cljs.core.nth.call(null, vec__6123, 0, null);
    var v = cljs.core.nth.call(null, vec__6123, 1, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), k, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), v], null);
  }, p1__6121_SHARP_);
}));
cljs.spec.alpha.nonconforming = function cljs$spec$alpha$nonconforming(spec) {
  var spec__$1 = new cljs.core.Delay(function() {
    return cljs.spec.alpha.specize.call(null, spec);
  }, null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha6126 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha6126 = function(spec, meta6127) {
      this.spec = spec;
      this.meta6127 = meta6127;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(spec__$1) {
      return function(_6128, meta6127__$1) {
        var self__ = this;
        var _6128__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha6126(self__.spec, meta6127__$1);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$core$IMeta$_meta$arity$1 = function(spec__$1) {
      return function(_6128) {
        var self__ = this;
        var _6128__$1 = this;
        return self__.meta6127;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(spec__$1) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(spec__$1) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(spec__$1) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        var ret = cljs.spec.alpha.conform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
        if (cljs.spec.alpha.invalid_QMARK_.call(null, ret)) {
          return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
        } else {
          return x;
        }
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(spec__$1) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.unform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(spec__$1) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.explain_STAR_.call(null, cljs.core.deref.call(null, self__.spec), path, via, in$, x);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(spec__$1) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.gen_STAR_.call(null, cljs.core.deref.call(null, self__.spec), overrides, path, rmap);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(spec__$1) {
      return function(_, gfn) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.nonconforming.call(null, cljs.spec.alpha.with_gen_STAR_.call(null, cljs.core.deref.call(null, self__.spec), gfn));
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(spec__$1) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nonconforming", "cljs.spec.alpha/nonconforming", -1009218508, null), null, 1, null), new cljs.core.List(null, cljs.spec.alpha.describe_STAR_.call(null, cljs.core.deref.call(null, self__.spec)), null, 1, null))));
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.getBasis = function(spec__$1) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta6127", "meta6127", 1348547862, null)], null);
      };
    }(spec__$1);
    cljs.spec.alpha.t_cljs$spec$alpha6126.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha6126.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha6126";
    cljs.spec.alpha.t_cljs$spec$alpha6126.cljs$lang$ctorPrWriter = function(spec__$1) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha6126");
      };
    }(spec__$1);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha6126 = function(spec__$1) {
      return function cljs$spec$alpha$nonconforming_$___GT_t_cljs$spec$alpha6126(spec__$2, meta6127) {
        return new cljs.spec.alpha.t_cljs$spec$alpha6126(spec__$2, meta6127);
      };
    }(spec__$1);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha6126(spec__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.nilable_impl = function cljs$spec$alpha$nilable_impl(form, pred, gfn) {
  var spec = new cljs.core.Delay(function() {
    return cljs.spec.alpha.specize.call(null, pred, form);
  }, null);
  if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha.t_cljs$spec$alpha6129 !== "undefined") {
  } else {
    cljs.spec.alpha.t_cljs$spec$alpha6129 = function(form, pred, gfn, spec, meta6130) {
      this.form = form;
      this.pred = pred;
      this.gfn = gfn;
      this.spec = spec;
      this.meta6130 = meta6130;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(spec) {
      return function(_6131, meta6130__$1) {
        var self__ = this;
        var _6131__$1 = this;
        return new cljs.spec.alpha.t_cljs$spec$alpha6129(self__.form, self__.pred, self__.gfn, self__.spec, meta6130__$1);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$core$IMeta$_meta$arity$1 = function(spec) {
      return function(_6131) {
        var self__ = this;
        var _6131__$1 = this;
        return self__.meta6130;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(spec) {
      return function(s) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(spec) {
      return function(s, _) {
        var self__ = this;
        var s__$1 = this;
        return s__$1;
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(spec) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (x == null) {
          return null;
        } else {
          return cljs.spec.alpha.conform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(spec) {
      return function(_, x) {
        var self__ = this;
        var ___$1 = this;
        if (x == null) {
          return null;
        } else {
          return cljs.spec.alpha.unform_STAR_.call(null, cljs.core.deref.call(null, self__.spec), x);
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(spec) {
      return function(_, path, via, in$, x) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.spec.alpha.pvalid_QMARK_.call(null, cljs.core.deref.call(null, self__.spec), x) || x == null) {
          return null;
        } else {
          return cljs.core.conj.call(null, cljs.spec.alpha.explain_1.call(null, self__.form, self__.pred, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), via, in$, x), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)), new cljs.core.Keyword(null, "pred", "pred", 1927423397), 
          new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Keyword(null, "val", "val", 128701612), x, new cljs.core.Keyword(null, "via", "via", -1904457336), via, new cljs.core.Keyword(null, "in", "in", -1531184865), in$], null));
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(spec) {
      return function(_, overrides, path, rmap) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core.truth_(self__.gfn)) {
          return self__.gfn.call(null);
        } else {
          return cljs.spec.gen.alpha.frequency.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(___$1, spec) {
            return function() {
              return cljs.spec.gen.alpha.return$.call(null, null);
            };
          }(___$1, spec), null))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(___$1, spec) {
            return function() {
              return cljs.spec.alpha.gensub.call(null, self__.pred, overrides, cljs.core.conj.call(null, path, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), rmap, self__.form);
            };
          }(___$1, spec), null))], null)], null));
        }
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(spec) {
      return function(_, gfn__$1) {
        var self__ = this;
        var ___$1 = this;
        return cljs.spec.alpha.nilable_impl.call(null, self__.form, self__.pred, gfn__$1);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(spec) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nilable", "cljs.spec.alpha/nilable", 1628308748, null), null, 1, null), new cljs.core.List(null, self__.form, null, 1, null))));
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.getBasis = function(spec) {
      return function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta6130", "meta6130", 649186193, null)], null);
      };
    }(spec);
    cljs.spec.alpha.t_cljs$spec$alpha6129.cljs$lang$type = true;
    cljs.spec.alpha.t_cljs$spec$alpha6129.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha6129";
    cljs.spec.alpha.t_cljs$spec$alpha6129.cljs$lang$ctorPrWriter = function(spec) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.spec.alpha/t_cljs$spec$alpha6129");
      };
    }(spec);
    cljs.spec.alpha.__GT_t_cljs$spec$alpha6129 = function(spec) {
      return function cljs$spec$alpha$nilable_impl_$___GT_t_cljs$spec$alpha6129(form__$1, pred__$1, gfn__$1, spec__$1, meta6130) {
        return new cljs.spec.alpha.t_cljs$spec$alpha6129(form__$1, pred__$1, gfn__$1, spec__$1, meta6130);
      };
    }(spec);
  }
  return new cljs.spec.alpha.t_cljs$spec$alpha6129(form, pred, gfn, spec, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.exercise = function cljs$spec$alpha$exercise(var_args) {
  var G__6134 = arguments.length;
  switch(G__6134) {
    case 1:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1 = function(spec) {
  return cljs.spec.alpha.exercise.call(null, spec, 10);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2 = function(spec, n) {
  return cljs.spec.alpha.exercise.call(null, spec, n, null);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3 = function(spec, n, overrides) {
  return cljs.core.map.call(null, function(p1__6132_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__6132_SHARP_, cljs.spec.alpha.conform.call(null, spec, p1__6132_SHARP_)], null);
  }, cljs.spec.gen.alpha.sample.call(null, cljs.spec.alpha.gen.call(null, spec, overrides), n));
};
cljs.spec.alpha.exercise.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.inst_in_range_QMARK_ = function cljs$spec$alpha$inst_in_range_QMARK_(start, end, inst) {
  var and__4120__auto__ = cljs.core.inst_QMARK_.call(null, inst);
  if (and__4120__auto__) {
    var t = cljs.core.inst_ms.call(null, inst);
    return cljs.core.inst_ms.call(null, start) <= t && t < cljs.core.inst_ms.call(null, end);
  } else {
    return and__4120__auto__;
  }
};
cljs.spec.alpha.int_in_range_QMARK_ = function cljs$spec$alpha$int_in_range_QMARK_(start, end, val) {
  if (cljs.core.integer_QMARK_.call(null, val)) {
    return start <= val && val < end;
  } else {
    if (val instanceof goog.math.Long) {
      var and__4120__auto__ = start.lessThanOrEqual(val);
      if (cljs.core.truth_(and__4120__auto__)) {
        return val.lessThan(end);
      } else {
        return and__4120__auto__;
      }
    } else {
      if (val instanceof goog.math.Integer) {
        var and__4120__auto__ = start.lessThanOrEqual(val);
        if (cljs.core.truth_(and__4120__auto__)) {
          return val.lessThan(end);
        } else {
          return and__4120__auto__;
        }
      } else {
        return false;
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha._STAR_compile_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_compile_asserts_STAR_ = true;
}
if (typeof cljs !== "undefined" && typeof cljs.spec !== "undefined" && typeof cljs.spec.alpha !== "undefined" && typeof cljs.spec.alpha._STAR_runtime_asserts_STAR_ !== "undefined") {
} else {
  cljs.spec.alpha._STAR_runtime_asserts_STAR_ = false;
}
cljs.spec.alpha.check_asserts_QMARK_ = function cljs$spec$alpha$check_asserts_QMARK_() {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_;
};
cljs.spec.alpha.check_asserts = function cljs$spec$alpha$check_asserts(flag) {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_ = flag;
};
cljs.spec.alpha.assert_STAR_ = function cljs$spec$alpha$assert_STAR_(spec, x) {
  if (cljs.spec.alpha.valid_QMARK_.call(null, spec, x)) {
    return x;
  } else {
    var ed = cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, spec, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, x), new cljs.core.Keyword("cljs.spec.alpha", "failure", "cljs.spec.alpha/failure", 188258592), new cljs.core.Keyword(null, "assertion-failed", "assertion-failed", -970534477)));
    throw new Error(["Spec assertion failed\n", function() {
      var sb__4661__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR__orig_val__6140_6144 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR__orig_val__6141_6145 = cljs.core._STAR_print_fn_STAR_;
      var _STAR_print_newline_STAR__temp_val__6142_6146 = true;
      var _STAR_print_fn_STAR__temp_val__6143_6147 = function(_STAR_print_newline_STAR__orig_val__6140_6144, _STAR_print_fn_STAR__orig_val__6141_6145, _STAR_print_newline_STAR__temp_val__6142_6146, sb__4661__auto__, ed) {
        return function(x__4662__auto__) {
          return sb__4661__auto__.append(x__4662__auto__);
        };
      }(_STAR_print_newline_STAR__orig_val__6140_6144, _STAR_print_fn_STAR__orig_val__6141_6145, _STAR_print_newline_STAR__temp_val__6142_6146, sb__4661__auto__, ed);
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__6142_6146;
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__6143_6147;
      try {
        cljs.spec.alpha.explain_out.call(null, ed);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__6141_6145;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__6140_6144;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
    }()].join(""));
  }
};
goog.provide("cljs.repl");
goog.require("cljs.core");
goog.require("cljs.spec.alpha");
goog.require("goog.string");
goog.require("goog.string.format");
cljs.repl.print_doc = function cljs$repl$print_doc(p__6150) {
  var map__6151 = p__6150;
  var map__6151__$1 = (!(map__6151 == null) ? map__6151.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6151.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6151) : map__6151;
  var m = map__6151__$1;
  var n = cljs.core.get.call(null, map__6151__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var nm = cljs.core.get.call(null, map__6151__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  cljs.core.println.call(null, "-------------------------");
  cljs.core.println.call(null, function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "spec", "spec", 347520401)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return [function() {
        var temp__5720__auto__ = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__5720__auto__)) {
          var ns = temp__5720__auto__;
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/"].join("");
        } else {
          return null;
        }
      }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join("");
    }
  }());
  if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Protocol");
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m))) {
    var seq__6153_6185 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(m));
    var chunk__6154_6186 = null;
    var count__6155_6187 = 0;
    var i__6156_6188 = 0;
    while (true) {
      if (i__6156_6188 < count__6155_6187) {
        var f_6189 = cljs.core._nth.call(null, chunk__6154_6186, i__6156_6188);
        cljs.core.println.call(null, "  ", f_6189);
        var G__6190 = seq__6153_6185;
        var G__6191 = chunk__6154_6186;
        var G__6192 = count__6155_6187;
        var G__6193 = i__6156_6188 + 1;
        seq__6153_6185 = G__6190;
        chunk__6154_6186 = G__6191;
        count__6155_6187 = G__6192;
        i__6156_6188 = G__6193;
        continue;
      } else {
        var temp__5720__auto___6194 = cljs.core.seq.call(null, seq__6153_6185);
        if (temp__5720__auto___6194) {
          var seq__6153_6195__$1 = temp__5720__auto___6194;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6153_6195__$1)) {
            var c__4550__auto___6196 = cljs.core.chunk_first.call(null, seq__6153_6195__$1);
            var G__6197 = cljs.core.chunk_rest.call(null, seq__6153_6195__$1);
            var G__6198 = c__4550__auto___6196;
            var G__6199 = cljs.core.count.call(null, c__4550__auto___6196);
            var G__6200 = 0;
            seq__6153_6185 = G__6197;
            chunk__6154_6186 = G__6198;
            count__6155_6187 = G__6199;
            i__6156_6188 = G__6200;
            continue;
          } else {
            var f_6201 = cljs.core.first.call(null, seq__6153_6195__$1);
            cljs.core.println.call(null, "  ", f_6201);
            var G__6202 = cljs.core.next.call(null, seq__6153_6195__$1);
            var G__6203 = null;
            var G__6204 = 0;
            var G__6205 = 0;
            seq__6153_6185 = G__6202;
            chunk__6154_6186 = G__6203;
            count__6155_6187 = G__6204;
            i__6156_6188 = G__6205;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m))) {
      var arglists_6206 = (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return (new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m);
        }
      }())) {
        cljs.core.prn.call(null, arglists_6206);
      } else {
        cljs.core.prn.call(null, cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, arglists_6206)) ? cljs.core.second.call(null, arglists_6206) : arglists_6206);
      }
    } else {
    }
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "special-form", "special-form", -1326536374)).cljs$core$IFn$_invoke$arity$1(m))) {
    cljs.core.println.call(null, "Special Form");
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.contains_QMARK_.call(null, m, new cljs.core.Keyword(null, "url", "url", 276297046))) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))) {
        return cljs.core.println.call(null, ["\n  Please see http://clojure.org/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
      } else {
        return null;
      }
    } else {
      return cljs.core.println.call(null, ["\n  Please see http://clojure.org/special_forms#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m))].join(""));
    }
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "Macro");
    } else {
    }
    if (cljs.core.truth_((new cljs.core.Keyword(null, "spec", "spec", 347520401)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "Spec");
    } else {
    }
    if (cljs.core.truth_((new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(m))) {
      cljs.core.println.call(null, "REPL Special Function");
    } else {
    }
    cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(m));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(m))) {
      var seq__6157_6207 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(m));
      var chunk__6158_6208 = null;
      var count__6159_6209 = 0;
      var i__6160_6210 = 0;
      while (true) {
        if (i__6160_6210 < count__6159_6209) {
          var vec__6171_6211 = cljs.core._nth.call(null, chunk__6158_6208, i__6160_6210);
          var name_6212 = cljs.core.nth.call(null, vec__6171_6211, 0, null);
          var map__6174_6213 = cljs.core.nth.call(null, vec__6171_6211, 1, null);
          var map__6174_6214__$1 = (!(map__6174_6213 == null) ? map__6174_6213.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6174_6213.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6174_6213) : map__6174_6213;
          var doc_6215 = cljs.core.get.call(null, map__6174_6214__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
          var arglists_6216 = cljs.core.get.call(null, map__6174_6214__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
          cljs.core.println.call(null);
          cljs.core.println.call(null, " ", name_6212);
          cljs.core.println.call(null, " ", arglists_6216);
          if (cljs.core.truth_(doc_6215)) {
            cljs.core.println.call(null, " ", doc_6215);
          } else {
          }
          var G__6217 = seq__6157_6207;
          var G__6218 = chunk__6158_6208;
          var G__6219 = count__6159_6209;
          var G__6220 = i__6160_6210 + 1;
          seq__6157_6207 = G__6217;
          chunk__6158_6208 = G__6218;
          count__6159_6209 = G__6219;
          i__6160_6210 = G__6220;
          continue;
        } else {
          var temp__5720__auto___6221 = cljs.core.seq.call(null, seq__6157_6207);
          if (temp__5720__auto___6221) {
            var seq__6157_6222__$1 = temp__5720__auto___6221;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6157_6222__$1)) {
              var c__4550__auto___6223 = cljs.core.chunk_first.call(null, seq__6157_6222__$1);
              var G__6224 = cljs.core.chunk_rest.call(null, seq__6157_6222__$1);
              var G__6225 = c__4550__auto___6223;
              var G__6226 = cljs.core.count.call(null, c__4550__auto___6223);
              var G__6227 = 0;
              seq__6157_6207 = G__6224;
              chunk__6158_6208 = G__6225;
              count__6159_6209 = G__6226;
              i__6160_6210 = G__6227;
              continue;
            } else {
              var vec__6176_6228 = cljs.core.first.call(null, seq__6157_6222__$1);
              var name_6229 = cljs.core.nth.call(null, vec__6176_6228, 0, null);
              var map__6179_6230 = cljs.core.nth.call(null, vec__6176_6228, 1, null);
              var map__6179_6231__$1 = (!(map__6179_6230 == null) ? map__6179_6230.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6179_6230.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6179_6230) : map__6179_6230;
              var doc_6232 = cljs.core.get.call(null, map__6179_6231__$1, new cljs.core.Keyword(null, "doc", "doc", 1913296891));
              var arglists_6233 = cljs.core.get.call(null, map__6179_6231__$1, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
              cljs.core.println.call(null);
              cljs.core.println.call(null, " ", name_6229);
              cljs.core.println.call(null, " ", arglists_6233);
              if (cljs.core.truth_(doc_6232)) {
                cljs.core.println.call(null, " ", doc_6232);
              } else {
              }
              var G__6234 = cljs.core.next.call(null, seq__6157_6222__$1);
              var G__6235 = null;
              var G__6236 = 0;
              var G__6237 = 0;
              seq__6157_6207 = G__6234;
              chunk__6158_6208 = G__6235;
              count__6159_6209 = G__6236;
              i__6160_6210 = G__6237;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    if (cljs.core.truth_(n)) {
      var temp__5720__auto__ = cljs.spec.alpha.get_spec.call(null, cljs.core.symbol.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name.call(null, n)), cljs.core.name.call(null, nm)));
      if (cljs.core.truth_(temp__5720__auto__)) {
        var fnspec = temp__5720__auto__;
        cljs.core.print.call(null, "Spec");
        var seq__6181 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "args", "args", 1315556576), new cljs.core.Keyword(null, "ret", "ret", -468222814), new cljs.core.Keyword(null, "fn", "fn", -1175266204)], null));
        var chunk__6182 = null;
        var count__6183 = 0;
        var i__6184 = 0;
        while (true) {
          if (i__6184 < count__6183) {
            var role = cljs.core._nth.call(null, chunk__6182, i__6184);
            var temp__5720__auto___6238__$1 = cljs.core.get.call(null, fnspec, role);
            if (cljs.core.truth_(temp__5720__auto___6238__$1)) {
              var spec_6239 = temp__5720__auto___6238__$1;
              cljs.core.print.call(null, ["\n ", cljs.core.name.call(null, role), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_6239));
            } else {
            }
            var G__6240 = seq__6181;
            var G__6241 = chunk__6182;
            var G__6242 = count__6183;
            var G__6243 = i__6184 + 1;
            seq__6181 = G__6240;
            chunk__6182 = G__6241;
            count__6183 = G__6242;
            i__6184 = G__6243;
            continue;
          } else {
            var temp__5720__auto____$1 = cljs.core.seq.call(null, seq__6181);
            if (temp__5720__auto____$1) {
              var seq__6181__$1 = temp__5720__auto____$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6181__$1)) {
                var c__4550__auto__ = cljs.core.chunk_first.call(null, seq__6181__$1);
                var G__6244 = cljs.core.chunk_rest.call(null, seq__6181__$1);
                var G__6245 = c__4550__auto__;
                var G__6246 = cljs.core.count.call(null, c__4550__auto__);
                var G__6247 = 0;
                seq__6181 = G__6244;
                chunk__6182 = G__6245;
                count__6183 = G__6246;
                i__6184 = G__6247;
                continue;
              } else {
                var role = cljs.core.first.call(null, seq__6181__$1);
                var temp__5720__auto___6248__$2 = cljs.core.get.call(null, fnspec, role);
                if (cljs.core.truth_(temp__5720__auto___6248__$2)) {
                  var spec_6249 = temp__5720__auto___6248__$2;
                  cljs.core.print.call(null, ["\n ", cljs.core.name.call(null, role), ":"].join(""), cljs.spec.alpha.describe.call(null, spec_6249));
                } else {
                }
                var G__6250 = cljs.core.next.call(null, seq__6181__$1);
                var G__6251 = null;
                var G__6252 = 0;
                var G__6253 = 0;
                seq__6181 = G__6250;
                chunk__6182 = G__6251;
                count__6183 = G__6252;
                i__6184 = G__6253;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.repl.Error__GT_map = function cljs$repl$Error__GT_map(o) {
  var base = function(t) {
    return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), t instanceof cljs.core.ExceptionInfo ? new cljs.core.Symbol(null, "ExceptionInfo", "ExceptionInfo", 294935087, null) : t instanceof EvalError ? new cljs.core.Symbol("js", "EvalError", "js/EvalError", 1793498501, null) : t instanceof RangeError ? new cljs.core.Symbol("js", "RangeError", "js/RangeError", 1703848089, null) : t instanceof ReferenceError ? new cljs.core.Symbol("js", 
    "ReferenceError", "js/ReferenceError", -198403224, null) : t instanceof SyntaxError ? new cljs.core.Symbol("js", "SyntaxError", "js/SyntaxError", -1527651665, null) : t instanceof URIError ? new cljs.core.Symbol("js", "URIError", "js/URIError", 505061350, null) : t instanceof Error ? new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null) : null], null), function() {
      var temp__5720__auto__ = cljs.core.ex_message.call(null, t);
      if (cljs.core.truth_(temp__5720__auto__)) {
        var msg = temp__5720__auto__;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "message", "message", -406056002), msg], null);
      } else {
        return null;
      }
    }(), function() {
      var temp__5720__auto__ = cljs.core.ex_data.call(null, t);
      if (cljs.core.truth_(temp__5720__auto__)) {
        var ed = temp__5720__auto__;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", -232669377), ed], null);
      } else {
        return null;
      }
    }());
  };
  var via = function() {
    var via = cljs.core.PersistentVector.EMPTY;
    var t = o;
    while (true) {
      if (cljs.core.truth_(t)) {
        var G__6254 = cljs.core.conj.call(null, via, t);
        var G__6255 = cljs.core.ex_cause.call(null, t);
        via = G__6254;
        t = G__6255;
        continue;
      } else {
        return via;
      }
      break;
    }
  }();
  var root = cljs.core.peek.call(null, via);
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "via", "via", -1904457336), cljs.core.vec.call(null, cljs.core.map.call(null, base, via)), new cljs.core.Keyword(null, "trace", "trace", -1082747415), null], null), function() {
    var temp__5720__auto__ = cljs.core.ex_message.call(null, root);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var root_msg = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cause", "cause", 231901252), root_msg], null);
    } else {
      return null;
    }
  }(), function() {
    var temp__5720__auto__ = cljs.core.ex_data.call(null, root);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var data = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", -232669377), data], null);
    } else {
      return null;
    }
  }(), function() {
    var temp__5720__auto__ = (new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, o));
    if (cljs.core.truth_(temp__5720__auto__)) {
      var phase = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "phase", "phase", 575722892), phase], null);
    } else {
      return null;
    }
  }());
};
cljs.repl.ex_triage = function cljs$repl$ex_triage(datafied_throwable) {
  var map__6258 = datafied_throwable;
  var map__6258__$1 = (!(map__6258 == null) ? map__6258.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6258.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6258) : map__6258;
  var via = cljs.core.get.call(null, map__6258__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
  var trace = cljs.core.get.call(null, map__6258__$1, new cljs.core.Keyword(null, "trace", "trace", -1082747415));
  var phase = cljs.core.get.call(null, map__6258__$1, new cljs.core.Keyword(null, "phase", "phase", 575722892), new cljs.core.Keyword(null, "execution", "execution", 253283524));
  var map__6259 = cljs.core.last.call(null, via);
  var map__6259__$1 = (!(map__6259 == null) ? map__6259.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6259.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6259) : map__6259;
  var type = cljs.core.get.call(null, map__6259__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var message = cljs.core.get.call(null, map__6259__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  var data = cljs.core.get.call(null, map__6259__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var map__6260 = data;
  var map__6260__$1 = (!(map__6260 == null) ? map__6260.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6260.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6260) : map__6260;
  var problems = cljs.core.get.call(null, map__6260__$1, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814));
  var fn = cljs.core.get.call(null, map__6260__$1, new cljs.core.Keyword("cljs.spec.alpha", "fn", "cljs.spec.alpha/fn", 408600443));
  var caller = cljs.core.get.call(null, map__6260__$1, new cljs.core.Keyword("cljs.spec.test.alpha", "caller", "cljs.spec.test.alpha/caller", -398302390));
  var map__6261 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, via));
  var map__6261__$1 = (!(map__6261 == null) ? map__6261.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6261.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6261) : map__6261;
  var top_data = map__6261__$1;
  var source = cljs.core.get.call(null, map__6261__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397));
  return cljs.core.assoc.call(null, function() {
    var G__6266 = phase;
    var G__6266__$1 = G__6266 instanceof cljs.core.Keyword ? G__6266.fqn : null;
    switch(G__6266__$1) {
      case "read-source":
        var map__6267 = data;
        var map__6267__$1 = (!(map__6267 == null) ? map__6267.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6267.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6267) : map__6267;
        var line = cljs.core.get.call(null, map__6267__$1, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471));
        var column = cljs.core.get.call(null, map__6267__$1, new cljs.core.Keyword("clojure.error", "column", "clojure.error/column", 304721553));
        var G__6269 = cljs.core.merge.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, via)), top_data);
        var G__6269__$1 = cljs.core.truth_(source) ? cljs.core.assoc.call(null, G__6269, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), source) : G__6269;
        var G__6269__$2 = cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, source)) ? cljs.core.dissoc.call(null, G__6269__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397)) : G__6269__$1;
        if (cljs.core.truth_(message)) {
          return cljs.core.assoc.call(null, G__6269__$2, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message);
        } else {
          return G__6269__$2;
        }
        break;
      case "compile-syntax-check":
      case "compilation":
      case "macro-syntax-check":
      case "macroexpansion":
        var G__6270 = top_data;
        var G__6270__$1 = cljs.core.truth_(source) ? cljs.core.assoc.call(null, G__6270, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), source) : G__6270;
        var G__6270__$2 = cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, source)) ? cljs.core.dissoc.call(null, G__6270__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397)) : G__6270__$1;
        var G__6270__$3 = cljs.core.truth_(type) ? cljs.core.assoc.call(null, G__6270__$2, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type) : G__6270__$2;
        var G__6270__$4 = cljs.core.truth_(message) ? cljs.core.assoc.call(null, G__6270__$3, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message) : G__6270__$3;
        if (cljs.core.truth_(problems)) {
          return cljs.core.assoc.call(null, G__6270__$4, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595), data);
        } else {
          return G__6270__$4;
        }
        break;
      case "read-eval-result":
      case "print-eval-result":
        var vec__6271 = cljs.core.first.call(null, trace);
        var source__$1 = cljs.core.nth.call(null, vec__6271, 0, null);
        var method = cljs.core.nth.call(null, vec__6271, 1, null);
        var file = cljs.core.nth.call(null, vec__6271, 2, null);
        var line = cljs.core.nth.call(null, vec__6271, 3, null);
        var G__6274 = top_data;
        var G__6274__$1 = cljs.core.truth_(line) ? cljs.core.assoc.call(null, G__6274, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471), line) : G__6274;
        var G__6274__$2 = cljs.core.truth_(file) ? cljs.core.assoc.call(null, G__6274__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), file) : G__6274__$1;
        var G__6274__$3 = cljs.core.truth_(function() {
          var and__4120__auto__ = source__$1;
          if (cljs.core.truth_(and__4120__auto__)) {
            return method;
          } else {
            return and__4120__auto__;
          }
        }()) ? cljs.core.assoc.call(null, G__6274__$2, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [source__$1, method], null)) : G__6274__$2;
        var G__6274__$4 = cljs.core.truth_(type) ? cljs.core.assoc.call(null, G__6274__$3, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type) : G__6274__$3;
        if (cljs.core.truth_(message)) {
          return cljs.core.assoc.call(null, G__6274__$4, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message);
        } else {
          return G__6274__$4;
        }
        break;
      case "execution":
        var vec__6275 = cljs.core.first.call(null, trace);
        var source__$1 = cljs.core.nth.call(null, vec__6275, 0, null);
        var method = cljs.core.nth.call(null, vec__6275, 1, null);
        var file = cljs.core.nth.call(null, vec__6275, 2, null);
        var line = cljs.core.nth.call(null, vec__6275, 3, null);
        var file__$1 = cljs.core.first.call(null, cljs.core.remove.call(null, function(vec__6275, source__$1, method, file, line, G__6266, G__6266__$1, map__6258, map__6258__$1, via, trace, phase, map__6259, map__6259__$1, type, message, data, map__6260, map__6260__$1, problems, fn, caller, map__6261, map__6261__$1, top_data, source) {
          return function(p1__6257_SHARP_) {
            var or__4131__auto__ = p1__6257_SHARP_ == null;
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["NO_SOURCE_PATH", null, "NO_SOURCE_FILE", null], null), null)).call(null, p1__6257_SHARP_);
            }
          };
        }(vec__6275, source__$1, method, file, line, G__6266, G__6266__$1, map__6258, map__6258__$1, via, trace, phase, map__6259, map__6259__$1, type, message, data, map__6260, map__6260__$1, problems, fn, caller, map__6261, map__6261__$1, top_data, source), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(caller), file], null)));
        var err_line = function() {
          var or__4131__auto__ = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(caller);
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return line;
          }
        }();
        var G__6278 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890), type], null);
        var G__6278__$1 = cljs.core.truth_(err_line) ? cljs.core.assoc.call(null, G__6278, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471), err_line) : G__6278;
        var G__6278__$2 = cljs.core.truth_(message) ? cljs.core.assoc.call(null, G__6278__$1, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742), message) : G__6278__$1;
        var G__6278__$3 = cljs.core.truth_(function() {
          var or__4131__auto__ = fn;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            var and__4120__auto__ = source__$1;
            if (cljs.core.truth_(and__4120__auto__)) {
              return method;
            } else {
              return and__4120__auto__;
            }
          }
        }()) ? cljs.core.assoc.call(null, G__6278__$2, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994), function() {
          var or__4131__auto__ = fn;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [source__$1, method], null);
          }
        }()) : G__6278__$2;
        var G__6278__$4 = cljs.core.truth_(file__$1) ? cljs.core.assoc.call(null, G__6278__$3, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397), file__$1) : G__6278__$3;
        if (cljs.core.truth_(problems)) {
          return cljs.core.assoc.call(null, G__6278__$4, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595), data);
        } else {
          return G__6278__$4;
        }
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6266__$1)].join(""));
    }
  }(), new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358), phase);
};
cljs.repl.ex_str = function cljs$repl$ex_str(p__6282) {
  var map__6283 = p__6282;
  var map__6283__$1 = (!(map__6283 == null) ? map__6283.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6283.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6283) : map__6283;
  var triage_data = map__6283__$1;
  var phase = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "phase", "clojure.error/phase", 275140358));
  var source = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "source", "clojure.error/source", -2011936397));
  var line = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "line", "clojure.error/line", -1816287471));
  var column = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "column", "clojure.error/column", 304721553));
  var symbol = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "symbol", "clojure.error/symbol", 1544821994));
  var class$ = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "class", "clojure.error/class", 278435890));
  var cause = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "cause", "clojure.error/cause", -1879175742));
  var spec = cljs.core.get.call(null, map__6283__$1, new cljs.core.Keyword("clojure.error", "spec", "clojure.error/spec", 2055032595));
  var loc = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var or__4131__auto__ = source;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return "\x3ccljs repl\x3e";
    }
  }()), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var or__4131__auto__ = line;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return 1;
    }
  }()), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : ""].join("");
  var class_name = cljs.core.name.call(null, function() {
    var or__4131__auto__ = class$;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return "";
    }
  }());
  var simple_class = class_name;
  var cause_type = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["RuntimeException", null, "Exception", null], null), null), simple_class) ? "" : [" (", simple_class, ")"].join("");
  var format = goog.string.format;
  var G__6285 = phase;
  var G__6285__$1 = G__6285 instanceof cljs.core.Keyword ? G__6285.fqn : null;
  switch(G__6285__$1) {
    case "read-source":
      return format.call(null, "Syntax error reading source at (%s).\n%s\n", loc, cause);
      break;
    case "macro-syntax-check":
      return format.call(null, "Syntax error macroexpanding %sat (%s).\n%s", cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cljs.core.truth_(spec) ? function() {
        var sb__4661__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR__orig_val__6286_6295 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR__orig_val__6287_6296 = cljs.core._STAR_print_fn_STAR_;
        var _STAR_print_newline_STAR__temp_val__6288_6297 = true;
        var _STAR_print_fn_STAR__temp_val__6289_6298 = function(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec) {
          return function(x__4662__auto__) {
            return sb__4661__auto__.append(x__4662__auto__);
          };
        }(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec);
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__6288_6297;
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__6289_6298;
        try {
          cljs.spec.alpha.explain_out.call(null, cljs.core.update.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), function(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, _STAR_print_fn_STAR__temp_val__6289_6298, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, 
          line, column, symbol, class$, cause, spec) {
            return function(probs) {
              return cljs.core.map.call(null, function(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, _STAR_print_fn_STAR__temp_val__6289_6298, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec) {
                return function(p1__6280_SHARP_) {
                  return cljs.core.dissoc.call(null, p1__6280_SHARP_, new cljs.core.Keyword(null, "in", "in", -1531184865));
                };
              }(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, _STAR_print_fn_STAR__temp_val__6289_6298, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec), probs);
            };
          }(_STAR_print_newline_STAR__orig_val__6286_6295, _STAR_print_fn_STAR__orig_val__6287_6296, _STAR_print_newline_STAR__temp_val__6288_6297, _STAR_print_fn_STAR__temp_val__6289_6298, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec)));
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__6287_6296;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__6286_6295;
        }
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
      }() : format.call(null, "%s\n", cause));
      break;
    case "macroexpansion":
      return format.call(null, "Unexpected error%s macroexpanding %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "compile-syntax-check":
      return format.call(null, "Syntax error%s compiling %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "compilation":
      return format.call(null, "Unexpected error%s compiling %sat (%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      break;
    case "read-eval-result":
      return format.call(null, "Error reading eval result%s at %s (%s).\n%s\n", cause_type, symbol, loc, cause);
      break;
    case "print-eval-result":
      return format.call(null, "Error printing return value%s at %s (%s).\n%s\n", cause_type, symbol, loc, cause);
      break;
    case "execution":
      if (cljs.core.truth_(spec)) {
        return format.call(null, "Execution error - invalid arguments to %s at (%s).\n%s", symbol, loc, function() {
          var sb__4661__auto__ = new goog.string.StringBuffer;
          var _STAR_print_newline_STAR__orig_val__6290_6299 = cljs.core._STAR_print_newline_STAR_;
          var _STAR_print_fn_STAR__orig_val__6291_6300 = cljs.core._STAR_print_fn_STAR_;
          var _STAR_print_newline_STAR__temp_val__6292_6301 = true;
          var _STAR_print_fn_STAR__temp_val__6293_6302 = function(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec) {
            return function(x__4662__auto__) {
              return sb__4661__auto__.append(x__4662__auto__);
            };
          }(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec);
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__6292_6301;
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__6293_6302;
          try {
            cljs.spec.alpha.explain_out.call(null, cljs.core.update.call(null, spec, new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), function(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, _STAR_print_fn_STAR__temp_val__6293_6302, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, 
            source, line, column, symbol, class$, cause, spec) {
              return function(probs) {
                return cljs.core.map.call(null, function(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, _STAR_print_fn_STAR__temp_val__6293_6302, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec) {
                  return function(p1__6281_SHARP_) {
                    return cljs.core.dissoc.call(null, p1__6281_SHARP_, new cljs.core.Keyword(null, "in", "in", -1531184865));
                  };
                }(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, _STAR_print_fn_STAR__temp_val__6293_6302, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec), probs);
              };
            }(_STAR_print_newline_STAR__orig_val__6290_6299, _STAR_print_fn_STAR__orig_val__6291_6300, _STAR_print_newline_STAR__temp_val__6292_6301, _STAR_print_fn_STAR__temp_val__6293_6302, sb__4661__auto__, G__6285, G__6285__$1, loc, class_name, simple_class, cause_type, format, map__6283, map__6283__$1, triage_data, phase, source, line, column, symbol, class$, cause, spec)));
          } finally {
            cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__6291_6300;
            cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__6290_6299;
          }
          return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4661__auto__);
        }());
      } else {
        return format.call(null, "Execution error%s at %s(%s).\n%s\n", cause_type, cljs.core.truth_(symbol) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol), " "].join("") : "", loc, cause);
      }
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6285__$1)].join(""));
  }
};
cljs.repl.error__GT_str = function cljs$repl$error__GT_str(error) {
  return cljs.repl.ex_str.call(null, cljs.repl.ex_triage.call(null, cljs.repl.Error__GT_map.call(null, error)));
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.json");
goog.require("goog.userAgent.product");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("cljs.repl");
goog.define("clojure.browser.repl.HOST", "localhost");
goog.define("clojure.browser.repl.PORT", 9000);
clojure.browser.repl._STAR_repl_STAR_ = null;
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.parent_connected_QMARK_ = cljs.core.atom.call(null, false);
clojure.browser.repl.print_queue = [];
clojure.browser.repl.flush_print_queue_BANG_ = function clojure$browser$repl$flush_print_queue_BANG_(conn) {
  var seq__6305_6309 = cljs.core.seq.call(null, clojure.browser.repl.print_queue);
  var chunk__6306_6310 = null;
  var count__6307_6311 = 0;
  var i__6308_6312 = 0;
  while (true) {
    if (i__6308_6312 < count__6307_6311) {
      var str_6313 = cljs.core._nth.call(null, chunk__6306_6310, i__6308_6312);
      clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_6313}));
      var G__6314 = seq__6305_6309;
      var G__6315 = chunk__6306_6310;
      var G__6316 = count__6307_6311;
      var G__6317 = i__6308_6312 + 1;
      seq__6305_6309 = G__6314;
      chunk__6306_6310 = G__6315;
      count__6307_6311 = G__6316;
      i__6308_6312 = G__6317;
      continue;
    } else {
      var temp__5720__auto___6318 = cljs.core.seq.call(null, seq__6305_6309);
      if (temp__5720__auto___6318) {
        var seq__6305_6319__$1 = temp__5720__auto___6318;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6305_6319__$1)) {
          var c__4550__auto___6320 = cljs.core.chunk_first.call(null, seq__6305_6319__$1);
          var G__6321 = cljs.core.chunk_rest.call(null, seq__6305_6319__$1);
          var G__6322 = c__4550__auto___6320;
          var G__6323 = cljs.core.count.call(null, c__4550__auto___6320);
          var G__6324 = 0;
          seq__6305_6309 = G__6321;
          chunk__6306_6310 = G__6322;
          count__6307_6311 = G__6323;
          i__6308_6312 = G__6324;
          continue;
        } else {
          var str_6325 = cljs.core.first.call(null, seq__6305_6319__$1);
          clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1299562414), goog.json.serialize({"repl":clojure.browser.repl._STAR_repl_STAR_, "str":str_6325}));
          var G__6326 = cljs.core.next.call(null, seq__6305_6319__$1);
          var G__6327 = null;
          var G__6328 = 0;
          var G__6329 = 0;
          seq__6305_6309 = G__6326;
          chunk__6306_6310 = G__6327;
          count__6307_6311 = G__6328;
          i__6308_6312 = G__6329;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return goog.array.clear(clojure.browser.repl.print_queue);
};
clojure.browser.repl.repl_print = function clojure$browser$repl$repl_print(data) {
  clojure.browser.repl.print_queue.push(cljs.core.pr_str.call(null, data));
  if (cljs.core.truth_(cljs.core.deref.call(null, clojure.browser.repl.parent_connected_QMARK_))) {
    return clojure.browser.repl.flush_print_queue_BANG_.call(null, cljs.core.deref.call(null, clojure.browser.repl.xpc_connection));
  } else {
    return null;
  }
};
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core.set_print_fn_BANG_.call(null, clojure.browser.repl.repl_print);
cljs.core.set_print_err_fn_BANG_.call(null, clojure.browser.repl.repl_print);
clojure.browser.repl.get_ua_product = function clojure$browser$repl$get_ua_product() {
  if (cljs.core.truth_(goog.userAgent.product.SAFARI)) {
    return new cljs.core.Keyword(null, "safari", "safari", 497115653);
  } else {
    if (cljs.core.truth_(goog.userAgent.product.CHROME)) {
      return new cljs.core.Keyword(null, "chrome", "chrome", 1718738387);
    } else {
      if (cljs.core.truth_(goog.userAgent.product.FIREFOX)) {
        return new cljs.core.Keyword(null, "firefox", "firefox", 1283768880);
      } else {
        if (cljs.core.truth_(goog.userAgent.product.IE)) {
          return new cljs.core.Keyword(null, "ie", "ie", 2038473780);
        } else {
          return null;
        }
      }
    }
  }
};
clojure.browser.repl.evaluate_javascript = function clojure$browser$repl$evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(block))], null);
    } catch (e6330) {
      var e = e6330;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.repl.error__GT_str.call(null, e)], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function clojure$browser$repl$send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function clojure$browser$repl$send_print(var_args) {
  var G__6332 = arguments.length;
  switch(G__6332) {
    case 2:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2 = function(url, data) {
  return clojure.browser.repl.send_print.call(null, url, data, 0);
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3 = function(url, data, n) {
  var conn = clojure.browser.net.xhr_connection.call(null);
  clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", -978969032), function(conn) {
    return function(_) {
      if (n < 10) {
        return clojure.browser.repl.send_print.call(null, url, data, n + 1);
      } else {
        return console.log(["Could not send ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(data), " after ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " attempts."].join(""));
      }
    };
  }(conn));
  return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print.cljs$lang$maxFixedArity = 3;
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function clojure$browser$repl$wrap_message(repl, t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "repl", "repl", -35398667), repl, new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "content", "content", 15833224), data, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function clojure$browser$repl$start_evaluator(url) {
  var temp__5718__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var repl_connection = temp__5718__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    var repl_connected_QMARK_ = cljs.core.atom.call(null, false);
    var try_handshake = function(connection, repl_connected_QMARK_, repl_connection, temp__5718__auto__) {
      return function clojure$browser$repl$start_evaluator_$_try_handshake() {
        if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
          return null;
        } else {
          clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), null);
          return setTimeout(clojure$browser$repl$start_evaluator_$_try_handshake, 10);
        }
      };
    }(connection, repl_connected_QMARK_, repl_connection, temp__5718__auto__);
    clojure.browser.net.connect.call(null, repl_connection, try_handshake);
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__) {
      return function(_) {
        if (cljs.core.truth_(cljs.core.deref.call(null, repl_connected_QMARK_))) {
          return null;
        } else {
          cljs.core.reset_BANG_.call(null, repl_connected_QMARK_, true);
          return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
        }
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__));
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 1890645906), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__) {
      return function(json) {
        var obj = goog.json.parse(json);
        var repl = goog.object.get(obj, "repl");
        var result = goog.object.get(obj, "result");
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "result", "result", 1415092211), result));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__));
    return clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1299562414), function(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__) {
      return function(json) {
        var obj = goog.json.parse(json);
        var repl = goog.object.get(obj, "repl");
        var str = goog.object.get(obj, "str");
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, repl, new cljs.core.Keyword(null, "print", "print", 1299562414), str));
      };
    }(connection, repl_connected_QMARK_, try_handshake, repl_connection, temp__5718__auto__));
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.load_queue = null;
clojure.browser.repl.bootstrap = function clojure$browser$repl$bootstrap() {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    goog.require__ = goog.require;
    goog.isProvided_ = function(name) {
      return false;
    };
    goog.constructNamespace_("cljs.user");
    goog.writeScriptTag__ = function(src, opt_sourceText) {
      var loaded = cljs.core.atom.call(null, false);
      var onload = function(loaded) {
        return function() {
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = clojure.browser.repl.load_queue;
            if (cljs.core.truth_(and__4120__auto__)) {
              return cljs.core.deref.call(null, loaded) === false;
            } else {
              return and__4120__auto__;
            }
          }())) {
            cljs.core.swap_BANG_.call(null, loaded, cljs.core.not);
            if (clojure.browser.repl.load_queue.length === 0) {
              return clojure.browser.repl.load_queue = null;
            } else {
              return goog.writeScriptTag__.apply(null, clojure.browser.repl.load_queue.shift());
            }
          } else {
            return null;
          }
        };
      }(loaded);
      return document.body.appendChild(function() {
        var script = document.createElement("script");
        var script__$1 = function() {
          var G__6334 = script;
          goog.object.set(G__6334, "type", "text/javascript");
          goog.object.set(G__6334, "onload", onload);
          goog.object.set(G__6334, "onreadystatechange", onload);
          return G__6334;
        }();
        if (opt_sourceText == null) {
          var G__6335 = script__$1;
          goog.object.set(G__6335, "src", src);
          return G__6335;
        } else {
          var G__6336 = script__$1;
          goog.dom.setTextContext(G__6336, opt_sourceText);
          return G__6336;
        }
      }());
    };
    goog.writeScriptTag_ = function(src, opt_sourceText) {
      if (cljs.core.truth_(clojure.browser.repl.load_queue)) {
        return clojure.browser.repl.load_queue.push([src, opt_sourceText]);
      } else {
        clojure.browser.repl.load_queue = [];
        return goog.writeScriptTag__(src, opt_sourceText);
      }
    };
    if (cljs.core.truth_(goog.debugLoader_)) {
      CLOSURE_IMPORT_SCRIPT = goog.writeScriptTag_;
    } else {
    }
    return goog.require = function(src, reload) {
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = true;
      } else {
      }
      var reload_QMARK_ = function() {
        var or__4131__auto__ = reload;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return goog.cljsReloadAll__;
        }
      }();
      if (cljs.core.truth_(reload_QMARK_)) {
        if (!(goog.debugLoader_ == null)) {
          var path_6337 = goog.debugLoader_.getPathFromDeps_(cljs.core.name);
          goog.object.remove(goog.debugLoader_.written_, path_6337);
          goog.object.remove(goog.debugLoader_.written_, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.basePath), cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_6337)].join(""));
        } else {
          var path_6338 = goog.object.get(goog.dependencies_.nameToPath, src);
          goog.object.remove(goog.dependencies_.visited, path_6338);
          goog.object.remove(goog.dependencies_.written, path_6338);
          goog.object.remove(goog.dependencies_.written, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.basePath), cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_6338)].join(""));
        }
      } else {
      }
      var ret = goog.require__(src);
      if (cljs.core._EQ_.call(null, reload, "reload-all")) {
        goog.cljsReloadAll_ = false;
      } else {
      }
      return ret;
    };
  }
};
clojure.browser.repl.connect = function clojure$browser$repl$connect(repl_server_url) {
  var connected_QMARK_ = cljs.core.atom.call(null, false);
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "start-handshake", "start-handshake", 359692894), function(connected_QMARK_, repl_connection) {
    return function(_) {
      if (cljs.core.truth_(cljs.core.deref.call(null, connected_QMARK_))) {
        return null;
      } else {
        cljs.core.reset_BANG_.call(null, connected_QMARK_, true);
        cljs.core.reset_BANG_.call(null, clojure.browser.repl.parent_connected_QMARK_, true);
        clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "ack-handshake", "ack-handshake", 1651340387), null);
        return clojure.browser.repl.flush_print_queue_BANG_.call(null, repl_connection);
      }
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(connected_QMARK_, repl_connection) {
    return function(json) {
      var obj = goog.json.parse(json);
      var repl = goog.object.get(obj, "repl");
      var form = goog.object.get(obj, "form");
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), goog.json.serialize({"repl":repl, "result":function() {
        var _STAR_repl_STAR__orig_val__6339 = clojure.browser.repl._STAR_repl_STAR_;
        var _STAR_repl_STAR__temp_val__6340 = repl;
        clojure.browser.repl._STAR_repl_STAR_ = _STAR_repl_STAR__temp_val__6340;
        try {
          return clojure.browser.repl.evaluate_javascript.call(null, repl_connection, form);
        } finally {
          clojure.browser.repl._STAR_repl_STAR_ = _STAR_repl_STAR__orig_val__6339;
        }
      }()}));
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(connected_QMARK_, repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(connected_QMARK_, repl_connection));
  clojure.browser.repl.bootstrap.call(null);
  return repl_connection;
};
goog.provide("goog.html.legacyconversions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.html.legacyconversions.safeHtmlFromString = function(html) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, null);
};
goog.html.legacyconversions.safeScriptFromString = function(script) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.legacyconversions.safeStyleFromString = function(style) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.legacyconversions.safeStyleSheetFromString = function(styleSheet) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.legacyconversions.safeUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.trustedResourceUrlFromString = function(url) {
  goog.html.legacyconversions.reportCallback_();
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.reportCallback_ = goog.nullFunction;
goog.html.legacyconversions.setReportCallback = function(callback) {
  goog.html.legacyconversions.reportCallback_ = callback;
};
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.object");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5000;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.scriptLoadingDeferred_;
goog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {
  if (!trustedUris.length) {
    return goog.async.Deferred.succeed(null);
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);
  if (isAnotherModuleLoading) {
    return goog.net.jsloader.scriptLoadingDeferred_;
  }
  trustedUris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var trustedUri = trustedUris.shift();
    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);
    if (trustedUris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
    return deferred;
  };
  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();
  return goog.net.jsloader.scriptLoadingDeferred_;
};
goog.net.jsloader.safeLoad = function(trustedUri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  var properties = options.attributes || {};
  goog.object.extend(properties, {"type":"text/javascript", "charset":"UTF-8"});
  goog.dom.setProperties(script, properties);
  goog.dom.safe.setScriptSrc(script, trustedUri);
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.safeLoadAndVerify = function(trustedUri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.html.legacyconversions");
goog.require("goog.net.jsloader");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5000;
  this.nonce_ = "";
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.getCallbackId_ = function(id) {
  return goog.net.Jsonp.CALLBACKS + "__" + id;
};
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout;
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_;
};
goog.net.Jsonp.prototype.setNonce = function(nonce) {
  this.nonce_ = nonce;
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  var uri = this.uri_.clone();
  if (payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri);
  }
  if (opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[callbackId] = reply;
    uri.setParameterValues(this.callbackParamName_, callbackId);
  }
  var options = {timeout:this.timeout_, cleanupWhenDone:true};
  if (this.nonce_) {
    options.attributes = {"nonce":this.nonce_};
  }
  var deferred = goog.net.jsloader.safeLoad(goog.html.legacyconversions.trustedResourceUrlFromString(uri.toString()), options);
  var error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return {id_:id, deferred_:deferred};
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if (request) {
    if (request.deferred_) {
      request.deferred_.cancel();
    }
    if (request.id_) {
      goog.net.Jsonp.cleanup_(request.id_, false);
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, false);
    if (opt_errorCallback) {
      opt_errorCallback(payload);
    }
  };
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  var handler = function(var_args) {
    goog.net.Jsonp.cleanup_(id, true);
    replyCallback.apply(undefined, arguments);
  };
  return handler;
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  if (goog.global[callbackId]) {
    if (deleteReplyHandler) {
      try {
        delete goog.global[callbackId];
      } catch (e) {
        goog.global[callbackId] = undefined;
      }
    } else {
      goog.global[callbackId] = goog.nullFunction;
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for (var name in payload) {
    if (!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name]);
    }
  }
  return uri;
};
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length <= CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0; i < hexString.length; i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  var out = [], p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        if ((c & 64512) == 55296 && i + 1 < str.length && (str.charCodeAt(i + 1) & 64512) == 56320) {
          c = 65536 + ((c & 1023) << 10) + (str.charCodeAt(++i) & 1023);
          out[p++] = c >> 18 | 240;
          out[p++] = c >> 12 & 63 | 128;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = c & 63 | 128;
        } else {
          out[p++] = c >> 12 | 224;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = c & 63 | 128;
        }
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        if (c1 > 239 && c1 < 365) {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          var c4 = bytes[pos++];
          var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 65536;
          out[c++] = String.fromCharCode(55296 + (u >> 10));
          out[c++] = String.fromCharCode(56320 + (u & 1023));
        } else {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
        }
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0; i < bytes1.length; i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.crypt.base64");
goog.require("goog.asserts");
goog.require("goog.crypt");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.require("goog.userAgent.product");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/\x3d";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || typeof goog.global.btoa == "function";
goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  goog.asserts.assert(goog.isArrayLike(input), "encodeByteArray takes an array as a parameter");
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0; i < input.length; i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_ENCODE_ && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !opt_webSafe) {
    return goog.global.atob(input);
  }
  var output = "";
  function pushByte(b) {
    output += String.fromCharCode(b);
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_ignored) {
  var output = [];
  function pushByte(b) {
    output.push(b);
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToUint8Array = function(input) {
  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
  var output = new Uint8Array(Math.ceil(input.length * 3 / 4));
  var outLen = 0;
  function pushByte(b) {
    output[outLen++] = b;
  }
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output.subarray(0, outLen);
};
goog.crypt.base64.decodeStringInternal_ = function(input, pushByte) {
  goog.crypt.base64.init_();
  var nextCharIndex = 0;
  function getByte(default_val) {
    while (nextCharIndex < input.length) {
      var ch = input.charAt(nextCharIndex++);
      var b = goog.crypt.base64.charToByteMap_[ch];
      if (b != null) {
        return b;
      }
      if (!goog.string.isEmptyOrWhitespace(ch)) {
        throw Error("Unknown base64 encoding at char: " + ch);
      }
    }
    return default_val;
  }
  while (true) {
    var byte1 = getByte(-1);
    var byte2 = getByte(0);
    var byte3 = getByte(64);
    var byte4 = getByte(64);
    if (byte4 === 64) {
      if (byte1 === -1) {
        return;
      }
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    pushByte(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      pushByte(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        pushByte(outByte3);
      }
    }
  }
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    for (var i = 0; i < goog.crypt.base64.ENCODED_VALS.length; i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {
        goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
      }
    }
  }
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$.call(null, x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k2092, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__2096 = k2092;
  var G__2096__$1 = G__2096 instanceof cljs.core.Keyword ? G__2096.fqn : null;
  switch(G__2096__$1) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2092, else__4388__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.call(null, function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__2097) {
      var vec__2098 = p__2097;
      var k__4408__auto__ = cljs.core.nth.call(null, vec__2098, 0, null);
      var v__4409__auto__ = cljs.core.nth.call(null, vec__2098, 1, null);
      return f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4400__auto__, pr_pair__4402__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__4401__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2091) {
  var self__ = this;
  var G__2091__$1 = this;
  return new cljs.core.RecordIter(0, G__2091__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function(h__4243__auto__, this__4381__auto____$1) {
      return function(coll__4382__auto__) {
        return -209062840 ^ cljs.core.hash_unordered_coll.call(null, coll__4382__auto__);
      };
    }(h__4243__auto__, this__4381__auto____$1).call(null, this__4381__auto____$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2093, other2094) {
  var self__ = this;
  var this2093__$1 = this;
  return !(other2094 == null) && this2093__$1.constructor === other2094.constructor && cljs.core._EQ_.call(null, this2093__$1.splicing_QMARK_, other2094.splicing_QMARK_) && cljs.core._EQ_.call(null, this2093__$1.form, other2094.form) && cljs.core._EQ_.call(null, this2093__$1.__extmap, other2094.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__2091) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__2101 = cljs.core.keyword_identical_QMARK_;
  var expr__2102 = k__4393__auto__;
  if (cljs.core.truth_(pred__2101.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), expr__2102))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__2091, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2101.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), expr__2102))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__2091, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4393__auto__, G__2091), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form, null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__2091) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__2091, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4391__auto__, 0), cljs.core._nth.call(null, entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.tools.reader.impl.utils/ReaderConditional", null, 1, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__2095) {
  var extmap__4424__auto__ = function() {
    var G__2104 = cljs.core.dissoc.call(null, G__2095, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471));
    if (cljs.core.record_QMARK_.call(null, G__2095)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2104);
    } else {
      return G__2104;
    }
  }();
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(G__2095), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(G__2095), null, cljs.core.not_empty.call(null, extmap__4424__auto__), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write.call(null, writer, ["#?", cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([f, true]);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
cljs.tools.reader.impl.utils.namespace_keys = function cljs$tools$reader$impl$utils$namespace_keys(ns, keys) {
  var iter__4523__auto__ = function cljs$tools$reader$impl$utils$namespace_keys_$_iter__2106(s__2107) {
    return new cljs.core.LazySeq(null, function() {
      var s__2107__$1 = s__2107;
      while (true) {
        var temp__5720__auto__ = cljs.core.seq.call(null, s__2107__$1);
        if (temp__5720__auto__) {
          var s__2107__$2 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__2107__$2)) {
            var c__4521__auto__ = cljs.core.chunk_first.call(null, s__2107__$2);
            var size__4522__auto__ = cljs.core.count.call(null, c__4521__auto__);
            var b__2109 = cljs.core.chunk_buffer.call(null, size__4522__auto__);
            if (function() {
              var i__2108 = 0;
              while (true) {
                if (i__2108 < size__4522__auto__) {
                  var key = cljs.core._nth.call(null, c__4521__auto__, i__2108);
                  cljs.core.chunk_append.call(null, b__2109, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
                    var vec__2110 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
                    var key_ns = cljs.core.nth.call(null, vec__2110, 0, null);
                    var key_name = cljs.core.nth.call(null, vec__2110, 1, null);
                    var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
                    if (key_ns == null) {
                      return __GT_key.call(null, ns, key_name);
                    } else {
                      if (cljs.core._EQ_.call(null, "_", key_ns)) {
                        return __GT_key.call(null, key_name);
                      } else {
                        return key;
                      }
                    }
                  }() : key);
                  var G__2116 = i__2108 + 1;
                  i__2108 = G__2116;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2109), cljs$tools$reader$impl$utils$namespace_keys_$_iter__2106.call(null, cljs.core.chunk_rest.call(null, s__2107__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2109), null);
            }
          } else {
            var key = cljs.core.first.call(null, s__2107__$2);
            return cljs.core.cons.call(null, key instanceof cljs.core.Symbol || key instanceof cljs.core.Keyword ? function() {
              var vec__2113 = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, key);
              var key_ns = cljs.core.nth.call(null, vec__2113, 0, null);
              var key_name = cljs.core.nth.call(null, vec__2113, 1, null);
              var __GT_key = key instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
              if (key_ns == null) {
                return __GT_key.call(null, ns, key_name);
              } else {
                if (cljs.core._EQ_.call(null, "_", key_ns)) {
                  return __GT_key.call(null, key_name);
                } else {
                  return key;
                }
              }
            }() : key, cljs$tools$reader$impl$utils$namespace_keys_$_iter__2106.call(null, cljs.core.rest.call(null, s__2107__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4523__auto__.call(null, keys);
};
cljs.tools.reader.impl.utils.second_SINGLEQUOTE_ = function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__2117) {
  var vec__2118 = p__2117;
  var a = cljs.core.nth.call(null, vec__2118, 0, null);
  var b = cljs.core.nth.call(null, vec__2118, 1, null);
  if (cljs.core.truth_(a)) {
    return null;
  } else {
    return b;
  }
};
cljs.tools.reader.impl.utils.char_code = function cljs$tools$reader$impl$utils$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader, ch);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__4433__auto__ = reader == null ? null : reader;
    var m__4434__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, reader);
    } else {
      var m__4431__auto__ = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$.call(null, c);
  } else {
    var c = cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1));
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$.call(null, c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.readable.read(1));
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$.call(null, self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if ("\f" === c || "\n" === c) {
      cljs.tools.reader.reader_types.read_char.call(null, rdr);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__5720__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var ch = temp__5720__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta.call(null, obj);
  return cljs.core.with_meta.call(null, obj, cljs.core.merge.call(null, m, cljs.core.dissoc.call(null, orig_meta, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames)), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var buffer = temp__5720__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var buffer = temp__5720__auto__;
    return buffer.set(cljs.core.subs.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(buffer), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__5720__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var ch = temp__5720__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count.call(null, s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader(var_args) {
  var G__2125 = arguments.length;
  switch(G__2125) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, s), cljs.core.object_array.call(null, buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args) {
  var G__2128 = arguments.length;
  switch(G__2128) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args) {
  var G__2131 = arguments.length;
  switch(G__2131) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, c)) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(s);
    } else {
      var G__2133 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      var G__2134 = s.append(c);
      c = G__2133;
      s = G__2134;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) {
    return 1 === cljs.tools.reader.reader_types.get_column_number.call(null, rdr);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader.frames));
  try {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, buffer.getLength());
    var ret = f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta.call(null, ret, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, reader.frames))], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.inspect");
goog.require("cljs.core");
cljs.tools.reader.impl.inspect.inspect_STAR__col = function cljs$tools$reader$impl$inspect$inspect_STAR__col(truncate, col, start, end) {
  var n = cljs.core.count.call(null, col);
  var l = cljs.core.truth_(truncate) ? 0 : function() {
    var x__4222__auto__ = 10;
    var y__4223__auto__ = n;
    return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
  }();
  var elements = cljs.core.map.call(null, cljs.core.partial.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, true), cljs.core.take.call(null, l, col));
  var content = cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", elements));
  var suffix = l < n ? "..." : null;
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(start), cljs.core.str.cljs$core$IFn$_invoke$arity$1(content), suffix, cljs.core.str.cljs$core$IFn$_invoke$arity$1(end)].join("");
};
cljs.tools.reader.impl.inspect.dispatch_inspect = function cljs$tools$reader$impl$inspect$dispatch_inspect(_, x) {
  if (x == null) {
    return new cljs.core.Keyword(null, "nil", "nil", 99600501);
  } else {
    if (typeof x === "string") {
      return new cljs.core.Keyword(null, "string", "string", -1989541586);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
      } else {
        if (typeof x === "number") {
          return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
        } else {
          if (x instanceof cljs.core.Symbol) {
            return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
          } else {
            if (cljs.core.vector_QMARK_.call(null, x)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.list_QMARK_.call(null, x)) {
                return new cljs.core.Keyword(null, "list", "list", 765357683);
              } else {
                if (cljs.core.map_QMARK_.call(null, x)) {
                  return new cljs.core.Keyword(null, "map", "map", 1371690461);
                } else {
                  if (cljs.core.set_QMARK_.call(null, x)) {
                    return new cljs.core.Keyword(null, "set", "set", 304602554);
                  } else {
                    if (cljs.core._EQ_.call(null, x, true)) {
                      return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
                    } else {
                      if (cljs.core._EQ_.call(null, x, false)) {
                        return new cljs.core.Keyword(null, "strable", "strable", 1877668047);
                      } else {
                        return cljs.core.type.call(null, x);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.tools !== "undefined" && typeof cljs.tools.reader !== "undefined" && typeof cljs.tools.reader.impl !== "undefined" && typeof cljs.tools.reader.impl.inspect !== "undefined" && typeof cljs.tools.reader.impl.inspect.inspect_STAR_ !== "undefined") {
} else {
  cljs.tools.reader.impl.inspect.inspect_STAR_ = function() {
    var method_table__4613__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.tools.reader.impl.inspect", "inspect*"), cljs.tools.reader.impl.inspect.dispatch_inspect, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "string", "string", -1989541586), function(truncate, x) {
  var n = cljs.core.truth_(truncate) ? 5 : 20;
  var suffix = x.length > n ? '..."' : '"';
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.substring(0, function() {
    var x__4222__auto__ = n;
    var y__4223__auto__ = x.length;
    return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
  }())), suffix].join("");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "strable", "strable", 1877668047), function(truncate, x) {
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.IndexedSeq, function(truncate, x) {
  return "\x3cindexed seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.PersistentArrayMapSeq, function(truncate, x) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.NodeSeq, function(truncate, x) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.Cons, function(truncate, x) {
  return "\x3ccons\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.LazySeq, function(truncate, x) {
  return "\x3clazy seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "nil", "nil", 99600501), function(_, ___$1) {
  return "nil";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "list", "list", 765357683), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "(", ")");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "map", "map", 1371690461), function(truncate, m) {
  var len = cljs.core.count.call(null, m);
  var n_shown = cljs.core.truth_(truncate) ? 0 : len;
  var contents = cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, n_shown, m));
  var suffix = len > n_shown ? "...}" : "}";
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, contents, "{", suffix);
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "set", "set", 304602554), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "#{", "}");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "vector", "vector", 1902966158), function(truncate, col) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, truncate, col, "[", "]");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(truncate, x) {
  return cljs.core.pr_str.call(null, cljs.core.type.call(null, x));
});
cljs.tools.reader.impl.inspect.inspect = function cljs$tools$reader$impl$inspect$inspect(var_args) {
  var G__2139 = arguments.length;
  switch(G__2139) {
    case 1:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, false, x);
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2 = function(truncate, x) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, truncate, x);
};
cljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.tools.reader.impl.errors");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("clojure.string");
goog.require("cljs.tools.reader.impl.inspect");
cljs.tools.reader.impl.errors.ex_details = function cljs$tools$reader$impl$errors$ex_details(rdr, ex_type) {
  var details = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), new cljs.core.Keyword(null, "ex-kind", "ex-kind", 1581199296), ex_type], null);
  if (cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) {
    return cljs.core.assoc.call(null, details, new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, rdr), new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, rdr), new cljs.core.Keyword(null, "col", "col", -1959363084), cljs.tools.reader.reader_types.get_column_number.call(null, rdr));
  } else {
    return details;
  }
};
cljs.tools.reader.impl.errors.throw_ex = function cljs$tools$reader$impl$errors$throw_ex(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2146 = arguments.length;
  var i__4731__auto___2147 = 0;
  while (true) {
    if (i__4731__auto___2147 < len__4730__auto___2146) {
      args__4736__auto__.push(arguments[i__4731__auto___2147]);
      var G__2148 = i__4731__auto___2147 + 1;
      i__4731__auto___2147 = G__2148;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic = function(rdr, ex_type, msg) {
  var details = cljs.tools.reader.impl.errors.ex_details.call(null, rdr, ex_type);
  var file = (new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(details);
  var line = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(details);
  var col = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(details);
  var msg1 = cljs.core.truth_(file) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), " "].join("") : null;
  var msg2 = cljs.core.truth_(line) ? ["[line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), ", col ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(col), "]"].join("") : null;
  var msg3 = cljs.core.truth_(function() {
    var or__4131__auto__ = msg1;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return msg2;
    }
  }()) ? " " : null;
  var full_msg = cljs.core.apply.call(null, cljs.core.str, msg1, msg2, msg3, msg);
  throw cljs.core.ex_info.call(null, full_msg, details);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$applyTo = function(seq2143) {
  var G__2144 = cljs.core.first.call(null, seq2143);
  var seq2143__$1 = cljs.core.next.call(null, seq2143);
  var G__2145 = cljs.core.first.call(null, seq2143__$1);
  var seq2143__$2 = cljs.core.next.call(null, seq2143__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2144, G__2145, seq2143__$2);
};
cljs.tools.reader.impl.errors.reader_error = function cljs$tools$reader$impl$errors$reader_error(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2151 = arguments.length;
  var i__4731__auto___2152 = 0;
  while (true) {
    if (i__4731__auto___2152 < len__4730__auto___2151) {
      args__4736__auto__.push(arguments[i__4731__auto___2152]);
      var G__2153 = i__4731__auto___2152 + 1;
      i__4731__auto___2152 = G__2153;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "reader-error", "reader-error", 1610253121), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.reader_error.cljs$lang$applyTo = function(seq2149) {
  var G__2150 = cljs.core.first.call(null, seq2149);
  var seq2149__$1 = cljs.core.next.call(null, seq2149);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2150, seq2149__$1);
};
cljs.tools.reader.impl.errors.illegal_arg_error = function cljs$tools$reader$impl$errors$illegal_arg_error(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2156 = arguments.length;
  var i__4731__auto___2157 = 0;
  while (true) {
    if (i__4731__auto___2157 < len__4730__auto___2156) {
      args__4736__auto__.push(arguments[i__4731__auto___2157]);
      var G__2158 = i__4731__auto___2157 + 1;
      i__4731__auto___2157 = G__2158;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$applyTo = function(seq2154) {
  var G__2155 = cljs.core.first.call(null, seq2154);
  var seq2154__$1 = cljs.core.next.call(null, seq2154);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2155, seq2154__$1);
};
cljs.tools.reader.impl.errors.eof_error = function cljs$tools$reader$impl$errors$eof_error(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2161 = arguments.length;
  var i__4731__auto___2162 = 0;
  while (true) {
    if (i__4731__auto___2162 < len__4730__auto___2161) {
      args__4736__auto__.push(arguments[i__4731__auto___2162]);
      var G__2163 = i__4731__auto___2162 + 1;
      i__4731__auto___2162 = G__2163;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msgs) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, rdr, new cljs.core.Keyword(null, "eof", "eof", -489063237), cljs.core.apply.call(null, cljs.core.str, msgs));
};
cljs.tools.reader.impl.errors.eof_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.eof_error.cljs$lang$applyTo = function(seq2159) {
  var G__2160 = cljs.core.first.call(null, seq2159);
  var seq2159__$1 = cljs.core.next.call(null, seq2159);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2160, seq2159__$1);
};
cljs.tools.reader.impl.errors.throw_eof_delimited = function cljs$tools$reader$impl$errors$throw_eof_delimited(var_args) {
  var G__2165 = arguments.length;
  switch(G__2165) {
    case 4:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4 = function(rdr, kind, column, line) {
  return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, line, column, null);
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5 = function(rdr, kind, line, column, n) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading ", cljs.core.truth_(n) ? ["item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " of "].join("") : null, cljs.core.name.call(null, kind), cljs.core.truth_(line) ? [", starting at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), " and column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ".");
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.impl.errors.throw_odd_map = function cljs$tools$reader$impl$errors$throw_odd_map(rdr, line, col, elements) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "The map literal starting with ", cljs.tools.reader.impl.inspect.inspect.call(null, cljs.core.first.call(null, elements)), cljs.core.truth_(line) ? [" on line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), " column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)].join("") : null, " contains ", cljs.core.count.call(null, elements), " form(s). Map literals must contain an even number of forms.");
};
cljs.tools.reader.impl.errors.throw_invalid_number = function cljs$tools$reader$impl$errors$throw_invalid_number(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid number: ", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_literal = function cljs$tools$reader$impl$errors$throw_invalid_unicode_literal(rdr, token) {
  throw cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid unicode literal: \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_escape = function cljs$tools$reader$impl$errors$throw_invalid_unicode_escape(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch, ".");
};
cljs.tools.reader.impl.errors.throw_invalid = function cljs$tools$reader$impl$errors$throw_invalid(rdr, kind, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid ", cljs.core.name.call(null, kind), ": ", token, ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_start = function cljs$tools$reader$impl$errors$throw_eof_at_start(rdr, kind) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading start of ", cljs.core.name.call(null, kind), ".");
};
cljs.tools.reader.impl.errors.throw_bad_char = function cljs$tools$reader$impl$errors$throw_bad_char(rdr, kind, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid character: ", ch, " found while reading ", cljs.core.name.call(null, kind), ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_dispatch = function cljs$tools$reader$impl$errors$throw_eof_at_dispatch(rdr) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading dispatch character.");
};
cljs.tools.reader.impl.errors.throw_bad_dispatch = function cljs$tools$reader$impl$errors$throw_bad_dispatch(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "No dispatch macro for ", ch, ".");
};
cljs.tools.reader.impl.errors.throw_unmatch_delimiter = function cljs$tools$reader$impl$errors$throw_unmatch_delimiter(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unmatched delimiter ", ch, ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading = function cljs$tools$reader$impl$errors$throw_eof_reading(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2171 = arguments.length;
  var i__4731__auto___2172 = 0;
  while (true) {
    if (i__4731__auto___2172 < len__4730__auto___2171) {
      args__4736__auto__.push(arguments[i__4731__auto___2172]);
      var G__2173 = i__4731__auto___2172 + 1;
      i__4731__auto___2172 = G__2173;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic = function(rdr, kind, start) {
  var init = function() {
    var G__2170 = kind;
    var G__2170__$1 = G__2170 instanceof cljs.core.Keyword ? G__2170.fqn : null;
    switch(G__2170__$1) {
      case "regex":
        return '#"';
        break;
      case "string":
        return '"';
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2170__$1)].join(""));
    }
  }();
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF reading ", cljs.core.name.call(null, kind), " starting ", cljs.core.apply.call(null, cljs.core.str, init, start), ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$applyTo = function(seq2167) {
  var G__2168 = cljs.core.first.call(null, seq2167);
  var seq2167__$1 = cljs.core.next.call(null, seq2167);
  var G__2169 = cljs.core.first.call(null, seq2167__$1);
  var seq2167__$2 = cljs.core.next.call(null, seq2167__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2168, G__2169, seq2167__$2);
};
cljs.tools.reader.impl.errors.throw_no_dispatch = function cljs$tools$reader$impl$errors$throw_no_dispatch(rdr, ch) {
  return cljs.tools.reader.impl.errors.throw_bad_dispatch.call(null, rdr, ch);
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_char = function cljs$tools$reader$impl$errors$throw_invalid_unicode_char(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid unicode character \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token = function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit_in_token(rdr, ch, token) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid digit ", ch, " in unicode character \\", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit = function cljs$tools$reader$impl$errors$throw_invalid_unicode_digit(rdr, ch) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid digit ", ch, " in unicode character.");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_len = function cljs$tools$reader$impl$errors$throw_invalid_unicode_len(rdr, actual, expected) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, rdr, "Invalid unicode literal. Unicode literals should be ", expected, "characters long.  ", "value suppled is ", actual, "characters long.");
};
cljs.tools.reader.impl.errors.throw_invalid_character_literal = function cljs$tools$reader$impl$errors$throw_invalid_character_literal(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid character literal \\u", token, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_octal_len = function cljs$tools$reader$impl$errors$throw_invalid_octal_len(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid octal escape sequence in a character literal:", token, ". Octal escape sequences must be 3 or fewer digits.");
};
cljs.tools.reader.impl.errors.throw_bad_octal_number = function cljs$tools$reader$impl$errors$throw_bad_octal_number(rdr) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377].");
};
cljs.tools.reader.impl.errors.throw_unsupported_character = function cljs$tools$reader$impl$errors$throw_unsupported_character(rdr, token) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unsupported character: ", token, ".");
};
cljs.tools.reader.impl.errors.throw_eof_in_character = function cljs$tools$reader$impl$errors$throw_eof_in_character(rdr) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "Unexpected EOF while reading character.");
};
cljs.tools.reader.impl.errors.throw_bad_escape_char = function cljs$tools$reader$impl$errors$throw_bad_escape_char(rdr, ch) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Unsupported escape character: \\", ch, ".");
};
cljs.tools.reader.impl.errors.throw_single_colon = function cljs$tools$reader$impl$errors$throw_single_colon(rdr) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "A single colon is not a valid keyword.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata = function cljs$tools$reader$impl$errors$throw_bad_metadata(rdr, x) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Metadata cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, x), ". Metadata must be a Symbol, Keyword, String or Map.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata_target = function cljs$tools$reader$impl$errors$throw_bad_metadata_target(rdr, target) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Metadata can not be applied to ", cljs.tools.reader.impl.inspect.inspect.call(null, target), ". ", "Metadata can only be applied to IMetas.");
};
cljs.tools.reader.impl.errors.throw_feature_not_keyword = function cljs$tools$reader$impl$errors$throw_feature_not_keyword(rdr, feature) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, feature), " Features must be keywords.");
};
cljs.tools.reader.impl.errors.throw_ns_map_no_map = function cljs$tools$reader$impl$errors$throw_ns_map_no_map(rdr, ns_name) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Namespaced map with namespace ", ns_name, " does not specify a map.");
};
cljs.tools.reader.impl.errors.throw_bad_ns = function cljs$tools$reader$impl$errors$throw_bad_ns(rdr, ns_name) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid value used as namespace in namespaced map: ", ns_name, ".");
};
cljs.tools.reader.impl.errors.throw_bad_reader_tag = function cljs$tools$reader$impl$errors$throw_bad_reader_tag(rdr, tag) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Invalid reader tag: ", cljs.tools.reader.impl.inspect.inspect.call(null, tag), ". Reader tags must be symbols.");
};
cljs.tools.reader.impl.errors.throw_unknown_reader_tag = function cljs$tools$reader$impl$errors$throw_unknown_reader_tag(rdr, tag) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "No reader function for tag ", cljs.tools.reader.impl.inspect.inspect.call(null, tag), ".");
};
cljs.tools.reader.impl.errors.duplicate_keys_error = function cljs$tools$reader$impl$errors$duplicate_keys_error(msg, coll) {
  var duplicates = function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates(seq) {
    var iter__4523__auto__ = function cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2185(s__2186) {
      return new cljs.core.LazySeq(null, function() {
        var s__2186__$1 = s__2186;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq.call(null, s__2186__$1);
          if (temp__5720__auto__) {
            var s__2186__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2186__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first.call(null, s__2186__$2);
              var size__4522__auto__ = cljs.core.count.call(null, c__4521__auto__);
              var b__2188 = cljs.core.chunk_buffer.call(null, size__4522__auto__);
              if (function() {
                var i__2187 = 0;
                while (true) {
                  if (i__2187 < size__4522__auto__) {
                    var vec__2189 = cljs.core._nth.call(null, c__4521__auto__, i__2187);
                    var id = cljs.core.nth.call(null, vec__2189, 0, null);
                    var freq = cljs.core.nth.call(null, vec__2189, 1, null);
                    if (freq > 1) {
                      cljs.core.chunk_append.call(null, b__2188, id);
                      var G__2195 = i__2187 + 1;
                      i__2187 = G__2195;
                      continue;
                    } else {
                      var G__2196 = i__2187 + 1;
                      i__2187 = G__2196;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2188), cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2185.call(null, cljs.core.chunk_rest.call(null, s__2186__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2188), null);
              }
            } else {
              var vec__2192 = cljs.core.first.call(null, s__2186__$2);
              var id = cljs.core.nth.call(null, vec__2192, 0, null);
              var freq = cljs.core.nth.call(null, vec__2192, 1, null);
              if (freq > 1) {
                return cljs.core.cons.call(null, id, cljs$tools$reader$impl$errors$duplicate_keys_error_$_duplicates_$_iter__2185.call(null, cljs.core.rest.call(null, s__2186__$2)));
              } else {
                var G__2197 = cljs.core.rest.call(null, s__2186__$2);
                s__2186__$1 = G__2197;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__.call(null, cljs.core.frequencies.call(null, seq));
  };
  var dups = duplicates.call(null, coll);
  return cljs.core.apply.call(null, cljs.core.str, msg, cljs.core.count.call(null, dups) > 1 ? "s" : null, ": ", cljs.core.interpose.call(null, ", ", dups));
};
cljs.tools.reader.impl.errors.throw_dup_keys = function cljs$tools$reader$impl$errors$throw_dup_keys(rdr, kind, ks) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, cljs.tools.reader.impl.errors.duplicate_keys_error.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.capitalize.call(null, cljs.core.name.call(null, kind))), " literal contains duplicate key"].join(""), ks));
};
cljs.tools.reader.impl.errors.throw_eof_error = function cljs$tools$reader$impl$errors$throw_eof_error(rdr, line) {
  if (cljs.core.truth_(line)) {
    return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "EOF while reading, starting at line ", line, ".");
  } else {
    return cljs.tools.reader.impl.errors.eof_error.call(null, rdr, "EOF while reading.");
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.errors");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (pred.call(null, ch)) {
      var G__2200 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      ch = G__2200;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, reader))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, s));
  if (!(m.call(null, 2) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === m.call(null, 1);
    var a = !(m.call(null, 3) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 3), 10], null) : !(m.call(null, 4) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 4), 16], null) : !(m.call(null, 5) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 5), 8], null) : !(m.call(null, 7) == null) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 7), parseInt(m.call(null, 6))], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.call(null, 0);
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, a.call(null, 1));
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      if (cljs.core.truth_(isNaN(bn__$1))) {
        return null;
      } else {
        return bn__$1;
      }
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.call(null, 1);
  var denominator = m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, numerator)) ? cljs.core.subs.call(null, numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, s));
  if (!(m.call(null, 4) == null)) {
    return parseFloat(m.call(null, 1));
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__2201 = cljs.core.re_find.call(null, pattern, s);
  var match = cljs.core.nth.call(null, vec__2201, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int.call(null, s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float.call(null, s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.call(null, token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count.call(null, token)) {
        return null;
      } else {
        var sym = cljs.core.subs.call(null, token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2206 = arguments.length;
  var i__4731__auto___2207 = 0;
  while (true) {
    if (i__4731__auto___2207 < len__4730__auto___2206) {
      args__4736__auto__.push(arguments[i__4731__auto___2207]);
      var G__2208 = i__4731__auto___2207 + 1;
      i__4731__auto___2207 = G__2208;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq2204) {
  var G__2205 = cljs.core.first.call(null, seq2204);
  var seq2204__$1 = cljs.core.next.call(null, seq2204);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2205, seq2204__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__2209__delegate = function(rdr, _) {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, msg);
    };
    var G__2209 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__2210__i = 0, G__2210__a = new Array(arguments.length - 1);
        while (G__2210__i < G__2210__a.length) {
          G__2210__a[G__2210__i] = arguments[G__2210__i + 1];
          ++G__2210__i;
        }
        _ = new cljs.core.IndexedSeq(G__2210__a, 0, null);
      }
      return G__2209__delegate.call(this, rdr, _);
    };
    G__2209.cljs$lang$maxFixedArity = 1;
    G__2209.cljs$lang$applyTo = function(arglist__2211) {
      var rdr = cljs.core.first(arglist__2211);
      var _ = cljs.core.rest(arglist__2211);
      return G__2209__delegate(rdr, _);
    };
    G__2209.cljs$core$IFn$_invoke$arity$variadic = G__2209__delegate;
    return G__2209;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader.impl.errors");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__2229 = ch;
  switch(G__2229) {
    case '"':
    case ";":
    case "@":
    case "^":
    case "`":
    case "~":
    case "(":
    case ")":
    case "[":
    case "]":
    case "{":
    case "}":
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, kind, initch) {
  if (initch == null) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, rdr, kind);
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
        if (ch == null) {
        } else {
          cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__2231 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch = G__2231;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__5718__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ch = temp__5718__auto__;
    var temp__5718__auto____$1 = cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__5718__auto____$1)) {
      var dm = temp__5718__auto____$1;
      return dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      return cljs.tools.reader.read_tagged.call(null, function() {
        var G__2232 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__2232, ch);
        return G__2232;
      }(), ch, opts, pending_forms);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, rdr);
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, rdr, ch);
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "regex", "regex", 939488856), sb);
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_2233__$2 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (ch_2233__$2 == null) {
            cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "regex", "regex", 939488856), sb);
          } else {
          }
          sb.append(ch_2233__$2);
        } else {
        }
        var G__2234 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch__$1 = G__2234;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char(var_args) {
  var G__2236 = arguments.length;
  switch(G__2236) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, token);
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.impl.utils.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, token, i), token);
      } else {
        var G__2238 = i + 1;
        var G__2239 = d + uc * base;
        i = G__2238;
        uc = G__2239;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.impl.utils.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, initch);
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__4131__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__4131__auto__) {
            return or__4131__auto__;
          } else {
            var or__4131__auto____$1 = cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__4131__auto____$1)) {
              return or__4131__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, rdr, i, length);
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.impl.utils.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, ch);
          } else {
            var G__2240 = i + 1;
            var G__2241 = d + uc * base;
            i = G__2240;
            uc = G__2241;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "퟿".charCodeAt(0);
cljs.tools.reader.lower_limit = "".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "character", "character", 380652989), ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.call(null, token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.call(null, token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.call(null, token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.call(null, token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.call(null, token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.call(null, token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, rdr, ic.toString(16));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, rdr, token);
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.call(null, token, offset, len, base);
                        if (!cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, token, offset), base)) {
                          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, rdr, token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null);
  } else {
    return null;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.tools !== "undefined" && typeof cljs.tools.reader !== "undefined" && typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs !== "undefined" && typeof cljs.tools !== "undefined" && typeof cljs.tools.reader !== "undefined" && typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(kind, delim, rdr, opts, pending_forms) {
  var vec__2242 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2242, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2242, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, start_line, start_column, cljs.core.count.call(null, a));
      } else {
        var G__2245 = cljs.core.conj_BANG_.call(null, a, form);
        a = G__2245;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(kind, delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR__orig_val__2246 = cljs.tools.reader._STAR_read_delim_STAR_;
  var _STAR_read_delim_STAR__temp_val__2247 = true;
  cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR__temp_val__2247;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, kind, delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR__orig_val__2246;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__2248 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2248, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2248, 1, null);
  var the_list = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", rdr, opts, pending_forms);
  var vec__2251 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__2251, 0, null);
  var end_column = cljs.core.nth.call(null, vec__2251, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, the_list) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__5720__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var file = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__2254 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2254, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2254, 1, null);
  var the_vector = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", rdr, opts, pending_forms);
  var vec__2257 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__2257, 0, null);
  var end_column = cljs.core.nth.call(null, vec__2257, 1, null);
  return cljs.core.with_meta.call(null, the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__5720__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var file = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__2260 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2260, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2260, 1, null);
  var the_map = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", rdr, opts, pending_forms);
  var map_count = cljs.core.count.call(null, the_map);
  var ks = cljs.core.take_nth.call(null, 2, the_map);
  var key_set = cljs.core.set.call(null, ks);
  var vec__2263 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__2263, 0, null);
  var end_column = cljs.core.nth.call(null, vec__2263, 1, null);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, start_line, start_column, the_map);
  } else {
  }
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, key_set), cljs.core.count.call(null, ks))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "map", "map", 1371690461), ks);
  }
  return cljs.core.with_meta.call(null, map_count <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, the_map), true, true) : cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, the_map), true), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__5720__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var file = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__2266 = new goog.string.StringBuffer;
    G__2266.append(initch);
    return G__2266;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__4131__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.tools.reader.impl.errors.throw_invalid_number.call(null, rdr, s);
      }
    } else {
      var G__2268 = function() {
        var G__2267 = sb;
        G__2267.append(ch);
        return G__2267;
      }();
      var G__2269 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__2268;
      ch = G__2269;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__2270 = ch;
  switch(G__2270) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, rdr, ch__$1);
      } else {
        return cljs.tools.reader.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 255) {
          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, rdr, ch);
      }
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, reader, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', sb);
    } else {
      var G__2272 = ch;
      switch(G__2272) {
        case "\\":
          var G__2276 = function() {
            var G__2273 = sb;
            G__2273.append(cljs.tools.reader.escape_char.call(null, sb, reader));
            return G__2273;
          }();
          var G__2277 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__2276;
          ch = G__2277;
          continue;
          break;
        case '"':
          return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
          break;
        default:
          var G__2278 = function() {
            var G__2274 = sb;
            G__2274.append(ch);
            return G__2274;
          }();
          var G__2279 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__2278;
          ch = G__2279;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    var vec__2280 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
    var end_line = cljs.core.nth.call(null, vec__2280, 0, null);
    var end_column = cljs.core.nth.call(null, vec__2280, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null);
    return cljs.core.merge.call(null, filem, lcm);
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__2283 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var line = cljs.core.nth.call(null, vec__2283, 0, null);
  var column = cljs.core.nth.call(null, vec__2283, 1, null);
  var token = cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), initch);
  if (token == null) {
    return null;
  } else {
    var G__2286 = token;
    switch(G__2286) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.call(null, cljs.core._nth.call(null, p, 0), cljs.core._nth.call(null, p, 1));
          return cljs.core._with_meta.call(null, sym, cljs.tools.reader.loc_info.call(null, rdr, line, column));
        } else {
          return cljs.tools.reader.impl.errors.throw_invalid.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), token);
        }
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_alias = function cljs$tools$reader$resolve_alias(sym) {
  return cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, sym);
};
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  var or__4131__auto__ = cljs.tools.reader.resolve_alias.call(null, sym);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var temp__5720__auto__ = cljs.core.find_ns.call(null, sym);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var ns = temp__5720__auto__;
      return cljs.core.symbol.call(null, cljs.core.ns_name.call(null, ns));
    } else {
      return null;
    }
  }
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.read_token.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (!(s == null)) {
      var ns = cljs.core._nth.call(null, s, 0);
      var name = cljs.core._nth.call(null, s, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var temp__5718__auto__ = cljs.tools.reader.resolve_alias.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, ns, 1)));
          if (cljs.core.truth_(temp__5718__auto__)) {
            var ns__$1 = temp__5718__auto__;
            return cljs.core.keyword.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), name);
          } else {
            return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""));
          }
        } else {
          var temp__5718__auto__ = cljs.core._STAR_ns_STAR_;
          if (cljs.core.truth_(temp__5718__auto__)) {
            var ns__$1 = temp__5718__auto__;
            return cljs.core.keyword.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), cljs.core.subs.call(null, name, 1));
          } else {
            return cljs.tools.reader.impl.errors.reader_error.call(null, reader, "Invalid token: :", token);
          }
        }
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join(""));
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, reader);
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    return new cljs.core.List(null, sym, new cljs.core.List(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms), null, 1, null), 2, null);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, rdr, function() {
      var vec__2288 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
      var line = cljs.core.nth.call(null, vec__2288, 0, null);
      var column = cljs.core.nth.call(null, vec__2288, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_.call(null, m)) {
      } else {
        cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
      }
      var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__4120__auto__ = line;
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.seq_QMARK_.call(null, o);
          } else {
            return and__4120__auto__;
          }
        }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
        } else {
          return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
      }
    });
  } else {
    var vec__2293 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
    var line = cljs.core.nth.call(null, vec__2293, 0, null);
    var column = cljs.core.nth.call(null, vec__2293, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_.call(null, m)) {
    } else {
      cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
    }
    var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__4120__auto__ = line;
        if (cljs.core.truth_(and__4120__auto__)) {
          return cljs.core.seq_QMARK_.call(null, o);
        } else {
          return and__4120__auto__;
        }
      }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
      } else {
        return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__2298 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2298, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2298, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var coll = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", rdr, opts, pending_forms);
  var the_set = cljs.core.set.call(null, coll);
  var vec__2301 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__2301, 0, null);
  var end_column = cljs.core.nth.call(null, vec__2301, 1, null);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), cljs.core.count.call(null, the_set))) {
  } else {
    cljs.tools.reader.impl.errors.reader_error.call(null, rdr, cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "set", "set", 304602554), coll));
  }
  return cljs.core.with_meta.call(null, the_set, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__5720__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var file = temp__5720__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column__$1, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__2304 = rdr;
  cljs.tools.reader.read_STAR_.call(null, G__2304, true, null, opts, pending_forms);
  return G__2304;
};
cljs.tools.reader.read_symbolic_value = function cljs$tools$reader$read_symbolic_value(rdr, _, opts, pending_forms) {
  var sym = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  var G__2305 = sym;
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), G__2305)) {
    return Number.NaN;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), G__2305)) {
      return Number.NEGATIVE_INFINITY;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), G__2305)) {
        return Number.POSITIVE_INFINITY;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
      }
    }
  }
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), feature) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "features", "features", -1146962336)), feature);
  } else {
    return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature should be a keyword: ", feature);
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    return cljs.tools.reader.impl.errors.throw_eof_error.call(null, rdr, function() {
      var and__4120__auto__ = first_line < 0;
      if (and__4120__auto__) {
        return first_line;
      } else {
        return and__4120__auto__;
      }
    }());
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Feature name ", form, " is reserved");
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "read-cond requires an even number of forms");
    } else {
      return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "read-cond starting on line ", first_line, " requires an even number of forms");
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR__orig_val__2306 = cljs.tools.reader._STAR_suppress_read_STAR_;
  var _STAR_suppress_read_STAR__temp_val__2307 = true;
  cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR__temp_val__2307;
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error.call(null, form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR__orig_val__2306;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.tools !== "undefined" && typeof cljs.tools.reader !== "undefined" && typeof cljs.tools.reader.NO_MATCH !== "undefined") {
} else {
  cljs.tools.reader.NO_MATCH = new Object;
}
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error.call(null, feature, rdr, first_line);
  if (cljs.core._EQ_.call(null, feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features.call(null, rdr, feature);
    if (cljs.tools.reader.has_feature_QMARK_.call(null, rdr, feature, opts)) {
      var G__2308 = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error.call(null, G__2308, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond.call(null, G__2308, rdr, first_line);
      return G__2308;
    } else {
      var or__4131__auto__ = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.tools.reader.NO_MATCH;
      }
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : -1;
  var result = function() {
    var matched = cljs.tools.reader.NO_MATCH;
    var finished = null;
    while (true) {
      if (matched === cljs.tools.reader.NO_MATCH) {
        var match = cljs.tools.reader.match_feature.call(null, first_line, rdr, opts, pending_forms);
        if (match === cljs.tools.reader.READ_FINISHED) {
          return cljs.tools.reader.READ_FINISHED;
        } else {
          var G__2310 = match;
          var G__2311 = null;
          matched = G__2310;
          finished = G__2311;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__2312 = matched;
          var G__2313 = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
          matched = G__2312;
          finished = G__2313;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result === cljs.tools.reader.READ_FINISHED) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === result.cljs$core$ISequential$ ? true : false : false) {
        goog.array.insertArrayAt(pending_forms, cljs.core.to_array.call(null, result), 0);
        return rdr;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "Spliced form list in read-cond-splicing must implement ISequential");
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not.call(null, function() {
    var and__4120__auto__ = opts;
    if (cljs.core.truth_(and__4120__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__4120__auto__;
    }
  }())) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  } else {
  }
  var temp__5718__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ch = temp__5718__auto__;
    var splicing = cljs.core._EQ_.call(null, ch, "@");
    var ch__$1 = splicing ? cljs.tools.reader.reader_types.read_char.call(null, rdr) : ch;
    if (splicing) {
      if (cljs.tools.reader._STAR_read_delim_STAR_) {
      } else {
        cljs.tools.reader.impl.errors.reader_error.call(null, rdr, "cond-splice not in list");
      }
    } else {
    }
    var temp__5718__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch__$1) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__5718__auto____$1)) {
      var ch__$2 = temp__5718__auto____$1;
      if (cljs.core.not_EQ_.call(null, ch__$2, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      } else {
        var _STAR_suppress_read_STAR__orig_val__2314 = cljs.tools.reader._STAR_suppress_read_STAR_;
        var _STAR_suppress_read_STAR__temp_val__2315 = function() {
          var or__4131__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR__temp_val__2315;
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited.call(null, rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR__orig_val__2314;
        }
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.call(null, [-1 === n ? "rest" : ["p", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "#"].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var arg_env_orig_val__2316 = cljs.tools.reader.arg_env;
  var arg_env_temp_val__2317 = cljs.core.sorted_map.call(null);
  cljs.tools.reader.arg_env = arg_env_temp_val__2317;
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, function() {
      var G__2318 = rdr;
      cljs.tools.reader.reader_types.unread.call(null, G__2318, "(");
      return G__2318;
    }(), true, null, opts, pending_forms);
    var rargs = cljs.core.rseq.call(null, cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key.call(null, cljs.core.first.call(null, rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_.call(null, args);
          } else {
            var G__2319 = i + 1;
            var G__2320 = cljs.core.conj_BANG_.call(null, args, function() {
              var or__4131__auto__ = cljs.core.get.call(null, cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__4131__auto__)) {
                return or__4131__auto__;
              } else {
                return cljs.tools.reader.garg.call(null, i);
              }
            }());
            i = G__2319;
            args = G__2320;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, args, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return new cljs.core.List(null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.List(null, args, new cljs.core.List(null, form, null, 1, null), 2, null), 3, null);
  } finally {
    cljs.tools.reader.arg_env = arg_env_orig_val__2316;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__5718__auto__ = cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var ret = temp__5718__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg.call(null, n);
      cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
};
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
      return cljs.tools.reader.register_arg.call(null, 1);
    } else {
      if (cljs.core._EQ_.call(null, ch, "\x26")) {
        cljs.tools.reader.reader_types.read_char.call(null, rdr);
        return cljs.tools.reader.register_arg.call(null, -1);
      } else {
        var n = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_.call(null, n)) {
          throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
        } else {
          return cljs.tools.reader.register_arg.call(null, n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__5718__auto__ = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ch = temp__5718__auto__;
    if (cljs.core._EQ_.call(null, "@", ch)) {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
        var G__2321 = rdr;
        cljs.tools.reader.reader_types.read_char.call(null, G__2321);
        return G__2321;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  var r = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first.call(null, s__$1);
      var ret = cljs.core.conj_BANG_.call(null, r, cljs.tools.reader.unquote_QMARK_.call(null, item) ? new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null), new cljs.core.List(null, cljs.core.second.call(null, item), null, 1, null), 2, null) : cljs.tools.reader.unquote_splicing_QMARK_.call(null, item) ? cljs.core.second.call(null, item) : new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, 
      null), new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, item), null, 1, null), 2, null));
      var G__2322 = cljs.core.next.call(null, s__$1);
      var G__2323 = ret;
      s__$1 = G__2322;
      r = G__2323;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq.call(null, form);
  var key_vals = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__2324 = cljs.core.next.call(null, s);
      var G__2325 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, key_vals, cljs.core.key.call(null, e)), cljs.core.val.call(null, e));
      s = G__2324;
      key_vals = G__2325;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var or__4131__auto__ = cljs.core.get.call(null, cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var gs = cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, cljs.core.name.call(null, sym), 0, cljs.core.count.call(null, cljs.core.name.call(null, sym)) - 1)), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "__auto__"].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__4120__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__4120__auto__) {
      return cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, form), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "source", "source", -433931539)));
    } else {
      return and__4120__auto__;
    }
  }()) {
    return new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null), new cljs.core.List(null, ret, new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, form)), null, 1, null), 2, null), 3, null);
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, coll)), null, 1, null), 2, null);
  if (cljs.core.truth_(type)) {
    return new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null), new cljs.core.List(null, type, new cljs.core.List(null, res, null, 1, null), 2, null), 3, null);
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count.call(null, coll) >= 16) {
    return new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
  } else {
    return new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), s], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta.call(null, form, cljs.core.special_symbol_QMARK_.call(null, form) ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, form, null, 1, null), 2, null) : form instanceof cljs.core.Symbol ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not.call(null, cljs.core.namespace.call(null, form));
    if (and__4120__auto__) {
      return goog.string.endsWith(cljs.core.name.call(null, form), "#");
    } else {
      return and__4120__auto__;
    }
  }()) ? cljs.tools.reader.register_gensym.call(null, form) : function() {
    var sym = cljs.core.str.cljs$core$IFn$_invoke$arity$1(form);
    if (cljs.core.truth_(goog.string.endsWith(sym, "."))) {
      var csym = cljs.core.symbol.call(null, cljs.core.subs.call(null, sym, 0, cljs.core.count.call(null, sym) - 1));
      return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.resolve_symbol.call(null, csym)), "."].join(""));
    } else {
      return cljs.tools.reader.resolve_symbol.call(null, form);
    }
  }(), null, 1, null), 2, null) : cljs.tools.reader.unquote_QMARK_.call(null, form) ? cljs.core.second.call(null, form) : cljs.tools.reader.unquote_splicing_QMARK_.call(null, form) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, form), cljs.tools.reader.flatten_map.call(null, form)) : cljs.core.vector_QMARK_.call(null, form) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "vec", 
  "cljs.core/vec", 307622519, null), new cljs.core.List(null, cljs.tools.reader.syntax_quote_coll.call(null, null, form), null, 1, null), 2, null) : cljs.core.set_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), form) : cljs.core.seq_QMARK_.call(null, form) || cljs.core.list_QMARK_.call(null, form) ? function() {
    var seq = cljs.core.seq.call(null, form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll.call(null, null, seq);
    } else {
      return cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
    }
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : form instanceof cljs.core.Keyword || typeof form === "number" || typeof form === "string" || form == null || cljs.tools.reader.bool_QMARK_.call(null, form) || form instanceof RegExp ? form : new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, form, null, 1, null), 2, null));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env_orig_val__2329 = cljs.tools.reader.gensym_env;
  var gensym_env_temp_val__2330 = cljs.core.PersistentArrayMap.EMPTY;
  cljs.tools.reader.gensym_env = gensym_env_temp_val__2330;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env_orig_val__2329;
  }
};
cljs.tools.reader.read_namespaced_map = function cljs$tools$reader$read_namespaced_map(rdr, _, opts, pending_forms) {
  var token = cljs.tools.reader.read_token.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__5718__auto__ = cljs.core._EQ_.call(null, token, ":") ? cljs.core.ns_name.call(null, cljs.core._STAR_ns_STAR_) : cljs.core._EQ_.call(null, ":", cljs.core.first.call(null, token)) ? function() {
    var G__2331 = token;
    var G__2331__$1 = G__2331 == null ? null : cljs.core.subs.call(null, G__2331, 1);
    var G__2331__$2 = G__2331__$1 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__2331__$1);
    var G__2331__$3 = G__2331__$2 == null ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__2331__$2);
    var G__2331__$4 = G__2331__$3 == null ? null : cljs.core.symbol.call(null, G__2331__$3);
    if (G__2331__$4 == null) {
      return null;
    } else {
      return cljs.tools.reader.resolve_ns.call(null, G__2331__$4);
    }
  }() : function() {
    var G__2332 = token;
    var G__2332__$1 = G__2332 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__2332);
    if (G__2332__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__2332__$1);
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ns = temp__5718__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", rdr, opts, pending_forms);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, null, null, items);
      } else {
      }
      var keys = cljs.tools.reader.impl.utils.namespace_keys.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), cljs.core.take_nth.call(null, 2, items));
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, keys)), cljs.core.count.call(null, keys))) {
      } else {
        cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), keys);
      }
      return cljs.core.zipmap.call(null, keys, vals);
    } else {
      return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, rdr, token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_ns.call(null, rdr, token);
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__2333 = ch;
  switch(G__2333) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__2335 = ch;
  switch(G__2335) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    case ":":
      return cljs.tools.reader.read_namespaced_map;
      break;
    case "#":
      return cljs.tools.reader.read_symbolic_value;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, rdr, tag);
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__5718__auto__ = function() {
      var or__4131__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var f = temp__5718__auto__;
      return f.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    } else {
      var temp__5718__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
      if (cljs.core.truth_(temp__5718__auto____$1)) {
        var f = temp__5718__auto____$1;
        return f.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      } else {
        return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, rdr, tag);
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                    return cljs.tools.reader.read_number.call(null, reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros.call(null, ch);
                    if (!(f == null)) {
                      var res = f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                return cljs.tools.reader.read_number.call(null, reader, ch);
              } else {
                var f = cljs.tools.reader.macros.call(null, ch);
                if (!(f == null)) {
                  var res = f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_(var_args) {
  var G__2338 = arguments.length;
  switch(G__2338) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e2339) {
    if (e2339 instanceof Error) {
      var e = e2339;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e2339;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read(var_args) {
  var G__2342 = arguments.length;
  switch(G__2342) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.call(null, reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__2343, reader) {
  var map__2344 = p__2343;
  var map__2344__$1 = (!(map__2344 == null) ? map__2344.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2344.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2344) : map__2344;
  var opts = map__2344__$1;
  var eof = cljs.core.get.call(null, map__2344__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, reader, cljs.core._EQ_.call(null, eof, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), eof, null, opts, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string(var_args) {
  var G__2348 = arguments.length;
  switch(G__2348) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = s;
    if (cljs.core.truth_(and__4120__auto__)) {
      return !(s === "");
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.tools.reader.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.read_PLUS_string = function cljs$tools$reader$read_PLUS_string(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2352 = arguments.length;
  var i__4731__auto___2353 = 0;
  while (true) {
    if (i__4731__auto___2353 < len__4730__auto___2352) {
      args__4736__auto__.push(arguments[i__4731__auto___2353]);
      var G__2354 = i__4731__auto___2353 + 1;
      i__4731__auto___2353 = G__2354;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic = function(reader, args) {
  var buf = function(reader__$1) {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader__$1.frames)));
  };
  var offset = cljs.core.count.call(null, buf.call(null, reader));
  var o = cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader)) ? cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function(buf, offset) {
    return function() {
      if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args))) {
        return cljs.tools.reader.read.call(null, cljs.core.first.call(null, args), reader);
      } else {
        return cljs.core.apply.call(null, cljs.tools.reader.read, reader, args);
      }
    };
  }(buf, offset)) : cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.tools.reader.read.call(null, cljs.core.first.call(null, args), reader) : cljs.core.apply.call(null, cljs.tools.reader.read, reader, args);
  var s = cljs.core.subs.call(null, buf.call(null, reader), offset).trim();
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, s], null);
};
cljs.tools.reader.read_PLUS_string.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.read_PLUS_string.cljs$lang$applyTo = function(seq2350) {
  var G__2351 = cljs.core.first.call(null, seq2350);
  var seq2350__$1 = cljs.core.next.call(null, seq2350);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2351, seq2350__$1);
};
goog.provide("cljs.tools.reader.edn");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.errors");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.edn.macro_terminating_QMARK_ = function cljs$tools$reader$edn$macro_terminating_QMARK_(ch) {
  var and__4120__auto__ = !("#" === ch);
  if (and__4120__auto__) {
    var and__4120__auto____$1 = !("'" === ch);
    if (and__4120__auto____$1) {
      var and__4120__auto____$2 = !(":" === ch);
      if (and__4120__auto____$2) {
        return cljs.tools.reader.edn.macros.call(null, ch);
      } else {
        return and__4120__auto____$2;
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function cljs$tools$reader$edn$not_constituent_QMARK_(ch) {
  return "@" === ch || "`" === ch || "~" === ch;
};
cljs.tools.reader.edn.read_token = function cljs$tools$reader$edn$read_token(var_args) {
  var G__2358 = arguments.length;
  switch(G__2358) {
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(rdr, kind, initch) {
  return cljs.tools.reader.edn.read_token.call(null, rdr, kind, initch, true);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4 = function(rdr, kind, initch, validate_leading_QMARK_) {
  if (cljs.core.not.call(null, initch)) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, rdr, kind);
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = validate_leading_QMARK_;
      if (cljs.core.truth_(and__4120__auto__)) {
        return cljs.tools.reader.edn.not_constituent_QMARK_.call(null, initch);
      } else {
        return and__4120__auto__;
      }
    }())) {
      return cljs.tools.reader.impl.errors.throw_bad_char.call(null, rdr, kind, initch);
    } else {
      var sb = new goog.string.StringBuffer;
      var ch = function() {
        cljs.tools.reader.reader_types.unread.call(null, rdr, initch);
        return initch;
      }();
      while (true) {
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || ch == null) {
          return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
        } else {
          if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch)) {
            return cljs.tools.reader.impl.errors.throw_bad_char.call(null, rdr, kind, ch);
          } else {
            var G__2361 = function() {
              var G__2359 = sb;
              G__2359.append(cljs.tools.reader.reader_types.read_char.call(null, rdr));
              return G__2359;
            }();
            var G__2362 = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
            sb = G__2361;
            ch = G__2362;
            continue;
          }
        }
        break;
      }
    }
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_dispatch = function cljs$tools$reader$edn$read_dispatch(rdr, _, opts) {
  var temp__5718__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ch = temp__5718__auto__;
    var temp__5718__auto____$1 = cljs.tools.reader.edn.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__5718__auto____$1)) {
      var dm = temp__5718__auto____$1;
      return dm.call(null, rdr, ch, opts);
    } else {
      var temp__5718__auto____$2 = cljs.tools.reader.edn.read_tagged.call(null, function() {
        var G__2363 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__2363, ch);
        return G__2363;
      }(), ch, opts);
      if (cljs.core.truth_(temp__5718__auto____$2)) {
        var obj = temp__5718__auto____$2;
        return obj;
      } else {
        return cljs.tools.reader.impl.errors.throw_no_dispatch.call(null, rdr, ch);
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, rdr);
  }
};
cljs.tools.reader.edn.read_unmatched_delimiter = function cljs$tools$reader$edn$read_unmatched_delimiter(rdr, ch, opts) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, rdr, ch);
};
cljs.tools.reader.edn.read_unicode_char = function cljs$tools$reader$edn$read_unicode_char(var_args) {
  var G__2365 = arguments.length;
  switch(G__2365) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, token);
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.impl.utils.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, token, i), token);
      } else {
        var G__2367 = i + 1;
        var G__2368 = d + uc * base;
        i = G__2367;
        uc = G__2368;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.impl.utils.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, initch);
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__4131__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__4131__auto__) {
            return or__4131__auto__;
          } else {
            var or__4131__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(or__4131__auto____$1)) {
              return or__4131__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, rdr, i, length);
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.impl.utils.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, rdr, ch);
          } else {
            var G__2369 = i + 1;
            var G__2370 = d + uc * base;
            i = G__2369;
            uc = G__2370;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = "퟿".charCodeAt(0);
cljs.tools.reader.edn.lower_limit = "".charCodeAt(0);
cljs.tools.reader.edn.read_char_STAR_ = function cljs$tools$reader$edn$read_char_STAR_(rdr, backslash, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? cljs.core.str.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "character", "character", 380652989), ch, false);
    var token_len = cljs.core.count.call(null, token);
    if (1 === token_len) {
      return cljs.core.nth.call(null, token, 0);
    } else {
      if (token === "newline") {
        return "\n";
      } else {
        if (token === "space") {
          return " ";
        } else {
          if (token === "tab") {
            return "\t";
          } else {
            if (token === "backspace") {
              return "\b";
            } else {
              if (token === "formfeed") {
                return "\f";
              } else {
                if (token === "return") {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt();
                    if (ic > cljs.tools.reader.edn.upper_limit && ic < cljs.tools.reader.edn.lower_limit) {
                      return cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, rdr, ic.toString(16));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, rdr, token);
                      } else {
                        var uc = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, len, 8);
                        if ((uc | 0) > 255) {
                          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, rdr, token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, rdr);
  }
};
cljs.tools.reader.edn.starting_line_col_info = function cljs$tools$reader$edn$starting_line_col_info(rdr) {
  if (cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), (cljs.tools.reader.reader_types.get_column_number.call(null, rdr) | 0) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_delimited = function cljs$tools$reader$edn$read_delimited(kind, delim, rdr, opts) {
  var vec__2371 = cljs.tools.reader.edn.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2371, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2371, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, rdr, kind, start_line, start_column, cljs.core.count.call(null, a));
    }
    if (cljs.core._EQ_.call(null, delim__$1, cljs.tools.reader.impl.utils.char$.call(null, ch))) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__5718__auto__ = cljs.tools.reader.edn.macros.call(null, ch);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var macrofn = temp__5718__auto__;
        var mret = macrofn.call(null, rdr, ch, opts);
        var G__2375 = !(mret === rdr) ? cljs.core.conj_BANG_.call(null, a, mret) : a;
        a = G__2375;
        continue;
      } else {
        var o = cljs.tools.reader.edn.read.call(null, function() {
          var G__2374 = rdr;
          cljs.tools.reader.reader_types.unread.call(null, G__2374, ch);
          return G__2374;
        }(), true, null, opts);
        var G__2376 = !(o === rdr) ? cljs.core.conj_BANG_.call(null, a, o) : a;
        a = G__2376;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_list = function cljs$tools$reader$edn$read_list(rdr, _, opts) {
  var the_list = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", rdr, opts);
  if (cljs.core.empty_QMARK_.call(null, the_list)) {
    return cljs.core.List.EMPTY;
  } else {
    return cljs.core.apply.call(null, cljs.core.list, the_list);
  }
};
cljs.tools.reader.edn.read_vector = function cljs$tools$reader$edn$read_vector(rdr, _, opts) {
  return cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", rdr, opts);
};
cljs.tools.reader.edn.read_map = function cljs$tools$reader$edn$read_map(rdr, _, opts) {
  var vec__2377 = cljs.tools.reader.edn.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__2377, 0, null);
  var start_column = cljs.core.nth.call(null, vec__2377, 1, null);
  var the_map = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", rdr, opts);
  var map_count = cljs.core.count.call(null, the_map);
  var ks = cljs.core.take_nth.call(null, 2, the_map);
  var key_set = cljs.core.set.call(null, ks);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, start_line, start_column, the_map);
  } else {
  }
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, key_set), cljs.core.count.call(null, ks))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "map", "map", 1371690461), ks);
  }
  if (map_count <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, the_map), true, true);
  } else {
    return cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, the_map), true);
  }
};
cljs.tools.reader.edn.read_number = function cljs$tools$reader$edn$read_number(rdr, initch, opts) {
  var sb = function() {
    var G__2380 = new goog.string.StringBuffer;
    G__2380.append(initch);
    return G__2380;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__4131__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.tools.reader.impl.errors.throw_invalid_number.call(null, rdr, s);
      }
    } else {
      var G__2382 = function() {
        var G__2381 = sb;
        G__2381.append(ch);
        return G__2381;
      }();
      var G__2383 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__2382;
      ch = G__2383;
      continue;
    }
    break;
  }
};
cljs.tools.reader.edn.escape_char = function cljs$tools$reader$edn$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__2384 = ch;
  switch(G__2384) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, rdr, ch__$1);
      } else {
        return cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 255) {
          return cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, rdr);
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, rdr, ch);
      }
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function cljs$tools$reader$edn$read_string_STAR_(rdr, _, opts) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    var G__2386 = ch;
    if (cljs.core._EQ_.call(null, null, G__2386)) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, rdr, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', sb);
    } else {
      if (cljs.core._EQ_.call(null, "\\", G__2386)) {
        var G__2389 = function() {
          var G__2387 = sb;
          G__2387.append(cljs.tools.reader.edn.escape_char.call(null, sb, rdr));
          return G__2387;
        }();
        var G__2390 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        sb = G__2389;
        ch = G__2390;
        continue;
      } else {
        if (cljs.core._EQ_.call(null, '"', G__2386)) {
          return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
        } else {
          var G__2391 = function() {
            var G__2388 = sb;
            G__2388.append(ch);
            return G__2388;
          }();
          var G__2392 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          sb = G__2391;
          ch = G__2392;
          continue;
        }
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_symbol = function cljs$tools$reader$edn$read_symbol(rdr, initch) {
  var temp__5720__auto__ = cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), initch);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var token = temp__5720__auto__;
    var G__2393 = token;
    switch(G__2393) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      default:
        var or__4131__auto__ = function() {
          var temp__5720__auto____$1 = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
          if (cljs.core.truth_(temp__5720__auto____$1)) {
            var p = temp__5720__auto____$1;
            return cljs.core.symbol.call(null, p.call(null, 0), p.call(null, 1));
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.tools.reader.impl.errors.throw_invalid.call(null, rdr, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), token);
        }
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function cljs$tools$reader$edn$read_keyword(reader, initch, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.edn.read_token.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = s;
      if (cljs.core.truth_(and__4120__auto__)) {
        return -1 === token.indexOf("::");
      } else {
        return and__4120__auto__;
      }
    }())) {
      var ns = s.call(null, 0);
      var name = s.call(null, 1);
      if (":" === cljs.core.nth.call(null, token, 0)) {
        return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), token);
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_invalid.call(null, reader, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, reader);
  }
};
cljs.tools.reader.edn.wrapping_reader = function cljs$tools$reader$edn$wrapping_reader(sym) {
  return function(rdr, _, opts) {
    return new cljs.core.List(null, sym, new cljs.core.List(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts), null, 1, null), 2, null);
  };
};
cljs.tools.reader.edn.read_meta = function cljs$tools$reader$edn$read_meta(rdr, _, opts) {
  var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, rdr, m);
  }
  var o = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : false : false) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, rdr, o);
  }
};
cljs.tools.reader.edn.read_set = function cljs$tools$reader$edn$read_set(rdr, _, opts) {
  var coll = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", rdr, opts);
  var the_set = cljs.core.set.call(null, coll);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), cljs.core.count.call(null, the_set))) {
  } else {
    cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "set", "set", 304602554), coll);
  }
  return the_set;
};
cljs.tools.reader.edn.read_discard = function cljs$tools$reader$edn$read_discard(rdr, _, opts) {
  var G__2396 = rdr;
  cljs.tools.reader.edn.read.call(null, G__2396, true, null, true);
  return G__2396;
};
cljs.tools.reader.edn.read_namespaced_map = function cljs$tools$reader$edn$read_namespaced_map(rdr, _, opts) {
  var token = cljs.tools.reader.edn.read_token.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, rdr));
  var temp__5718__auto__ = function() {
    var G__2397 = token;
    var G__2397__$1 = G__2397 == null ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, G__2397);
    if (G__2397__$1 == null) {
      return null;
    } else {
      return cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, G__2397__$1);
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ns = temp__5718__auto__;
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (ch === "{") {
      var items = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", rdr, opts);
      if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, items))) {
        cljs.tools.reader.impl.errors.throw_odd_map.call(null, rdr, null, null, items);
      } else {
      }
      var keys = cljs.tools.reader.impl.utils.namespace_keys.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), cljs.core.take_nth.call(null, 2, items));
      var vals = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, items));
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, keys)), cljs.core.count.call(null, keys))) {
      } else {
        cljs.tools.reader.impl.errors.throw_dup_keys.call(null, rdr, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), keys);
      }
      return cljs.core.zipmap.call(null, keys, vals);
    } else {
      return cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, rdr, token);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_bad_ns.call(null, rdr, token);
  }
};
cljs.tools.reader.edn.read_symbolic_value = function cljs$tools$reader$edn$read_symbolic_value(rdr, _, opts) {
  var sym = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var G__2398 = sym;
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), G__2398)) {
    return Number.NaN;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), G__2398)) {
      return Number.NEGATIVE_INFINITY;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), G__2398)) {
        return Number.POSITIVE_INFINITY;
      } else {
        return cljs.tools.reader.impl.errors.reader_error.call(null, rdr, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(""));
      }
    }
  }
};
cljs.tools.reader.edn.macros = function cljs$tools$reader$edn$macros(ch) {
  var G__2399 = ch;
  switch(G__2399) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "(":
      return cljs.tools.reader.edn.read_list;
      break;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.edn.read_vector;
      break;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.edn.read_map;
      break;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
      break;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function cljs$tools$reader$edn$dispatch_macros(ch) {
  var G__2401 = ch;
  switch(G__2401) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "{":
      return cljs.tools.reader.edn.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.edn.read_discard;
      break;
    case ":":
      return cljs.tools.reader.edn.read_namespaced_map;
      break;
    case "#":
      return cljs.tools.reader.edn.read_symbolic_value;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function cljs$tools$reader$edn$read_tagged(rdr, initch, opts) {
  var tag = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var object = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  var temp__5718__auto__ = function() {
    var or__4131__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(opts), tag);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.tools.reader.default_data_readers.call(null, tag);
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var f = temp__5718__auto__;
    return f.call(null, object);
  } else {
    var temp__5718__auto____$1 = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(temp__5718__auto____$1)) {
      var d = temp__5718__auto____$1;
      return d.call(null, tag, object);
    } else {
      return cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, rdr, tag);
    }
  }
};
cljs.tools.reader.edn.read = function cljs$tools$reader$edn$read(var_args) {
  var G__2404 = arguments.length;
  switch(G__2404) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, reader);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(p__2405, reader) {
  var map__2406 = p__2405;
  var map__2406__$1 = (!(map__2406 == null) ? map__2406.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2406.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2406) : map__2406;
  var opts = map__2406__$1;
  var eof = cljs.core.get.call(null, map__2406__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var eof_error_QMARK_ = !cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, opts);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  try {
    while (true) {
      var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
        continue;
      } else {
        if (ch == null) {
          if (cljs.core.truth_(eof_error_QMARK_)) {
            return cljs.tools.reader.impl.errors.throw_eof_error.call(null, reader, null);
          } else {
            return eof;
          }
        } else {
          if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
            return cljs.tools.reader.edn.read_number.call(null, reader, ch, opts);
          } else {
            var f = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(f)) {
              var res = f.call(null, reader, ch, opts);
              if (res === reader) {
                continue;
              } else {
                return res;
              }
            } else {
              return cljs.tools.reader.edn.read_symbol.call(null, reader, ch);
            }
          }
        }
      }
      break;
    }
  } catch (e2408) {
    if (e2408 instanceof Error) {
      var e = e2408;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e2408;
    }
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function cljs$tools$reader$edn$read_string(var_args) {
  var G__2411 = arguments.length;
  switch(G__2411) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = s;
    if (cljs.core.truth_(and__4120__auto__)) {
      return cljs.core.not_EQ_.call(null, s, "");
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.tools.reader.edn.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("cljs.tools.reader");
goog.require("cljs.tools.reader.edn");
goog.require("goog.string.StringBuffer");
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__2437 = b.append("0");
          b = G__2437;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return !cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg), " Failed:  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(low), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__2438 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__2438, 0, null);
  var years = cljs.core.nth.call(null, vec__2438, 1, null);
  var months = cljs.core.nth.call(null, vec__2438, 2, null);
  var days = cljs.core.nth.call(null, vec__2438, 3, null);
  var hours = cljs.core.nth.call(null, vec__2438, 4, null);
  var minutes = cljs.core.nth.call(null, vec__2438, 5, null);
  var seconds = cljs.core.nth.call(null, vec__2438, 6, null);
  var fraction = cljs.core.nth.call(null, vec__2438, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__2438, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__2438, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__2438, 10, null);
  var v = vec__2438;
  if (cljs.core.not.call(null, v)) {
    throw new Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4131__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__5718__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var vec__2441 = temp__5718__auto__;
    var years = cljs.core.nth.call(null, vec__2441, 0, null);
    var months = cljs.core.nth.call(null, vec__2441, 1, null);
    var days = cljs.core.nth.call(null, vec__2441, 2, null);
    var hours = cljs.core.nth.call(null, vec__2441, 3, null);
    var minutes = cljs.core.nth.call(null, vec__2441, 4, null);
    var seconds = cljs.core.nth.call(null, vec__2441, 5, null);
    var ms = cljs.core.nth.call(null, vec__2441, 6, null);
    var offset = cljs.core.nth.call(null, vec__2441, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1000);
  } else {
    throw new Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    throw new Error("Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    throw new Error("Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__2444_2466 = cljs.core.seq.call(null, form);
    var chunk__2445_2467 = null;
    var count__2446_2468 = 0;
    var i__2447_2469 = 0;
    while (true) {
      if (i__2447_2469 < count__2446_2468) {
        var x_2470 = cljs.core._nth.call(null, chunk__2445_2467, i__2447_2469);
        arr.push(x_2470);
        var G__2471 = seq__2444_2466;
        var G__2472 = chunk__2445_2467;
        var G__2473 = count__2446_2468;
        var G__2474 = i__2447_2469 + 1;
        seq__2444_2466 = G__2471;
        chunk__2445_2467 = G__2472;
        count__2446_2468 = G__2473;
        i__2447_2469 = G__2474;
        continue;
      } else {
        var temp__5720__auto___2475 = cljs.core.seq.call(null, seq__2444_2466);
        if (temp__5720__auto___2475) {
          var seq__2444_2476__$1 = temp__5720__auto___2475;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2444_2476__$1)) {
            var c__4550__auto___2477 = cljs.core.chunk_first.call(null, seq__2444_2476__$1);
            var G__2478 = cljs.core.chunk_rest.call(null, seq__2444_2476__$1);
            var G__2479 = c__4550__auto___2477;
            var G__2480 = cljs.core.count.call(null, c__4550__auto___2477);
            var G__2481 = 0;
            seq__2444_2466 = G__2478;
            chunk__2445_2467 = G__2479;
            count__2446_2468 = G__2480;
            i__2447_2469 = G__2481;
            continue;
          } else {
            var x_2482 = cljs.core.first.call(null, seq__2444_2476__$1);
            arr.push(x_2482);
            var G__2483 = cljs.core.next.call(null, seq__2444_2476__$1);
            var G__2484 = null;
            var G__2485 = 0;
            var G__2486 = 0;
            seq__2444_2466 = G__2483;
            chunk__2445_2467 = G__2484;
            count__2446_2468 = G__2485;
            i__2447_2469 = G__2486;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = {};
      var seq__2450_2487 = cljs.core.seq.call(null, form);
      var chunk__2451_2488 = null;
      var count__2452_2489 = 0;
      var i__2453_2490 = 0;
      while (true) {
        if (i__2453_2490 < count__2452_2489) {
          var vec__2460_2491 = cljs.core._nth.call(null, chunk__2451_2488, i__2453_2490);
          var k_2492 = cljs.core.nth.call(null, vec__2460_2491, 0, null);
          var v_2493 = cljs.core.nth.call(null, vec__2460_2491, 1, null);
          goog.object.set(obj, cljs.core.name.call(null, k_2492), v_2493);
          var G__2494 = seq__2450_2487;
          var G__2495 = chunk__2451_2488;
          var G__2496 = count__2452_2489;
          var G__2497 = i__2453_2490 + 1;
          seq__2450_2487 = G__2494;
          chunk__2451_2488 = G__2495;
          count__2452_2489 = G__2496;
          i__2453_2490 = G__2497;
          continue;
        } else {
          var temp__5720__auto___2498 = cljs.core.seq.call(null, seq__2450_2487);
          if (temp__5720__auto___2498) {
            var seq__2450_2499__$1 = temp__5720__auto___2498;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__2450_2499__$1)) {
              var c__4550__auto___2500 = cljs.core.chunk_first.call(null, seq__2450_2499__$1);
              var G__2501 = cljs.core.chunk_rest.call(null, seq__2450_2499__$1);
              var G__2502 = c__4550__auto___2500;
              var G__2503 = cljs.core.count.call(null, c__4550__auto___2500);
              var G__2504 = 0;
              seq__2450_2487 = G__2501;
              chunk__2451_2488 = G__2502;
              count__2452_2489 = G__2503;
              i__2453_2490 = G__2504;
              continue;
            } else {
              var vec__2463_2505 = cljs.core.first.call(null, seq__2450_2499__$1);
              var k_2506 = cljs.core.nth.call(null, vec__2463_2505, 0, null);
              var v_2507 = cljs.core.nth.call(null, vec__2463_2505, 1, null);
              goog.object.set(obj, cljs.core.name.call(null, k_2506), v_2507);
              var G__2508 = cljs.core.next.call(null, seq__2450_2499__$1);
              var G__2509 = null;
              var G__2510 = 0;
              var G__2511 = 0;
              seq__2450_2487 = G__2508;
              chunk__2451_2488 = G__2509;
              count__2452_2489 = G__2510;
              i__2453_2490 = G__2511;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      throw new Error(["JS literal expects a vector or map containing ", "only string or unqualified keyword keys"].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid.call(null, uuid);
  } else {
    throw new Error("UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), cljs.reader.read_date, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.reader.read_uuid, new cljs.core.Symbol(null, "queue", "queue", -1198599890, null), cljs.reader.read_queue, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.reader.read_js], null), cljs.core.PersistentArrayMap.EMPTY));
cljs.reader.read = function cljs$reader$read(var_args) {
  var G__2513 = arguments.length;
  switch(G__2513) {
    case 1:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), reader);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__2514, reader) {
  var map__2515 = p__2514;
  var map__2515__$1 = (!(map__2515 == null) ? map__2515.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2515.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2515) : map__2515;
  var opts = map__2515__$1;
  var eof = cljs.core.get.call(null, map__2515__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(map__2515, map__2515__$1, opts, eof) {
    return function(m) {
      return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
    };
  }(map__2515, map__2515__$1, opts, eof)), reader);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, cljs.core.update.call(null, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(m) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
  }));
};
cljs.reader.read.cljs$lang$maxFixedArity = 4;
cljs.reader.read_string = function cljs$reader$read_string(var_args) {
  var G__2519 = arguments.length;
  switch(G__2519) {
    case 1:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  return cljs.tools.reader.edn.read_string.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null), opts), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(m) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), m);
  }), s);
};
cljs.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("no.en.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.crypt.base64");
no.en.core.port_number = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "amqp", "amqp", -994422895), 5672, new cljs.core.Keyword(null, "http", "http", 382524695), 80, new cljs.core.Keyword(null, "https", "https", -1983909665), 443, new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), 3306, new cljs.core.Keyword(null, "postgresql", "postgresql", -1568339962), 5432, new cljs.core.Keyword(null, "rabbitmq", "rabbitmq", 1046897371), 5672, new cljs.core.Keyword(null, "zookeeper", 
"zookeeper", 17281735), 2181], null);
no.en.core.url_regex = /([^:]+):\/\/(([^:]+):([^@\/]+)@)?(([^:\/]+)(:([0-9]+))?((\/[^?#]*)(\?([^#]*))?)?)(#(.*))?/;
no.en.core.split_by_regex = function no$en$core$split_by_regex(s, pattern) {
  if (cljs.core.sequential_QMARK_.call(null, s)) {
    return s;
  } else {
    if (!clojure.string.blank_QMARK_.call(null, s)) {
      return clojure.string.split.call(null, s, pattern);
    } else {
      return null;
    }
  }
};
no.en.core.split_by_comma = function no$en$core$split_by_comma(s) {
  return no.en.core.split_by_regex.call(null, s, /\s*,\s*/);
};
no.en.core.utf8_string = function no$en$core$utf8_string(bytes) {
  throw cljs.core.ex_info.call(null, "utf8-string not implemented yet", bytes);
};
no.en.core.base64_encode = function no$en$core$base64_encode(bytes) {
  if (cljs.core.truth_(bytes)) {
    return goog.crypt.base64.encodeString(bytes, false);
  } else {
    return null;
  }
};
no.en.core.base64_decode = function no$en$core$base64_decode(s) {
  if (cljs.core.truth_(s)) {
    return goog.crypt.base64.decodeString(s, false);
  } else {
    return null;
  }
};
no.en.core.compact_map = function no$en$core$compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (v == null || (cljs.core.map_QMARK_.call(null, v) || cljs.core.sequential_QMARK_.call(null, v)) && cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
no.en.core.url_encode = function no$en$core$url_encode(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2529 = arguments.length;
  var i__4731__auto___2530 = 0;
  while (true) {
    if (i__4731__auto___2530 < len__4730__auto___2529) {
      args__4736__auto__.push(arguments[i__4731__auto___2530]);
      var G__2531 = i__4731__auto___2530 + 1;
      i__4731__auto___2530 = G__2531;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__2525) {
  var vec__2526 = p__2525;
  var encoding = cljs.core.nth.call(null, vec__2526, 0, null);
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, encodeURIComponent(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)), "*", "%2A");
  } else {
    return null;
  }
};
no.en.core.url_encode.cljs$lang$maxFixedArity = 1;
no.en.core.url_encode.cljs$lang$applyTo = function(seq2523) {
  var G__2524 = cljs.core.first.call(null, seq2523);
  var seq2523__$1 = cljs.core.next.call(null, seq2523);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2524, seq2523__$1);
};
no.en.core.url_decode = function no$en$core$url_decode(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2538 = arguments.length;
  var i__4731__auto___2539 = 0;
  while (true) {
    if (i__4731__auto___2539 < len__4730__auto___2538) {
      args__4736__auto__.push(arguments[i__4731__auto___2539]);
      var G__2540 = i__4731__auto___2539 + 1;
      i__4731__auto___2539 = G__2540;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__2534) {
  var vec__2535 = p__2534;
  var encoding = cljs.core.nth.call(null, vec__2535, 0, null);
  if (cljs.core.truth_(s)) {
    return decodeURIComponent(s);
  } else {
    return null;
  }
};
no.en.core.url_decode.cljs$lang$maxFixedArity = 1;
no.en.core.url_decode.cljs$lang$applyTo = function(seq2532) {
  var G__2533 = cljs.core.first.call(null, seq2532);
  var seq2532__$1 = cljs.core.next.call(null, seq2532);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2533, seq2532__$1);
};
no.en.core.pow = function no$en$core$pow(n, x) {
  return Math.pow(n, x);
};
no.en.core.byte_scale = cljs.core.PersistentHashMap.fromArrays(["T", "K", "G", "M", "Y", "Z", "E", "B", "P"], [no.en.core.pow.call(null, 1024, 4), no.en.core.pow.call(null, 1024, 1), no.en.core.pow.call(null, 1024, 3), no.en.core.pow.call(null, 1024, 2), no.en.core.pow.call(null, 1024, 8), no.en.core.pow.call(null, 1024, 7), no.en.core.pow.call(null, 1024, 6), no.en.core.pow.call(null, 1024, 0), no.en.core.pow.call(null, 1024, 5)]);
no.en.core.apply_unit = function no$en$core$apply_unit(number, unit) {
  if (typeof unit === "string") {
    var G__2541 = clojure.string.upper_case.call(null, unit);
    switch(G__2541) {
      default:
        var G__2542 = unit;
        switch(G__2542) {
          case "M":
            return number * 1000000;
            break;
          case "B":
            return number * 1000000000;
            break;
          default:
            throw new Error(["No matching clause: ", G__2542].join(""));
        }
    }
  } else {
    return number;
  }
};
no.en.core.parse_number = function no$en$core$parse_number(s, parse_fn) {
  var temp__5718__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(M|B)?.*/, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var matches = temp__5718__auto__;
    var number = parse_fn.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    if (cljs.core.not.call(null, isNaN(number))) {
      return no.en.core.apply_unit.call(null, number, unit);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
no.en.core.parse_bytes = function no$en$core$parse_bytes(s) {
  var temp__5718__auto__ = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(B|K|M|G|T|P|E|Z|Y)?.*/, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var matches = temp__5718__auto__;
    var number = cljs.reader.read_string.call(null, cljs.core.nth.call(null, matches, 1));
    var unit = cljs.core.nth.call(null, matches, 3);
    return cljs.core.long$.call(null, cljs.core.long$.call(null, cljs.reader.read_string.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, matches, 1)))) * cljs.core.get.call(null, no.en.core.byte_scale, clojure.string.upper_case.call(null, function() {
      var or__4131__auto__ = unit;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return "";
      }
    }()), 1));
  } else {
    return null;
  }
};
no.en.core.parse_integer = function no$en$core$parse_integer(s) {
  return no.en.core.parse_number.call(null, s, function(p1__2545_SHARP_) {
    return parseInt(p1__2545_SHARP_);
  });
};
no.en.core.parse_long = function no$en$core$parse_long(s) {
  return no.en.core.parse_number.call(null, s, function(p1__2546_SHARP_) {
    return parseInt(p1__2546_SHARP_);
  });
};
no.en.core.parse_double = function no$en$core$parse_double(s) {
  return no.en.core.parse_number.call(null, s, function(p1__2547_SHARP_) {
    return parseFloat(p1__2547_SHARP_);
  });
};
no.en.core.parse_float = function no$en$core$parse_float(s) {
  return no.en.core.parse_number.call(null, s, function(p1__2548_SHARP_) {
    return parseFloat(p1__2548_SHARP_);
  });
};
no.en.core.format_query_params = function no$en$core$format_query_params(m) {
  var params = clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__2551_SHARP_) {
    return clojure.string.join.call(null, "\x3d", p1__2551_SHARP_);
  }, cljs.core.map.call(null, function(p1__2550_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [no.en.core.url_encode.call(null, cljs.core.name.call(null, cljs.core.first.call(null, p1__2550_SHARP_))), no.en.core.url_encode.call(null, cljs.core.second.call(null, p1__2550_SHARP_))], null);
  }, cljs.core.remove.call(null, function(p1__2549_SHARP_) {
    return clojure.string.blank_QMARK_.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, p1__2549_SHARP_)));
  }, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.seq.call(null, m))))));
  if (!clojure.string.blank_QMARK_.call(null, params)) {
    return params;
  } else {
    return null;
  }
};
no.en.core.format_url = function no$en$core$format_url(m) {
  if (!cljs.core.empty_QMARK_.call(null, m)) {
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(m);
    return [cljs.core.truth_((new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)) ? [cljs.core.name.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)), "://"].join("") : null, function() {
      var map__2554 = m;
      var map__2554__$1 = (!(map__2554 == null) ? map__2554.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2554.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2554) : map__2554;
      var username = cljs.core.get.call(null, map__2554__$1, new cljs.core.Keyword(null, "username", "username", 1605666410));
      var password = cljs.core.get.call(null, map__2554__$1, new cljs.core.Keyword(null, "password", "password", 417022471));
      if (cljs.core.truth_(username)) {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(username), cljs.core.truth_(password) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(password)].join("") : null, "@"].join("");
      } else {
        return null;
      }
    }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)).cljs$core$IFn$_invoke$arity$1(m)), function() {
      var temp__5718__auto__ = (new cljs.core.Keyword(null, "server-port", "server-port", 663745648)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var port = temp__5718__auto__;
        if (!cljs.core._EQ_.call(null, port, no.en.core.port_number.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(m)))) {
          return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join("");
        } else {
          return null;
        }
      } else {
        return null;
      }
    }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m) == null && !cljs.core.empty_QMARK_.call(null, query_params) ? "/" : (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(m)), !cljs.core.empty_QMARK_.call(null, query_params) ? ["?", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.format_query_params.call(null, query_params))].join("") : null, !clojure.string.blank_QMARK_.call(null, 
    (new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m)) ? ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(m))].join("") : null].join("");
  } else {
    return null;
  }
};
no.en.core.public_url = function no$en$core$public_url(url) {
  return no.en.core.format_url.call(null, cljs.core.dissoc.call(null, url, new cljs.core.Keyword(null, "password", "password", 417022471)));
};
no.en.core.parse_percent = function no$en$core$parse_percent(s) {
  return no.en.core.parse_double.call(null, clojure.string.replace.call(null, s, "%", ""));
};
no.en.core.pattern_quote = function no$en$core$pattern_quote(s) {
  return clojure.string.replace.call(null, cljs.core.name.call(null, s), /([\[\]\^\$\|\(\)\\\+\*\?\{\}=!.])/, "\\\\$1");
};
no.en.core.separator = function no$en$core$separator(s) {
  var temp__5718__auto__ = cljs.core.re_matches.call(null, /([a-z0-9_-]+)([^a-z0-9_-]+).*/i, s);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var matches = temp__5718__auto__;
    return cljs.core.nth.call(null, matches, 2);
  } else {
    return null;
  }
};
no.en.core.parse_query_params = function no$en$core$parse_query_params(s) {
  if (cljs.core.truth_(s)) {
    return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__2558_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, no.en.core.url_decode.call(null, cljs.core.first.call(null, p1__2558_SHARP_))), no.en.core.url_decode.call(null, cljs.core.second.call(null, p1__2558_SHARP_))], null);
    }, cljs.core.filter.call(null, function(p1__2557_SHARP_) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, p1__2557_SHARP_));
    }, cljs.core.map.call(null, function(p1__2556_SHARP_) {
      return clojure.string.split.call(null, p1__2556_SHARP_, /=/);
    }, clojure.string.split.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), /&/)))));
  } else {
    return null;
  }
};
no.en.core.parse_url = function no$en$core$parse_url(s) {
  var temp__5718__auto__ = cljs.core.re_matches.call(null, no.en.core.url_regex, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var matches = temp__5718__auto__;
    var scheme = cljs.core.keyword.call(null, cljs.core.nth.call(null, matches, 1));
    return no.en.core.compact_map.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "password", "password", 417022471), new cljs.core.Keyword(null, "fragment", "fragment", 826775688), new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "uri", "uri", -774711847), new cljs.core.Keyword(null, 
    "server-name", "server-name", -1012104295), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), new cljs.core.Keyword(null, "scheme", "scheme", 90199613)], [cljs.core.nth.call(null, matches, 4), cljs.core.nth.call(null, matches, 14), cljs.core.nth.call(null, matches, 3), function() {
      var or__4131__auto__ = no.en.core.parse_integer.call(null, cljs.core.nth.call(null, matches, 8));
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return no.en.core.port_number.call(null, scheme);
      }
    }(), no.en.core.parse_query_params.call(null, cljs.core.nth.call(null, matches, 12)), cljs.core.nth.call(null, matches, 10), cljs.core.nth.call(null, matches, 6), cljs.core.nth.call(null, matches, 12), scheme]));
  } else {
    return null;
  }
};
var ret__4776__auto___2563 = function() {
  no.en.core.prog1 = function no$en$core$prog1(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___2564 = arguments.length;
    var i__4731__auto___2565 = 0;
    while (true) {
      if (i__4731__auto___2565 < len__4730__auto___2564) {
        args__4736__auto__.push(arguments[i__4731__auto___2565]);
        var G__2566 = i__4731__auto___2565 + 1;
        i__4731__auto___2565 = G__2566;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
    return no.en.core.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
  };
  no.en.core.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "result__2559__auto__", "result__2559__auto__", -1755479964, null), null, 1, null), new cljs.core.List(null, 
    cljs.core.first.call(null, body), null, 1, null))))), null, 1, null), cljs.core.rest.call(null, body), new cljs.core.List(null, new cljs.core.Symbol(null, "result__2559__auto__", "result__2559__auto__", -1755479964, null), null, 1, null))));
  };
  no.en.core.prog1.cljs$lang$maxFixedArity = 2;
  no.en.core.prog1.cljs$lang$applyTo = function(seq2560) {
    var G__2561 = cljs.core.first.call(null, seq2560);
    var seq2560__$1 = cljs.core.next.call(null, seq2560);
    var G__2562 = cljs.core.first.call(null, seq2560__$1);
    var seq2560__$2 = cljs.core.next.call(null, seq2560__$1);
    var self__4717__auto__ = this;
    return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2561, G__2562, seq2560__$2);
  };
  return null;
}();
no.en.core.prog1.cljs$lang$macro = true;
no.en.core.with_retries_STAR_ = function no$en$core$with_retries_STAR_(n, thunk) {
  var n__$1 = n;
  while (true) {
    var temp__5718__auto__ = function() {
      try {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [thunk.call(null)], null);
      } catch (e2567) {
        if (e2567 instanceof Error) {
          var e = e2567;
          if (n__$1 === 0) {
            throw e;
          } else {
            return null;
          }
        } else {
          throw e2567;
        }
      }
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var result = temp__5718__auto__;
      return result.call(null, 0);
    } else {
      var G__2568 = n__$1 - 1;
      n__$1 = G__2568;
      continue;
    }
    break;
  }
};
var ret__4776__auto___2573 = function() {
  no.en.core.with_retries = function no$en$core$with_retries(var_args) {
    var args__4736__auto__ = [];
    var len__4730__auto___2574 = arguments.length;
    var i__4731__auto___2575 = 0;
    while (true) {
      if (i__4731__auto___2575 < len__4730__auto___2574) {
        args__4736__auto__.push(arguments[i__4731__auto___2575]);
        var G__2576 = i__4731__auto___2575 + 1;
        i__4731__auto___2575 = G__2576;
        continue;
      } else {
      }
      break;
    }
    var argseq__4737__auto__ = 3 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(3), 0, null) : null;
    return no.en.core.with_retries.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4737__auto__);
  };
  no.en.core.with_retries.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, n, body) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("no.en.core", "with-retries*", "no.en.core/with-retries*", 172357687, null), null, 1, null), new cljs.core.List(null, n, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), 
    new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null), body))), null, 1, null))));
  };
  no.en.core.with_retries.cljs$lang$maxFixedArity = 3;
  no.en.core.with_retries.cljs$lang$applyTo = function(seq2569) {
    var G__2570 = cljs.core.first.call(null, seq2569);
    var seq2569__$1 = cljs.core.next.call(null, seq2569);
    var G__2571 = cljs.core.first.call(null, seq2569__$1);
    var seq2569__$2 = cljs.core.next.call(null, seq2569__$1);
    var G__2572 = cljs.core.first.call(null, seq2569__$2);
    var seq2569__$3 = cljs.core.next.call(null, seq2569__$2);
    var self__4717__auto__ = this;
    return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2570, G__2571, G__2572, seq2569__$3);
  };
  return null;
}();
no.en.core.with_retries.cljs$lang$macro = true;
no.en.core.editable_QMARK_ = function no$en$core$editable_QMARK_(coll) {
  if (!(coll == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEditableCollection$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEditableCollection, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEditableCollection, coll);
  }
};
no.en.core.reduce_map = function no$en$core$reduce_map(f, coll) {
  if (no.en.core.editable_QMARK_.call(null, coll)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, f.call(null, cljs.core.assoc_BANG_), cljs.core.transient$.call(null, cljs.core.empty.call(null, coll)), coll));
  } else {
    return cljs.core.reduce_kv.call(null, f.call(null, cljs.core.assoc), cljs.core.empty.call(null, coll), coll);
  }
};
no.en.core.map_keys = function no$en$core$map_keys(f, coll) {
  return no.en.core.reduce_map.call(null, function(xf) {
    return function(m, k, v) {
      return xf.call(null, m, f.call(null, k), v);
    };
  }, coll);
};
no.en.core.map_vals = function no$en$core$map_vals(f, coll) {
  return no.en.core.reduce_map.call(null, function(xf) {
    return function(m, k, v) {
      return xf.call(null, m, k, f.call(null, v));
    };
  }, coll);
};
no.en.core.deep_merge = function no$en$core$deep_merge(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2579 = arguments.length;
  var i__4731__auto___2580 = 0;
  while (true) {
    if (i__4731__auto___2580 < len__4730__auto___2579) {
      args__4736__auto__.push(arguments[i__4731__auto___2580]);
      var G__2581 = i__4731__auto___2580 + 1;
      i__4731__auto___2580 = G__2581;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return no.en.core.deep_merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
no.en.core.deep_merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, maps)) {
    return cljs.core.apply.call(null, cljs.core.merge_with, no.en.core.deep_merge, maps);
  } else {
    return cljs.core.last.call(null, maps);
  }
};
no.en.core.deep_merge.cljs$lang$maxFixedArity = 0;
no.en.core.deep_merge.cljs$lang$applyTo = function(seq2578) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2578));
};
no.en.core.deep_merge_with = function no$en$core$deep_merge_with(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2584 = arguments.length;
  var i__4731__auto___2585 = 0;
  while (true) {
    if (i__4731__auto___2585 < len__4730__auto___2584) {
      args__4736__auto__.push(arguments[i__4731__auto___2585]);
      var G__2586 = i__4731__auto___2585 + 1;
      i__4731__auto___2585 = G__2586;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return no.en.core.deep_merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
no.en.core.deep_merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  return cljs.core.apply.call(null, function() {
    var no$en$core$m__delegate = function(maps__$1) {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, maps__$1)) {
        return cljs.core.apply.call(null, cljs.core.merge_with, no$en$core$m, maps__$1);
      } else {
        return cljs.core.apply.call(null, f, maps__$1);
      }
    };
    var no$en$core$m = function(var_args) {
      var maps__$1 = null;
      if (arguments.length > 0) {
        var G__2587__i = 0, G__2587__a = new Array(arguments.length - 0);
        while (G__2587__i < G__2587__a.length) {
          G__2587__a[G__2587__i] = arguments[G__2587__i + 0];
          ++G__2587__i;
        }
        maps__$1 = new cljs.core.IndexedSeq(G__2587__a, 0, null);
      }
      return no$en$core$m__delegate.call(this, maps__$1);
    };
    no$en$core$m.cljs$lang$maxFixedArity = 0;
    no$en$core$m.cljs$lang$applyTo = function(arglist__2588) {
      var maps__$1 = cljs.core.seq(arglist__2588);
      return no$en$core$m__delegate(maps__$1);
    };
    no$en$core$m.cljs$core$IFn$_invoke$arity$variadic = no$en$core$m__delegate;
    return no$en$core$m;
  }(), maps);
};
no.en.core.deep_merge_with.cljs$lang$maxFixedArity = 1;
no.en.core.deep_merge_with.cljs$lang$applyTo = function(seq2582) {
  var G__2583 = cljs.core.first.call(null, seq2582);
  var seq2582__$1 = cljs.core.next.call(null, seq2582);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2583, seq2582__$1);
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = ""; str.charAt(idx | 0) || (map = "\x3d", idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = ""; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0; i < len; i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0; i < x.length; i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0; i < str.length; ++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0; i < arr.length; i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift); i < eidx; i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24; i < 8; i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24; i < 16; i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24; i < 24; i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24; i < 32; i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0; j < bucket.length; j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0; j < entries.length; j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0; i < kslen; i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0; j < this._entries.length; i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0; i < this._entries.length; i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0; i < this._entries.length; i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0; i < this._entries.length; i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0; i < bucket.length; i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0; i < ks.length; i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0; j < bucket.length; j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0; i < keys.length; i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0; j < bucket.length; j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0; i < bucket.length; i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0; i < t.length; i += 2) {
          var seen = false;
          for (var j = 0; j < arr.length; j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0; i < arr.length; i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0; j < bucket.length; j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0; i < arr.length; i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0; j < vals.length; j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);
        break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      case "s":
      case "?":
      case "i":
      case "d":
      case "b":
      case "'":
      case "array":
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0; i < ks.length; i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0; i < ks.length; i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0; i < ks.length; i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1; i < node.length; i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1; i < node.length; i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1; i < node.length; i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0; i < node.length; i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0; i < node.length; i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0; i < node.length; i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0; i < node.length; i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length; i < m; i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0; i < ks.length; i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      case "string":
      case "boolean":
      case "number":
      case "array":
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0; i < iterable.length; i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0; i < arr.length; i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (; i < arr.length; i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (; i < ks.length; i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (; i < arr.length; i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (; i < arr.length; i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (; i < ks.length; i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode(this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode(this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(uuid__$1.toString()), '"'].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__2591_2595 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__2592_2596 = null;
  var count__2593_2597 = 0;
  var i__2594_2598 = 0;
  while (true) {
    if (i__2594_2598 < count__2593_2597) {
      var k_2599 = cljs.core._nth.call(null, chunk__2592_2596, i__2594_2598);
      var v_2600 = b[k_2599];
      a[k_2599] = v_2600;
      var G__2601 = seq__2591_2595;
      var G__2602 = chunk__2592_2596;
      var G__2603 = count__2593_2597;
      var G__2604 = i__2594_2598 + 1;
      seq__2591_2595 = G__2601;
      chunk__2592_2596 = G__2602;
      count__2593_2597 = G__2603;
      i__2594_2598 = G__2604;
      continue;
    } else {
      var temp__5720__auto___2605 = cljs.core.seq.call(null, seq__2591_2595);
      if (temp__5720__auto___2605) {
        var seq__2591_2606__$1 = temp__5720__auto___2605;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2591_2606__$1)) {
          var c__4550__auto___2607 = cljs.core.chunk_first.call(null, seq__2591_2606__$1);
          var G__2608 = cljs.core.chunk_rest.call(null, seq__2591_2606__$1);
          var G__2609 = c__4550__auto___2607;
          var G__2610 = cljs.core.count.call(null, c__4550__auto___2607);
          var G__2611 = 0;
          seq__2591_2595 = G__2608;
          chunk__2592_2596 = G__2609;
          count__2593_2597 = G__2610;
          i__2594_2598 = G__2611;
          continue;
        } else {
          var k_2612 = cljs.core.first.call(null, seq__2591_2606__$1);
          var v_2613 = b[k_2612];
          a[k_2612] = v_2613;
          var G__2614 = cljs.core.next.call(null, seq__2591_2606__$1);
          var G__2615 = null;
          var G__2616 = 0;
          var G__2617 = 0;
          seq__2591_2595 = G__2614;
          chunk__2592_2596 = G__2615;
          count__2593_2597 = G__2616;
          i__2594_2598 = G__2617;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var G__2619 = arguments.length;
  switch(G__2619) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader(cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__2621 = i + 2;
        var G__2622 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__2621;
        ret = G__2622;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }, "with-meta", function(v) {
    return cljs.core.with_meta.call(null, v[0], v[1]);
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__2623_2627 = cljs.core.seq.call(null, v);
  var chunk__2624_2628 = null;
  var count__2625_2629 = 0;
  var i__2626_2630 = 0;
  while (true) {
    if (i__2626_2630 < count__2625_2629) {
      var x_2631 = cljs.core._nth.call(null, chunk__2624_2628, i__2626_2630);
      ret.push(x_2631);
      var G__2632 = seq__2623_2627;
      var G__2633 = chunk__2624_2628;
      var G__2634 = count__2625_2629;
      var G__2635 = i__2626_2630 + 1;
      seq__2623_2627 = G__2632;
      chunk__2624_2628 = G__2633;
      count__2625_2629 = G__2634;
      i__2626_2630 = G__2635;
      continue;
    } else {
      var temp__5720__auto___2636 = cljs.core.seq.call(null, seq__2623_2627);
      if (temp__5720__auto___2636) {
        var seq__2623_2637__$1 = temp__5720__auto___2636;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2623_2637__$1)) {
          var c__4550__auto___2638 = cljs.core.chunk_first.call(null, seq__2623_2637__$1);
          var G__2639 = cljs.core.chunk_rest.call(null, seq__2623_2637__$1);
          var G__2640 = c__4550__auto___2638;
          var G__2641 = cljs.core.count.call(null, c__4550__auto___2638);
          var G__2642 = 0;
          seq__2623_2627 = G__2639;
          chunk__2624_2628 = G__2640;
          count__2625_2629 = G__2641;
          i__2626_2630 = G__2642;
          continue;
        } else {
          var x_2643 = cljs.core.first.call(null, seq__2623_2637__$1);
          ret.push(x_2643);
          var G__2644 = cljs.core.next.call(null, seq__2623_2637__$1);
          var G__2645 = null;
          var G__2646 = 0;
          var G__2647 = 0;
          seq__2623_2627 = G__2644;
          chunk__2624_2628 = G__2645;
          count__2625_2629 = G__2646;
          i__2626_2630 = G__2647;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged("array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__2648_2652 = cljs.core.seq.call(null, v);
  var chunk__2649_2653 = null;
  var count__2650_2654 = 0;
  var i__2651_2655 = 0;
  while (true) {
    if (i__2651_2655 < count__2650_2654) {
      var x_2656 = cljs.core._nth.call(null, chunk__2649_2653, i__2651_2655);
      ret.push(x_2656);
      var G__2657 = seq__2648_2652;
      var G__2658 = chunk__2649_2653;
      var G__2659 = count__2650_2654;
      var G__2660 = i__2651_2655 + 1;
      seq__2648_2652 = G__2657;
      chunk__2649_2653 = G__2658;
      count__2650_2654 = G__2659;
      i__2651_2655 = G__2660;
      continue;
    } else {
      var temp__5720__auto___2661 = cljs.core.seq.call(null, seq__2648_2652);
      if (temp__5720__auto___2661) {
        var seq__2648_2662__$1 = temp__5720__auto___2661;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2648_2662__$1)) {
          var c__4550__auto___2663 = cljs.core.chunk_first.call(null, seq__2648_2662__$1);
          var G__2664 = cljs.core.chunk_rest.call(null, seq__2648_2662__$1);
          var G__2665 = c__4550__auto___2663;
          var G__2666 = cljs.core.count.call(null, c__4550__auto___2663);
          var G__2667 = 0;
          seq__2648_2652 = G__2664;
          chunk__2649_2653 = G__2665;
          count__2650_2654 = G__2666;
          i__2651_2655 = G__2667;
          continue;
        } else {
          var x_2668 = cljs.core.first.call(null, seq__2648_2662__$1);
          ret.push(x_2668);
          var G__2669 = cljs.core.next.call(null, seq__2648_2662__$1);
          var G__2670 = null;
          var G__2671 = 0;
          var G__2672 = 0;
          seq__2648_2652 = G__2669;
          chunk__2649_2653 = G__2670;
          count__2650_2654 = G__2671;
          i__2651_2655 = G__2672;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged("array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__2673_2677 = cljs.core.seq.call(null, v);
  var chunk__2674_2678 = null;
  var count__2675_2679 = 0;
  var i__2676_2680 = 0;
  while (true) {
    if (i__2676_2680 < count__2675_2679) {
      var x_2681 = cljs.core._nth.call(null, chunk__2674_2678, i__2676_2680);
      ret.push(x_2681);
      var G__2682 = seq__2673_2677;
      var G__2683 = chunk__2674_2678;
      var G__2684 = count__2675_2679;
      var G__2685 = i__2676_2680 + 1;
      seq__2673_2677 = G__2682;
      chunk__2674_2678 = G__2683;
      count__2675_2679 = G__2684;
      i__2676_2680 = G__2685;
      continue;
    } else {
      var temp__5720__auto___2686 = cljs.core.seq.call(null, seq__2673_2677);
      if (temp__5720__auto___2686) {
        var seq__2673_2687__$1 = temp__5720__auto___2686;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2673_2687__$1)) {
          var c__4550__auto___2688 = cljs.core.chunk_first.call(null, seq__2673_2687__$1);
          var G__2689 = cljs.core.chunk_rest.call(null, seq__2673_2687__$1);
          var G__2690 = c__4550__auto___2688;
          var G__2691 = cljs.core.count.call(null, c__4550__auto___2688);
          var G__2692 = 0;
          seq__2673_2677 = G__2689;
          chunk__2674_2678 = G__2690;
          count__2675_2679 = G__2691;
          i__2676_2680 = G__2692;
          continue;
        } else {
          var x_2693 = cljs.core.first.call(null, seq__2673_2687__$1);
          ret.push(x_2693);
          var G__2694 = cljs.core.next.call(null, seq__2673_2687__$1);
          var G__2695 = null;
          var G__2696 = 0;
          var G__2697 = 0;
          seq__2673_2677 = G__2694;
          chunk__2674_2678 = G__2695;
          count__2675_2679 = G__2696;
          i__2676_2680 = G__2697;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.WithMeta = function(value, meta) {
  this.value = value;
  this.meta = meta;
};
cognitect.transit.WithMeta.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cognitect.transit.WithMeta.cljs$lang$type = true;
cognitect.transit.WithMeta.cljs$lang$ctorStr = "cognitect.transit/WithMeta";
cognitect.transit.WithMeta.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/WithMeta");
};
cognitect.transit.__GT_WithMeta = function cognitect$transit$__GT_WithMeta(value, meta) {
  return new cognitect.transit.WithMeta(value, meta);
};
cognitect.transit.WithMetaHandler = function() {
};
cognitect.transit.WithMetaHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "with-meta";
};
cognitect.transit.WithMetaHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return com.cognitect.transit.tagged("array", [v.value, v.meta]);
};
cognitect.transit.WithMetaHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.WithMetaHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.WithMetaHandler.cljs$lang$type = true;
cognitect.transit.WithMetaHandler.cljs$lang$ctorStr = "cognitect.transit/WithMetaHandler";
cognitect.transit.WithMetaHandler.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/WithMetaHandler");
};
cognitect.transit.__GT_WithMetaHandler = function cognitect$transit$__GT_WithMetaHandler() {
  return new cognitect.transit.WithMetaHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var G__2699 = arguments.length;
  switch(G__2699) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var meta_handler = new cognitect.transit.WithMetaHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cognitect.transit.WithMeta, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, 
  cljs.core.PersistentTreeMap, cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, meta_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, 
  list_handler, set_handler, list_handler, symbol_handler, uuid_handler, list_handler, list_handler]), typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.Eduction !== "undefined" ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.Eduction, list_handler]) : null, typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.Repeat !== "undefined" ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.Repeat, list_handler]) : null, 
  typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.MapEntry !== "undefined" ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.MapEntry, vector_handler]) : null, (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer(cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers) {
        return function(obj, k, v) {
          var G__2700 = obj;
          G__2700.push(kfn.call(null, k), vfn.call(null, v));
          return G__2700;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers), "handlers":function() {
    var x2701 = cljs.core.clone.call(null, handlers);
    x2701.forEach = function(x2701, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__2702 = cljs.core.seq.call(null, coll);
        var chunk__2703 = null;
        var count__2704 = 0;
        var i__2705 = 0;
        while (true) {
          if (i__2705 < count__2704) {
            var vec__2712 = cljs.core._nth.call(null, chunk__2703, i__2705);
            var k = cljs.core.nth.call(null, vec__2712, 0, null);
            var v = cljs.core.nth.call(null, vec__2712, 1, null);
            f.call(null, v, k);
            var G__2719 = seq__2702;
            var G__2720 = chunk__2703;
            var G__2721 = count__2704;
            var G__2722 = i__2705 + 1;
            seq__2702 = G__2719;
            chunk__2703 = G__2720;
            count__2704 = G__2721;
            i__2705 = G__2722;
            continue;
          } else {
            var temp__5720__auto__ = cljs.core.seq.call(null, seq__2702);
            if (temp__5720__auto__) {
              var seq__2702__$1 = temp__5720__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__2702__$1)) {
                var c__4550__auto__ = cljs.core.chunk_first.call(null, seq__2702__$1);
                var G__2723 = cljs.core.chunk_rest.call(null, seq__2702__$1);
                var G__2724 = c__4550__auto__;
                var G__2725 = cljs.core.count.call(null, c__4550__auto__);
                var G__2726 = 0;
                seq__2702 = G__2723;
                chunk__2703 = G__2724;
                count__2704 = G__2725;
                i__2705 = G__2726;
                continue;
              } else {
                var vec__2715 = cljs.core.first.call(null, seq__2702__$1);
                var k = cljs.core.nth.call(null, vec__2715, 0, null);
                var v = cljs.core.nth.call(null, vec__2715, 1, null);
                f.call(null, v, k);
                var G__2727 = cljs.core.next.call(null, seq__2702__$1);
                var G__2728 = null;
                var G__2729 = 0;
                var G__2730 = 0;
                seq__2702 = G__2727;
                chunk__2703 = G__2728;
                count__2704 = G__2729;
                i__2705 = G__2730;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x2701, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers);
    return x2701;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, meta_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var G__2732 = arguments.length;
  switch(G__2732) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect !== "undefined" && typeof cognitect.transit !== "undefined" && typeof cognitect.transit.t_cognitect$transit2733 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit2733 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta2734) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta2734 = meta2734;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit2733.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2735, meta2734__$1) {
      var self__ = this;
      var _2735__$1 = this;
      return new cognitect.transit.t_cognitect$transit2733(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta2734__$1);
    };
    cognitect.transit.t_cognitect$transit2733.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2735) {
      var self__ = this;
      var _2735__$1 = this;
      return self__.meta2734;
    };
    cognitect.transit.t_cognitect$transit2733.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit2733.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit2733.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit2733.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit2733.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta2734", "meta2734", -1200030809, null)], null);
    };
    cognitect.transit.t_cognitect$transit2733.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit2733.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit2733";
    cognitect.transit.t_cognitect$transit2733.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cognitect.transit/t_cognitect$transit2733");
    };
    cognitect.transit.__GT_t_cognitect$transit2733 = function cognitect$transit$__GT_t_cognitect$transit2733(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta2734) {
      return new cognitect.transit.t_cognitect$transit2733(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta2734);
    };
  }
  return new cognitect.transit.t_cognitect$transit2733(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue(tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue(x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue(s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger(x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger(s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger(x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue(s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal(x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri(s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI(x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid(s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__4131__auto__ = com.cognitect.transit.types.isUUID(x);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary(s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary(x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted(x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted(x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link(x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink(x);
};
cognitect.transit.write_meta = function cognitect$transit$write_meta(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMeta$ ? true : false : false) {
    var m = cljs.core._meta.call(null, x);
    if (!(m == null)) {
      return new cognitect.transit.WithMeta(cljs.core._with_meta.call(null, x, null), m);
    } else {
      return x;
    }
  } else {
    return x;
  }
};
goog.provide("cljs_http.util");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("clojure.string");
goog.require("cognitect.transit");
goog.require("goog.userAgent");
goog.require("no.en.core");
cljs_http.util.basic_auth = function cljs_http$util$basic_auth(credentials) {
  if (cljs.core.truth_(credentials)) {
    var vec__2740 = cljs.core.map_QMARK_.call(null, credentials) ? cljs.core.map.call(null, credentials, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "password", "password", 417022471)], null)) : credentials;
    var username = cljs.core.nth.call(null, vec__2740, 0, null);
    var password = cljs.core.nth.call(null, vec__2740, 1, null);
    return ["Basic ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.base64_encode.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(username), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(password)].join("")))].join("");
  } else {
    return null;
  }
};
cljs_http.util.build_url = function cljs_http$util$build_url(p__2743) {
  var map__2744 = p__2743;
  var map__2744__$1 = (!(map__2744 == null) ? map__2744.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2744.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2744) : map__2744;
  var scheme = cljs.core.get.call(null, map__2744__$1, new cljs.core.Keyword(null, "scheme", "scheme", 90199613));
  var server_name = cljs.core.get.call(null, map__2744__$1, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295));
  var server_port = cljs.core.get.call(null, map__2744__$1, new cljs.core.Keyword(null, "server-port", "server-port", 663745648));
  var uri = cljs.core.get.call(null, map__2744__$1, new cljs.core.Keyword(null, "uri", "uri", -774711847));
  var query_string = cljs.core.get.call(null, map__2744__$1, new cljs.core.Keyword(null, "query-string", "query-string", -1018845061));
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var G__2747 = new goog.Uri;
    G__2747.setScheme(cljs.core.name.call(null, function() {
      var or__4131__auto__ = scheme;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return new cljs.core.Keyword(null, "http", "http", 382524695);
      }
    }()));
    G__2747.setDomain(server_name);
    G__2747.setPort(server_port);
    G__2747.setPath(uri);
    G__2747.setQuery(query_string, true);
    return G__2747;
  }());
};
cljs_http.util.camelize = function cljs_http$util$camelize(s) {
  return clojure.string.join.call(null, "-", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), /-/)));
};
cljs_http.util.build_headers = function cljs_http$util$build_headers(m) {
  return cljs.core.clj__GT_js.call(null, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, m)), cljs.core.vals.call(null, m)));
};
cljs_http.util.user_agent = function cljs_http$util$user_agent() {
  return goog.userAgent.getUserAgentString();
};
cljs_http.util.android_QMARK_ = function cljs_http$util$android_QMARK_() {
  return cljs.core.re_matches.call(null, /.*android.*/i, cljs_http.util.user_agent.call(null));
};
cljs_http.util.transit_decode = function cljs_http$util$transit_decode(s, type, opts) {
  var rdr = cognitect.transit.reader.call(null, type, opts);
  return cognitect.transit.read.call(null, rdr, s);
};
cljs_http.util.transit_encode = function cljs_http$util$transit_encode(x, type, opts) {
  var wrtr = cognitect.transit.writer.call(null, type, opts);
  return cognitect.transit.write.call(null, wrtr, x);
};
cljs_http.util.json_decode = function cljs_http$util$json_decode(s) {
  var v = !clojure.string.blank_QMARK_.call(null, s) ? JSON.parse(s) : null;
  if (!(v == null)) {
    return cljs.core.js__GT_clj.call(null, v, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  } else {
    return null;
  }
};
cljs_http.util.json_encode = function cljs_http$util$json_encode(x) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, x));
};
cljs_http.util.parse_headers = function cljs_http$util$parse_headers(headers) {
  return cljs.core.reduce.call(null, function(p1__2749_SHARP_, p2__2748_SHARP_) {
    var vec__2750 = clojure.string.split.call(null, p2__2748_SHARP_, /:\s+/);
    var k = cljs.core.nth.call(null, vec__2750, 0, null);
    var v = cljs.core.nth.call(null, vec__2750, 1, null);
    if (clojure.string.blank_QMARK_.call(null, k) || clojure.string.blank_QMARK_.call(null, v)) {
      return p1__2749_SHARP_;
    } else {
      return cljs.core.assoc.call(null, p1__2749_SHARP_, clojure.string.lower_case.call(null, k), v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, function() {
    var or__4131__auto__ = headers;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return "";
    }
  }(), /(\n)|(\r)|(\r\n)|(\n\r)/));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4433__auto__ = port == null ? null : port;
    var m__4434__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, port, fn1_handler);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4433__auto__ = port == null ? null : port;
    var m__4434__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4433__auto__ = chan == null ? null : chan;
    var m__4434__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, chan);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4433__auto__ = chan == null ? null : chan;
    var m__4434__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, chan);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4433__auto__ = h == null ? null : h;
    var m__4434__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, h);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__4433__auto__ = h == null ? null : h;
    var m__4434__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, h);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4433__auto__ = h == null ? null : h;
    var m__4434__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, h);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4433__auto__ = b == null ? null : b;
    var m__4434__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, b);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4433__auto__ = b == null ? null : b;
    var m__4434__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, b);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4433__auto__ = b == null ? null : b;
    var m__4434__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, b, itm);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__4433__auto__ = b == null ? null : b;
    var m__4434__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, b);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var G__1991 = arguments.length;
  switch(G__1991) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__1995 = cnt + 1;
      cnt = G__1995;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4607__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4607__auto__) {
      var v_1996 = this$.pop();
      if (keep_QMARK_.call(null, v_1996)) {
        this$.unshift(v_1996);
      } else {
      }
      var G__1997 = x + 1;
      x = G__1997;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error(["Assert failed: ", "Can't create a ring buffer of size 0", "\n", "(\x3e n 0)"].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.impl !== "undefined" && typeof cljs.core.async.impl.buffers !== "undefined" && typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val)) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val)) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val)) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_2000 = 0;
  while (true) {
    var m_2001 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_2001 == null) {
    } else {
      m_2001.call(null);
      if (count_2000 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__2002 = count_2000 + 1;
        count_2000 = G__2002;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.async.impl.dispatch.queued_QMARK_ && cljs.core.async.impl.dispatch.running_QMARK_) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick.call(null, cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.impl !== "undefined" && typeof cljs.core.async.impl.channels !== "undefined" && typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005 = function(val, meta2006) {
      this.val = val;
      this.meta2006 = meta2006;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2007, meta2006__$1) {
      var self__ = this;
      var _2007__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005(self__.val, meta2006__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2007) {
      var self__ = this;
      var _2007__$1 = this;
      return self__.meta2006;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta2006", "meta2006", 648963844, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels2005";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels2005");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels2005 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels2005(val__$1, meta2006) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005(val__$1, meta2006);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels2005(val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = cljs.core.async.impl.channels.abort["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_2019 = self__.puts.pop();
    if (putter_2019 == null) {
    } else {
      var put_handler_2020 = putter_2019.handler;
      var val_2021 = putter_2019.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_2020)) {
        var put_cb_2022 = cljs.core.async.impl.protocols.commit.call(null, put_handler_2020);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_2022, put_handler_2020, val_2021, putter_2019, this$__$1) {
          return function() {
            return put_cb_2022.call(null, true);
          };
        }(put_cb_2022, put_handler_2020, val_2021, putter_2019, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error(["Assert failed: ", "Can't put nil on a channel", "\n", "(not (nil? val))"].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = self__.buf;
      if (cljs.core.truth_(and__4120__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4120__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      var take_cbs = function() {
        var takers = cljs.core.PersistentVector.EMPTY;
        while (true) {
          if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
            var taker = self__.takes.pop();
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
              var ret = cljs.core.async.impl.protocols.commit.call(null, taker);
              var val__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
              var G__2023 = cljs.core.conj.call(null, takers, function(takers, ret, val__$1, taker, done_QMARK_, closed__$1, this$__$1) {
                return function() {
                  return ret.call(null, val__$1);
                };
              }(takers, ret, val__$1, taker, done_QMARK_, closed__$1, this$__$1));
              takers = G__2023;
              continue;
            } else {
              var G__2024 = takers;
              takers = G__2024;
              continue;
            }
          } else {
            return takers;
          }
          break;
        }
      }();
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      if (cljs.core.seq.call(null, take_cbs)) {
        var seq__2008_2025 = cljs.core.seq.call(null, take_cbs);
        var chunk__2009_2026 = null;
        var count__2010_2027 = 0;
        var i__2011_2028 = 0;
        while (true) {
          if (i__2011_2028 < count__2010_2027) {
            var f_2029 = cljs.core._nth.call(null, chunk__2009_2026, i__2011_2028);
            cljs.core.async.impl.dispatch.run.call(null, f_2029);
            var G__2030 = seq__2008_2025;
            var G__2031 = chunk__2009_2026;
            var G__2032 = count__2010_2027;
            var G__2033 = i__2011_2028 + 1;
            seq__2008_2025 = G__2030;
            chunk__2009_2026 = G__2031;
            count__2010_2027 = G__2032;
            i__2011_2028 = G__2033;
            continue;
          } else {
            var temp__5720__auto___2034 = cljs.core.seq.call(null, seq__2008_2025);
            if (temp__5720__auto___2034) {
              var seq__2008_2035__$1 = temp__5720__auto___2034;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__2008_2035__$1)) {
                var c__4550__auto___2036 = cljs.core.chunk_first.call(null, seq__2008_2035__$1);
                var G__2037 = cljs.core.chunk_rest.call(null, seq__2008_2035__$1);
                var G__2038 = c__4550__auto___2036;
                var G__2039 = cljs.core.count.call(null, c__4550__auto___2036);
                var G__2040 = 0;
                seq__2008_2025 = G__2037;
                chunk__2009_2026 = G__2038;
                count__2010_2027 = G__2039;
                i__2011_2028 = G__2040;
                continue;
              } else {
                var f_2041 = cljs.core.first.call(null, seq__2008_2035__$1);
                cljs.core.async.impl.dispatch.run.call(null, f_2041);
                var G__2042 = cljs.core.next.call(null, seq__2008_2035__$1);
                var G__2043 = null;
                var G__2044 = 0;
                var G__2045 = 0;
                seq__2008_2025 = G__2042;
                chunk__2009_2026 = G__2043;
                count__2010_2027 = G__2044;
                i__2011_2028 = G__2045;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > 64) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < 1024) {
          } else {
            throw new Error(["Assert failed: ", ["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending puts are allowed on a single channel.", " Consider using a windowed buffer."].join(""), "\n", "(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)"].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var temp__5718__auto__ = cljs.core.async.impl.protocols.commit.call(null, handler);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var take_cb = temp__5718__auto__;
        var val = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
        var vec__2012 = self__.puts.length > 0 ? function() {
          var cbs = cljs.core.PersistentVector.EMPTY;
          while (true) {
            var putter = self__.puts.pop();
            var put_handler = putter.handler;
            var val__$1 = putter.val;
            var cb = function() {
              var and__4120__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler);
              if (and__4120__auto__) {
                return cljs.core.async.impl.protocols.commit.call(null, put_handler);
              } else {
                return and__4120__auto__;
              }
            }();
            var cbs__$1 = cljs.core.truth_(cb) ? cljs.core.conj.call(null, cbs, cb) : cbs;
            var done_QMARK_ = cljs.core.truth_(cb) ? cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val__$1)) : null;
            if (cljs.core.not.call(null, done_QMARK_) && cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)) && self__.puts.length > 0) {
              var G__2046 = cbs__$1;
              cbs = G__2046;
              continue;
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [done_QMARK_, cbs__$1], null);
            }
            break;
          }
        }() : null;
        var done_QMARK_ = cljs.core.nth.call(null, vec__2012, 0, null);
        var cbs = cljs.core.nth.call(null, vec__2012, 1, null);
        if (cljs.core.truth_(done_QMARK_)) {
          cljs.core.async.impl.channels.abort.call(null, this$__$1);
        } else {
        }
        var seq__2015_2047 = cljs.core.seq.call(null, cbs);
        var chunk__2016_2048 = null;
        var count__2017_2049 = 0;
        var i__2018_2050 = 0;
        while (true) {
          if (i__2018_2050 < count__2017_2049) {
            var cb_2051 = cljs.core._nth.call(null, chunk__2016_2048, i__2018_2050);
            cljs.core.async.impl.dispatch.run.call(null, function(seq__2015_2047, chunk__2016_2048, count__2017_2049, i__2018_2050, cb_2051, val, vec__2012, done_QMARK_, cbs, take_cb, temp__5718__auto__, this$__$1) {
              return function() {
                return cb_2051.call(null, true);
              };
            }(seq__2015_2047, chunk__2016_2048, count__2017_2049, i__2018_2050, cb_2051, val, vec__2012, done_QMARK_, cbs, take_cb, temp__5718__auto__, this$__$1));
            var G__2052 = seq__2015_2047;
            var G__2053 = chunk__2016_2048;
            var G__2054 = count__2017_2049;
            var G__2055 = i__2018_2050 + 1;
            seq__2015_2047 = G__2052;
            chunk__2016_2048 = G__2053;
            count__2017_2049 = G__2054;
            i__2018_2050 = G__2055;
            continue;
          } else {
            var temp__5720__auto___2056 = cljs.core.seq.call(null, seq__2015_2047);
            if (temp__5720__auto___2056) {
              var seq__2015_2057__$1 = temp__5720__auto___2056;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__2015_2057__$1)) {
                var c__4550__auto___2058 = cljs.core.chunk_first.call(null, seq__2015_2057__$1);
                var G__2059 = cljs.core.chunk_rest.call(null, seq__2015_2057__$1);
                var G__2060 = c__4550__auto___2058;
                var G__2061 = cljs.core.count.call(null, c__4550__auto___2058);
                var G__2062 = 0;
                seq__2015_2047 = G__2059;
                chunk__2016_2048 = G__2060;
                count__2017_2049 = G__2061;
                i__2018_2050 = G__2062;
                continue;
              } else {
                var cb_2063 = cljs.core.first.call(null, seq__2015_2057__$1);
                cljs.core.async.impl.dispatch.run.call(null, function(seq__2015_2047, chunk__2016_2048, count__2017_2049, i__2018_2050, cb_2063, seq__2015_2057__$1, temp__5720__auto___2056, val, vec__2012, done_QMARK_, cbs, take_cb, temp__5718__auto__, this$__$1) {
                  return function() {
                    return cb_2063.call(null, true);
                  };
                }(seq__2015_2047, chunk__2016_2048, count__2017_2049, i__2018_2050, cb_2063, seq__2015_2057__$1, temp__5720__auto___2056, val, vec__2012, done_QMARK_, cbs, take_cb, temp__5718__auto__, this$__$1));
                var G__2064 = cljs.core.next.call(null, seq__2015_2057__$1);
                var G__2065 = null;
                var G__2066 = 0;
                var G__2067 = 0;
                seq__2015_2047 = G__2064;
                chunk__2016_2048 = G__2065;
                count__2017_2049 = G__2066;
                i__2018_2050 = G__2067;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return cljs.core.async.impl.channels.box.call(null, val);
      } else {
        return null;
      }
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4120__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4120__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4120__auto__ = self__.buf;
              if (cljs.core.truth_(and__4120__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4120__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > 64) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < 1024) {
            } else {
              throw new Error(["Assert failed: ", ["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending takes are allowed on a single channel."].join(""), "\n", "(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)"].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = self__.buf;
      if (cljs.core.truth_(and__4120__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4120__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_2068 = self__.takes.pop();
      if (taker_2068 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_2068)) {
          var take_cb_2069 = cljs.core.async.impl.protocols.commit.call(null, taker_2068);
          var val_2070 = cljs.core.truth_(function() {
            var and__4120__auto__ = self__.buf;
            if (cljs.core.truth_(and__4120__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4120__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_2069, val_2070, taker_2068, this$__$1) {
            return function() {
              return take_cb_2069.call(null, val_2070);
            };
          }(take_cb_2069, val_2070, taker_2068, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4131__auto__ = exh;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var G__2072 = arguments.length;
  switch(G__2072) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__2076 = null;
        var G__2076__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e2073) {
            var t = e2073;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__2076__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e2074) {
            var t = e2074;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__2076 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__2076__1.call(this, buf__$1);
            case 2:
              return G__2076__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__2076.cljs$core$IFn$_invoke$arity$1 = G__2076__1;
        G__2076.cljs$core$IFn$_invoke$arity$2 = G__2076__2;
        return G__2076;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[1], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.impl !== "undefined" && typeof cljs.core.async.impl.ioc_helpers !== "undefined" && typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351 = function(f, meta4352) {
      this.f = f;
      this.meta4352 = meta4352;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4353, meta4352__$1) {
      var self__ = this;
      var _4353__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351(self__.f, meta4352__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4353) {
      var self__ = this;
      var _4353__$1 = this;
      return self__.meta4352;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta4352", "meta4352", 561109121, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers4351";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers4351");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers4351 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers4351(f__$1, meta4352) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351(f__$1, meta4352);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers4351(f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 0).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e4354) {
    if (e4354 instanceof Object) {
      var ex = e4354;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 6));
      throw ex;
    } else {
      throw e4354;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__5718__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_4355_4357 = state;
    statearr_4355_4357[2] = x;
    statearr_4355_4357[1] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var cb = temp__5718__auto__;
    var statearr_4356_4358 = state;
    statearr_4356_4358[2] = cljs.core.deref.call(null, cb);
    statearr_4356_4358[1] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__5718__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_4359_4361 = state;
    statearr_4359_4361[2] = ret_val;
    statearr_4359_4361[1] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var cb = temp__5718__auto__;
    var statearr_4360_4362 = state;
    statearr_4360_4362[2] = cljs.core.deref.call(null, cb);
    statearr_4360_4362[1] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[6];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4364, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4368 = k4364;
  var G__4368__$1 = G__4368 instanceof cljs.core.Keyword ? G__4368.fqn : null;
  switch(G__4368__$1) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k4364, else__4388__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.call(null, function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4369) {
      var vec__4370 = p__4369;
      var k__4408__auto__ = cljs.core.nth.call(null, vec__4370, 0, null);
      var v__4409__auto__ = cljs.core.nth.call(null, vec__4370, 1, null);
      return f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4400__auto__, pr_pair__4402__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4401__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4363) {
  var self__ = this;
  var G__4363__$1 = this;
  return new cljs.core.RecordIter(0, G__4363__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function(h__4243__auto__, this__4381__auto____$1) {
      return function(coll__4382__auto__) {
        return 846900531 ^ cljs.core.hash_unordered_coll.call(null, coll__4382__auto__);
      };
    }(h__4243__auto__, this__4381__auto____$1).call(null, this__4381__auto____$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4365, other4366) {
  var self__ = this;
  var this4365__$1 = this;
  return !(other4366 == null) && this4365__$1.constructor === other4366.constructor && cljs.core._EQ_.call(null, this4365__$1.catch_block, other4366.catch_block) && cljs.core._EQ_.call(null, this4365__$1.catch_exception, other4366.catch_exception) && cljs.core._EQ_.call(null, this4365__$1.finally_block, other4366.finally_block) && cljs.core._EQ_.call(null, this4365__$1.continue_block, other4366.continue_block) && cljs.core._EQ_.call(null, this4365__$1.prev, other4366.prev) && cljs.core._EQ_.call(null, 
  this4365__$1.__extmap, other4366.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4363) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4373 = cljs.core.keyword_identical_QMARK_;
  var expr__4374 = k__4393__auto__;
  if (cljs.core.truth_(pred__4373.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__4374))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__4363, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__4373.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__4374))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__4363, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__4373.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__4374))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__4363, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__4373.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__4374))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__4363, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__4373.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__4374))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__4363, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4393__auto__, G__4363), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev, null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4363) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__4363, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4391__auto__, 0), cljs.core._nth.call(null, entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.core.async.impl.ioc-helpers/ExceptionFrame", null, 1, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__4367) {
  var extmap__4424__auto__ = function() {
    var G__4376 = cljs.core.dissoc.call(null, G__4367, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226));
    if (cljs.core.record_QMARK_.call(null, G__4367)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__4376);
    } else {
      return G__4376;
    }
  }();
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__4367), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__4367), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__4367), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__4367), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__4367), null, cljs.core.not_empty.call(null, extmap__4424__auto__), null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_4378 = state;
  statearr_4378[4] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 4));
  return statearr_4378;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 4);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, 5);
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = exception;
      if (cljs.core.truth_(and__4120__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4120__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = exception;
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4120__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }())) {
        var statearr_4379 = state;
        statearr_4379[1] = catch_block;
        statearr_4379[2] = exception;
        statearr_4379[5] = null;
        statearr_4379[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_4379;
      } else {
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = exception;
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4120__auto__;
          }
        }())) {
          var statearr_4380_4384 = state;
          statearr_4380_4384[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__4385 = state;
          state = G__4385;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = exception;
            if (cljs.core.truth_(and__4120__auto__)) {
              var and__4120__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4120__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4120__auto____$1;
              }
            } else {
              return and__4120__auto__;
            }
          }())) {
            var statearr_4381 = state;
            statearr_4381[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_4381[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_4381;
          } else {
            if (cljs.core.truth_(function() {
              var and__4120__auto__ = cljs.core.not.call(null, exception);
              if (and__4120__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4120__auto__;
              }
            }())) {
              var statearr_4382 = state;
              statearr_4382[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_4382[4] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_4382;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_4383 = state;
                statearr_4383[1] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_4383[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_4383;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var G__4389 = arguments.length;
  switch(G__4389) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__4391 = level + 1;
      level = G__4391;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(null, self__.key, new cljs.core.List(null, self__.val, null, 1, null), 2, null);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var G__4393 = arguments.length;
  switch(G__4393) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_4395 = 0;
  while (true) {
    if (i_4395 < arr.length) {
      arr[i_4395] = null;
      var G__4396 = i_4395 + 1;
      i_4395 = G__4396;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var G__4398 = arguments.length;
  switch(G__4398) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__5718__auto__ = level < x__$1.forward.length ? x__$1.forward[level] : null;
          if (cljs.core.truth_(temp__5718__auto__)) {
            var x_SINGLEQUOTE_ = temp__5718__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__4400 = x_SINGLEQUOTE_;
              x__$1 = G__4400;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__4401 = x__$1;
      var G__4402 = k;
      var G__4403 = level - 1;
      var G__4404 = update;
      x = G__4401;
      k = G__4402;
      level = G__4403;
      update = G__4404;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_4405 = self__.level + 1;
      while (true) {
        if (i_4405 <= new_level + 1) {
          update[i_4405] = self__.header;
          var G__4406 = i_4405 + 1;
          i_4405 = G__4406;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward.length === 0 ? null : x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_4407 = 0;
    while (true) {
      if (i_4407 <= self__.level) {
        var links_4408 = update[i_4407].forward;
        if (x__$1 === (i_4407 < links_4408.length ? links_4408[i_4407] : null)) {
          links_4408[i_4407] = x__$1.forward[i_4407];
          var G__4409 = i_4407 + 1;
          i_4407 = G__4409;
          continue;
        } else {
          var G__4410 = i_4407 + 1;
          i_4407 = G__4410;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (0 < self__.level && self__.level < self__.header.forward.length && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = level__$1 < x__$1.forward.length ? x__$1.forward[level__$1] : null;
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__4411 = x_SINGLEQUOTE_;
              x__$1 = G__4411;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__4412 = nx;
        var G__4413 = level__$1 - 1;
        x = G__4412;
        level__$1 = G__4413;
        continue;
      } else {
        var G__4414 = x;
        var G__4415 = level__$1 - 1;
        x = G__4414;
        level__$1 = G__4415;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = level__$1 < x__$1.forward.length ? x__$1.forward[level__$1] : null;
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__4416 = x_SINGLEQUOTE_;
              x__$1 = G__4416;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__4417 = nx;
        var G__4418 = level__$1 - 1;
        x = G__4417;
        level__$1 = G__4418;
        continue;
      } else {
        var G__4419 = x;
        var G__4420 = level__$1 - 1;
        x = G__4419;
        level__$1 = G__4420;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout);
  var or__4131__auto__ = cljs.core.truth_(function() {
    var and__4120__auto__ = me;
    if (cljs.core.truth_(and__4120__auto__)) {
      return me.key < timeout + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4120__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4131__auto__, timeout, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4131__auto__, timeout, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var G__4491 = arguments.length;
  switch(G__4491) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async4492 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4492 = function(f, blockable, meta4493) {
      this.f = f;
      this.blockable = blockable;
      this.meta4493 = meta4493;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4494, meta4493__$1) {
      var self__ = this;
      var _4494__$1 = this;
      return new cljs.core.async.t_cljs$core$async4492(self__.f, self__.blockable, meta4493__$1);
    };
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4494) {
      var self__ = this;
      var _4494__$1 = this;
      return self__.meta4493;
    };
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async4492.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async4492.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta4493", "meta4493", -218048283, null)], null);
    };
    cljs.core.async.t_cljs$core$async4492.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4492.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4492";
    cljs.core.async.t_cljs$core$async4492.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async4492");
    };
    cljs.core.async.__GT_t_cljs$core$async4492 = function cljs$core$async$__GT_t_cljs$core$async4492(f__$1, blockable__$1, meta4493) {
      return new cljs.core.async.t_cljs$core$async4492(f__$1, blockable__$1, meta4493);
    };
  }
  return new cljs.core.async.t_cljs$core$async4492(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var G__4498 = arguments.length;
  switch(G__4498) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error(["Assert failed: ", "buffer must be supplied when transducer is", "\n", "buf-or-n"].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var G__4501 = arguments.length;
  switch(G__4501) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var G__4504 = arguments.length;
  switch(G__4504) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_4506 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_4506);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_4506, ret) {
        return function() {
          return fn1.call(null, val_4506);
        };
      }(val_4506, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var G__4508 = arguments.length;
  switch(G__4508) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__5718__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var ret = temp__5718__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__5718__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var retb = temp__5718__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__5718__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__5718__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__4607__auto___4510 = n;
  var x_4511 = 0;
  while (true) {
    if (x_4511 < n__4607__auto___4510) {
      a[x_4511] = 0;
      var G__4512 = x_4511 + 1;
      x_4511 = G__4512;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__4513 = i + 1;
      i = G__4513;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async4514 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4514 = function(flag, meta4515) {
      this.flag = flag;
      this.meta4515 = meta4515;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_4516, meta4515__$1) {
        var self__ = this;
        var _4516__$1 = this;
        return new cljs.core.async.t_cljs$core$async4514(self__.flag, meta4515__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_4516) {
        var self__ = this;
        var _4516__$1 = this;
        return self__.meta4515;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta4515", "meta4515", -1792178080, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async4514.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4514.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4514";
    cljs.core.async.t_cljs$core$async4514.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async4514");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async4514 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async4514(flag__$1, meta4515) {
        return new cljs.core.async.t_cljs$core$async4514(flag__$1, meta4515);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async4514(flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async4517 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async4517 = function(flag, cb, meta4518) {
      this.flag = flag;
      this.cb = cb;
      this.meta4518 = meta4518;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4519, meta4518__$1) {
      var self__ = this;
      var _4519__$1 = this;
      return new cljs.core.async.t_cljs$core$async4517(self__.flag, self__.cb, meta4518__$1);
    };
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4519) {
      var self__ = this;
      var _4519__$1 = this;
      return self__.meta4518;
    };
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async4517.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async4517.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta4518", "meta4518", 608093724, null)], null);
    };
    cljs.core.async.t_cljs$core$async4517.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async4517.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async4517";
    cljs.core.async.t_cljs$core$async4517.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async4517");
    };
    cljs.core.async.__GT_t_cljs$core$async4517 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async4517(flag__$1, cb__$1, meta4518) {
      return new cljs.core.async.t_cljs$core$async4517(flag__$1, cb__$1, meta4518);
    };
  }
  return new cljs.core.async.t_cljs$core$async4517(flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__4520_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__4520_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__4521_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__4521_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4131__auto__ = wport;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__4522 = i + 1;
          i = G__4522;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4131__auto__ = ret;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__5720__auto__ = function() {
        var and__4120__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4120__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4120__auto__;
        }
      }();
      if (cljs.core.truth_(temp__5720__auto__)) {
        var got = temp__5720__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4528 = arguments.length;
  var i__4731__auto___4529 = 0;
  while (true) {
    if (i__4731__auto___4529 < len__4730__auto___4528) {
      args__4736__auto__.push(arguments[i__4731__auto___4529]);
      var G__4530 = i__4731__auto___4529 + 1;
      i__4731__auto___4529 = G__4530;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__4525) {
  var map__4526 = p__4525;
  var map__4526__$1 = (!(map__4526 == null) ? map__4526.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4526.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__4526) : map__4526;
  var opts = map__4526__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq4523) {
  var G__4524 = cljs.core.first.call(null, seq4523);
  var seq4523__$1 = cljs.core.next.call(null, seq4523);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4524, seq4523__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var G__4532 = arguments.length;
  switch(G__4532) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__4431__auto___4578 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___4578) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___4578) {
          return function(state_4556) {
            var state_val_4557 = state_4556[1];
            if (state_val_4557 === 7) {
              var inst_4552 = state_4556[2];
              var state_4556__$1 = state_4556;
              var statearr_4558_4579 = state_4556__$1;
              statearr_4558_4579[2] = inst_4552;
              statearr_4558_4579[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4557 === 1) {
                var state_4556__$1 = state_4556;
                var statearr_4559_4580 = state_4556__$1;
                statearr_4559_4580[2] = null;
                statearr_4559_4580[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4557 === 4) {
                  var inst_4535 = state_4556[7];
                  var inst_4535__$1 = state_4556[2];
                  var inst_4536 = inst_4535__$1 == null;
                  var state_4556__$1 = function() {
                    var statearr_4560 = state_4556;
                    statearr_4560[7] = inst_4535__$1;
                    return statearr_4560;
                  }();
                  if (cljs.core.truth_(inst_4536)) {
                    var statearr_4561_4581 = state_4556__$1;
                    statearr_4561_4581[1] = 5;
                  } else {
                    var statearr_4562_4582 = state_4556__$1;
                    statearr_4562_4582[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4557 === 13) {
                    var state_4556__$1 = state_4556;
                    var statearr_4563_4583 = state_4556__$1;
                    statearr_4563_4583[2] = null;
                    statearr_4563_4583[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4557 === 6) {
                      var inst_4535 = state_4556[7];
                      var state_4556__$1 = state_4556;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4556__$1, 11, to, inst_4535);
                    } else {
                      if (state_val_4557 === 3) {
                        var inst_4554 = state_4556[2];
                        var state_4556__$1 = state_4556;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4556__$1, inst_4554);
                      } else {
                        if (state_val_4557 === 12) {
                          var state_4556__$1 = state_4556;
                          var statearr_4564_4584 = state_4556__$1;
                          statearr_4564_4584[2] = null;
                          statearr_4564_4584[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4557 === 2) {
                            var state_4556__$1 = state_4556;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4556__$1, 4, from);
                          } else {
                            if (state_val_4557 === 11) {
                              var inst_4545 = state_4556[2];
                              var state_4556__$1 = state_4556;
                              if (cljs.core.truth_(inst_4545)) {
                                var statearr_4565_4585 = state_4556__$1;
                                statearr_4565_4585[1] = 12;
                              } else {
                                var statearr_4566_4586 = state_4556__$1;
                                statearr_4566_4586[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4557 === 9) {
                                var state_4556__$1 = state_4556;
                                var statearr_4567_4587 = state_4556__$1;
                                statearr_4567_4587[2] = null;
                                statearr_4567_4587[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4557 === 5) {
                                  var state_4556__$1 = state_4556;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_4568_4588 = state_4556__$1;
                                    statearr_4568_4588[1] = 8;
                                  } else {
                                    var statearr_4569_4589 = state_4556__$1;
                                    statearr_4569_4589[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_4557 === 14) {
                                    var inst_4550 = state_4556[2];
                                    var state_4556__$1 = state_4556;
                                    var statearr_4570_4590 = state_4556__$1;
                                    statearr_4570_4590[2] = inst_4550;
                                    statearr_4570_4590[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_4557 === 10) {
                                      var inst_4542 = state_4556[2];
                                      var state_4556__$1 = state_4556;
                                      var statearr_4571_4591 = state_4556__$1;
                                      statearr_4571_4591[2] = inst_4542;
                                      statearr_4571_4591[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_4557 === 8) {
                                        var inst_4539 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_4556__$1 = state_4556;
                                        var statearr_4572_4592 = state_4556__$1;
                                        statearr_4572_4592[2] = inst_4539;
                                        statearr_4572_4592[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___4578);
        return function(switch__4336__auto__, c__4431__auto___4578) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_4573 = [null, null, null, null, null, null, null, null];
              statearr_4573[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_4573[1] = 1;
              return statearr_4573;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_4556) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4556);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4574) {
                    if (e4574 instanceof Object) {
                      var ex__4340__auto__ = e4574;
                      var statearr_4575_4593 = state_4556;
                      statearr_4575_4593[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4556);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4574;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4594 = state_4556;
                  state_4556 = G__4594;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_4556) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_4556);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___4578);
      }();
      var state__4433__auto__ = function() {
        var statearr_4576 = f__4432__auto__.call(null);
        statearr_4576[6] = c__4431__auto___4578;
        return statearr_4576;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___4578));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__4595) {
      var vec__4596 = p__4595;
      var v = cljs.core.nth.call(null, vec__4596, 0, null);
      var p = cljs.core.nth.call(null, vec__4596, 1, null);
      var job = vec__4596;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__4431__auto___4767 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results) {
          return function() {
            var f__4432__auto__ = function() {
              var switch__4336__auto__ = function(c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results) {
                return function(state_4603) {
                  var state_val_4604 = state_4603[1];
                  if (state_val_4604 === 1) {
                    var state_4603__$1 = state_4603;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4603__$1, 2, res, v);
                  } else {
                    if (state_val_4604 === 2) {
                      var inst_4600 = state_4603[2];
                      var inst_4601 = cljs.core.async.close_BANG_.call(null, res);
                      var state_4603__$1 = function() {
                        var statearr_4605 = state_4603;
                        statearr_4605[7] = inst_4600;
                        return statearr_4605;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4603__$1, inst_4601);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results);
              return function(switch__4336__auto__, c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0 = function() {
                    var statearr_4606 = [null, null, null, null, null, null, null, null];
                    statearr_4606[0] = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                    statearr_4606[1] = 1;
                    return statearr_4606;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1 = function(state_4603) {
                    while (true) {
                      var ret_value__4338__auto__ = function() {
                        try {
                          while (true) {
                            var result__4339__auto__ = switch__4336__auto__.call(null, state_4603);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__4339__auto__;
                            }
                            break;
                          }
                        } catch (e4607) {
                          if (e4607 instanceof Object) {
                            var ex__4340__auto__ = e4607;
                            var statearr_4608_4768 = state_4603;
                            statearr_4608_4768[5] = ex__4340__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4603);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e4607;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__4769 = state_4603;
                        state_4603 = G__4769;
                        continue;
                      } else {
                        return ret_value__4338__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = function(state_4603) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1.call(this, state_4603);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                }();
              }(switch__4336__auto__, c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results);
            }();
            var state__4433__auto__ = function() {
              var statearr_4609 = f__4432__auto__.call(null);
              statearr_4609[6] = c__4431__auto___4767;
              return statearr_4609;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
          };
        }(c__4431__auto___4767, res, vec__4596, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__4610) {
      var vec__4611 = p__4610;
      var v = cljs.core.nth.call(null, vec__4611, 0, null);
      var p = cljs.core.nth.call(null, vec__4611, 1, null);
      var job = vec__4611;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4607__auto___4770 = n;
  var __4771 = 0;
  while (true) {
    if (__4771 < n__4607__auto___4770) {
      var G__4614_4772 = type;
      var G__4614_4773__$1 = G__4614_4772 instanceof cljs.core.Keyword ? G__4614_4772.fqn : null;
      switch(G__4614_4773__$1) {
        case "compute":
          var c__4431__auto___4775 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__4771, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
            return function() {
              var f__4432__auto__ = function() {
                var switch__4336__auto__ = function(__4771, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
                  return function(state_4627) {
                    var state_val_4628 = state_4627[1];
                    if (state_val_4628 === 1) {
                      var state_4627__$1 = state_4627;
                      var statearr_4629_4776 = state_4627__$1;
                      statearr_4629_4776[2] = null;
                      statearr_4629_4776[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4628 === 2) {
                        var state_4627__$1 = state_4627;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4627__$1, 4, jobs);
                      } else {
                        if (state_val_4628 === 3) {
                          var inst_4625 = state_4627[2];
                          var state_4627__$1 = state_4627;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4627__$1, inst_4625);
                        } else {
                          if (state_val_4628 === 4) {
                            var inst_4617 = state_4627[2];
                            var inst_4618 = process.call(null, inst_4617);
                            var state_4627__$1 = state_4627;
                            if (cljs.core.truth_(inst_4618)) {
                              var statearr_4630_4777 = state_4627__$1;
                              statearr_4630_4777[1] = 5;
                            } else {
                              var statearr_4631_4778 = state_4627__$1;
                              statearr_4631_4778[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4628 === 5) {
                              var state_4627__$1 = state_4627;
                              var statearr_4632_4779 = state_4627__$1;
                              statearr_4632_4779[2] = null;
                              statearr_4632_4779[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4628 === 6) {
                                var state_4627__$1 = state_4627;
                                var statearr_4633_4780 = state_4627__$1;
                                statearr_4633_4780[2] = null;
                                statearr_4633_4780[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4628 === 7) {
                                  var inst_4623 = state_4627[2];
                                  var state_4627__$1 = state_4627;
                                  var statearr_4634_4781 = state_4627__$1;
                                  statearr_4634_4781[2] = inst_4623;
                                  statearr_4634_4781[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__4771, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async);
                return function(__4771, switch__4336__auto__, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0 = function() {
                      var statearr_4635 = [null, null, null, null, null, null, null];
                      statearr_4635[0] = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                      statearr_4635[1] = 1;
                      return statearr_4635;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1 = function(state_4627) {
                      while (true) {
                        var ret_value__4338__auto__ = function() {
                          try {
                            while (true) {
                              var result__4339__auto__ = switch__4336__auto__.call(null, state_4627);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__4339__auto__;
                              }
                              break;
                            }
                          } catch (e4636) {
                            if (e4636 instanceof Object) {
                              var ex__4340__auto__ = e4636;
                              var statearr_4637_4782 = state_4627;
                              statearr_4637_4782[5] = ex__4340__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4627);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e4636;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__4783 = state_4627;
                          state_4627 = G__4783;
                          continue;
                        } else {
                          return ret_value__4338__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = function(state_4627) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1.call(this, state_4627);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                  }();
                }(__4771, switch__4336__auto__, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async);
              }();
              var state__4433__auto__ = function() {
                var statearr_4638 = f__4432__auto__.call(null);
                statearr_4638[6] = c__4431__auto___4775;
                return statearr_4638;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
            };
          }(__4771, c__4431__auto___4775, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async));
          break;
        case "async":
          var c__4431__auto___4784 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__4771, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
            return function() {
              var f__4432__auto__ = function() {
                var switch__4336__auto__ = function(__4771, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
                  return function(state_4651) {
                    var state_val_4652 = state_4651[1];
                    if (state_val_4652 === 1) {
                      var state_4651__$1 = state_4651;
                      var statearr_4653_4785 = state_4651__$1;
                      statearr_4653_4785[2] = null;
                      statearr_4653_4785[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4652 === 2) {
                        var state_4651__$1 = state_4651;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4651__$1, 4, jobs);
                      } else {
                        if (state_val_4652 === 3) {
                          var inst_4649 = state_4651[2];
                          var state_4651__$1 = state_4651;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4651__$1, inst_4649);
                        } else {
                          if (state_val_4652 === 4) {
                            var inst_4641 = state_4651[2];
                            var inst_4642 = async.call(null, inst_4641);
                            var state_4651__$1 = state_4651;
                            if (cljs.core.truth_(inst_4642)) {
                              var statearr_4654_4786 = state_4651__$1;
                              statearr_4654_4786[1] = 5;
                            } else {
                              var statearr_4655_4787 = state_4651__$1;
                              statearr_4655_4787[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4652 === 5) {
                              var state_4651__$1 = state_4651;
                              var statearr_4656_4788 = state_4651__$1;
                              statearr_4656_4788[2] = null;
                              statearr_4656_4788[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4652 === 6) {
                                var state_4651__$1 = state_4651;
                                var statearr_4657_4789 = state_4651__$1;
                                statearr_4657_4789[2] = null;
                                statearr_4657_4789[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4652 === 7) {
                                  var inst_4647 = state_4651[2];
                                  var state_4651__$1 = state_4651;
                                  var statearr_4658_4790 = state_4651__$1;
                                  statearr_4658_4790[2] = inst_4647;
                                  statearr_4658_4790[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__4771, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async);
                return function(__4771, switch__4336__auto__, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0 = function() {
                      var statearr_4659 = [null, null, null, null, null, null, null];
                      statearr_4659[0] = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                      statearr_4659[1] = 1;
                      return statearr_4659;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1 = function(state_4651) {
                      while (true) {
                        var ret_value__4338__auto__ = function() {
                          try {
                            while (true) {
                              var result__4339__auto__ = switch__4336__auto__.call(null, state_4651);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__4339__auto__;
                              }
                              break;
                            }
                          } catch (e4660) {
                            if (e4660 instanceof Object) {
                              var ex__4340__auto__ = e4660;
                              var statearr_4661_4791 = state_4651;
                              statearr_4661_4791[5] = ex__4340__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4651);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e4660;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__4792 = state_4651;
                          state_4651 = G__4792;
                          continue;
                        } else {
                          return ret_value__4338__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = function(state_4651) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1.call(this, state_4651);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
                  }();
                }(__4771, switch__4336__auto__, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async);
              }();
              var state__4433__auto__ = function() {
                var statearr_4662 = f__4432__auto__.call(null);
                statearr_4662[6] = c__4431__auto___4784;
                return statearr_4662;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
            };
          }(__4771, c__4431__auto___4784, G__4614_4772, G__4614_4773__$1, n__4607__auto___4770, jobs, results, process, async));
          break;
        default:
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__4614_4773__$1)].join(""));
      }
      var G__4793 = __4771 + 1;
      __4771 = G__4793;
      continue;
    } else {
    }
    break;
  }
  var c__4431__auto___4794 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___4794, jobs, results, process, async) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___4794, jobs, results, process, async) {
          return function(state_4684) {
            var state_val_4685 = state_4684[1];
            if (state_val_4685 === 7) {
              var inst_4680 = state_4684[2];
              var state_4684__$1 = state_4684;
              var statearr_4686_4795 = state_4684__$1;
              statearr_4686_4795[2] = inst_4680;
              statearr_4686_4795[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4685 === 1) {
                var state_4684__$1 = state_4684;
                var statearr_4687_4796 = state_4684__$1;
                statearr_4687_4796[2] = null;
                statearr_4687_4796[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4685 === 4) {
                  var inst_4665 = state_4684[7];
                  var inst_4665__$1 = state_4684[2];
                  var inst_4666 = inst_4665__$1 == null;
                  var state_4684__$1 = function() {
                    var statearr_4688 = state_4684;
                    statearr_4688[7] = inst_4665__$1;
                    return statearr_4688;
                  }();
                  if (cljs.core.truth_(inst_4666)) {
                    var statearr_4689_4797 = state_4684__$1;
                    statearr_4689_4797[1] = 5;
                  } else {
                    var statearr_4690_4798 = state_4684__$1;
                    statearr_4690_4798[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4685 === 6) {
                    var inst_4665 = state_4684[7];
                    var inst_4670 = state_4684[8];
                    var inst_4670__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_4671 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_4672 = [inst_4665, inst_4670__$1];
                    var inst_4673 = new cljs.core.PersistentVector(null, 2, 5, inst_4671, inst_4672, null);
                    var state_4684__$1 = function() {
                      var statearr_4691 = state_4684;
                      statearr_4691[8] = inst_4670__$1;
                      return statearr_4691;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4684__$1, 8, jobs, inst_4673);
                  } else {
                    if (state_val_4685 === 3) {
                      var inst_4682 = state_4684[2];
                      var state_4684__$1 = state_4684;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4684__$1, inst_4682);
                    } else {
                      if (state_val_4685 === 2) {
                        var state_4684__$1 = state_4684;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4684__$1, 4, from);
                      } else {
                        if (state_val_4685 === 9) {
                          var inst_4677 = state_4684[2];
                          var state_4684__$1 = function() {
                            var statearr_4692 = state_4684;
                            statearr_4692[9] = inst_4677;
                            return statearr_4692;
                          }();
                          var statearr_4693_4799 = state_4684__$1;
                          statearr_4693_4799[2] = null;
                          statearr_4693_4799[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4685 === 5) {
                            var inst_4668 = cljs.core.async.close_BANG_.call(null, jobs);
                            var state_4684__$1 = state_4684;
                            var statearr_4694_4800 = state_4684__$1;
                            statearr_4694_4800[2] = inst_4668;
                            statearr_4694_4800[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4685 === 8) {
                              var inst_4670 = state_4684[8];
                              var inst_4675 = state_4684[2];
                              var state_4684__$1 = function() {
                                var statearr_4695 = state_4684;
                                statearr_4695[10] = inst_4675;
                                return statearr_4695;
                              }();
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4684__$1, 9, results, inst_4670);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___4794, jobs, results, process, async);
        return function(switch__4336__auto__, c__4431__auto___4794, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0 = function() {
              var statearr_4696 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_4696[0] = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
              statearr_4696[1] = 1;
              return statearr_4696;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1 = function(state_4684) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4684);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4697) {
                    if (e4697 instanceof Object) {
                      var ex__4340__auto__ = e4697;
                      var statearr_4698_4801 = state_4684;
                      statearr_4698_4801[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4684);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4697;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4802 = state_4684;
                  state_4684 = G__4802;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = function(state_4684) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1.call(this, state_4684);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___4794, jobs, results, process, async);
      }();
      var state__4433__auto__ = function() {
        var statearr_4699 = f__4432__auto__.call(null);
        statearr_4699[6] = c__4431__auto___4794;
        return statearr_4699;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___4794, jobs, results, process, async));
  var c__4431__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto__, jobs, results, process, async) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto__, jobs, results, process, async) {
          return function(state_4737) {
            var state_val_4738 = state_4737[1];
            if (state_val_4738 === 7) {
              var inst_4733 = state_4737[2];
              var state_4737__$1 = state_4737;
              var statearr_4739_4803 = state_4737__$1;
              statearr_4739_4803[2] = inst_4733;
              statearr_4739_4803[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4738 === 20) {
                var state_4737__$1 = state_4737;
                var statearr_4740_4804 = state_4737__$1;
                statearr_4740_4804[2] = null;
                statearr_4740_4804[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4738 === 1) {
                  var state_4737__$1 = state_4737;
                  var statearr_4741_4805 = state_4737__$1;
                  statearr_4741_4805[2] = null;
                  statearr_4741_4805[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4738 === 4) {
                    var inst_4702 = state_4737[7];
                    var inst_4702__$1 = state_4737[2];
                    var inst_4703 = inst_4702__$1 == null;
                    var state_4737__$1 = function() {
                      var statearr_4742 = state_4737;
                      statearr_4742[7] = inst_4702__$1;
                      return statearr_4742;
                    }();
                    if (cljs.core.truth_(inst_4703)) {
                      var statearr_4743_4806 = state_4737__$1;
                      statearr_4743_4806[1] = 5;
                    } else {
                      var statearr_4744_4807 = state_4737__$1;
                      statearr_4744_4807[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4738 === 15) {
                      var inst_4715 = state_4737[8];
                      var state_4737__$1 = state_4737;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4737__$1, 18, to, inst_4715);
                    } else {
                      if (state_val_4738 === 21) {
                        var inst_4728 = state_4737[2];
                        var state_4737__$1 = state_4737;
                        var statearr_4745_4808 = state_4737__$1;
                        statearr_4745_4808[2] = inst_4728;
                        statearr_4745_4808[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_4738 === 13) {
                          var inst_4730 = state_4737[2];
                          var state_4737__$1 = function() {
                            var statearr_4746 = state_4737;
                            statearr_4746[9] = inst_4730;
                            return statearr_4746;
                          }();
                          var statearr_4747_4809 = state_4737__$1;
                          statearr_4747_4809[2] = null;
                          statearr_4747_4809[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4738 === 6) {
                            var inst_4702 = state_4737[7];
                            var state_4737__$1 = state_4737;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4737__$1, 11, inst_4702);
                          } else {
                            if (state_val_4738 === 17) {
                              var inst_4723 = state_4737[2];
                              var state_4737__$1 = state_4737;
                              if (cljs.core.truth_(inst_4723)) {
                                var statearr_4748_4810 = state_4737__$1;
                                statearr_4748_4810[1] = 19;
                              } else {
                                var statearr_4749_4811 = state_4737__$1;
                                statearr_4749_4811[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4738 === 3) {
                                var inst_4735 = state_4737[2];
                                var state_4737__$1 = state_4737;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4737__$1, inst_4735);
                              } else {
                                if (state_val_4738 === 12) {
                                  var inst_4712 = state_4737[10];
                                  var state_4737__$1 = state_4737;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4737__$1, 14, inst_4712);
                                } else {
                                  if (state_val_4738 === 2) {
                                    var state_4737__$1 = state_4737;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4737__$1, 4, results);
                                  } else {
                                    if (state_val_4738 === 19) {
                                      var state_4737__$1 = state_4737;
                                      var statearr_4750_4812 = state_4737__$1;
                                      statearr_4750_4812[2] = null;
                                      statearr_4750_4812[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_4738 === 11) {
                                        var inst_4712 = state_4737[2];
                                        var state_4737__$1 = function() {
                                          var statearr_4751 = state_4737;
                                          statearr_4751[10] = inst_4712;
                                          return statearr_4751;
                                        }();
                                        var statearr_4752_4813 = state_4737__$1;
                                        statearr_4752_4813[2] = null;
                                        statearr_4752_4813[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_4738 === 9) {
                                          var state_4737__$1 = state_4737;
                                          var statearr_4753_4814 = state_4737__$1;
                                          statearr_4753_4814[2] = null;
                                          statearr_4753_4814[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_4738 === 5) {
                                            var state_4737__$1 = state_4737;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_4754_4815 = state_4737__$1;
                                              statearr_4754_4815[1] = 8;
                                            } else {
                                              var statearr_4755_4816 = state_4737__$1;
                                              statearr_4755_4816[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_4738 === 14) {
                                              var inst_4717 = state_4737[11];
                                              var inst_4715 = state_4737[8];
                                              var inst_4715__$1 = state_4737[2];
                                              var inst_4716 = inst_4715__$1 == null;
                                              var inst_4717__$1 = cljs.core.not.call(null, inst_4716);
                                              var state_4737__$1 = function() {
                                                var statearr_4756 = state_4737;
                                                statearr_4756[11] = inst_4717__$1;
                                                statearr_4756[8] = inst_4715__$1;
                                                return statearr_4756;
                                              }();
                                              if (inst_4717__$1) {
                                                var statearr_4757_4817 = state_4737__$1;
                                                statearr_4757_4817[1] = 15;
                                              } else {
                                                var statearr_4758_4818 = state_4737__$1;
                                                statearr_4758_4818[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_4738 === 16) {
                                                var inst_4717 = state_4737[11];
                                                var state_4737__$1 = state_4737;
                                                var statearr_4759_4819 = state_4737__$1;
                                                statearr_4759_4819[2] = inst_4717;
                                                statearr_4759_4819[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_4738 === 10) {
                                                  var inst_4709 = state_4737[2];
                                                  var state_4737__$1 = state_4737;
                                                  var statearr_4760_4820 = state_4737__$1;
                                                  statearr_4760_4820[2] = inst_4709;
                                                  statearr_4760_4820[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_4738 === 18) {
                                                    var inst_4720 = state_4737[2];
                                                    var state_4737__$1 = state_4737;
                                                    var statearr_4761_4821 = state_4737__$1;
                                                    statearr_4761_4821[2] = inst_4720;
                                                    statearr_4761_4821[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_4738 === 8) {
                                                      var inst_4706 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_4737__$1 = state_4737;
                                                      var statearr_4762_4822 = state_4737__$1;
                                                      statearr_4762_4822[2] = inst_4706;
                                                      statearr_4762_4822[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto__, jobs, results, process, async);
        return function(switch__4336__auto__, c__4431__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0 = function() {
              var statearr_4763 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_4763[0] = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
              statearr_4763[1] = 1;
              return statearr_4763;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1 = function(state_4737) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4737);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4764) {
                    if (e4764 instanceof Object) {
                      var ex__4340__auto__ = e4764;
                      var statearr_4765_4823 = state_4737;
                      statearr_4765_4823[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4737);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4764;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4824 = state_4737;
                  state_4737 = G__4824;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__ = function(state_4737) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1.call(this, state_4737);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__4337__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto__, jobs, results, process, async);
      }();
      var state__4433__auto__ = function() {
        var statearr_4766 = f__4432__auto__.call(null);
        statearr_4766[6] = c__4431__auto__;
        return statearr_4766;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto__, jobs, results, process, async));
  return c__4431__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var G__4826 = arguments.length;
  switch(G__4826) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var G__4829 = arguments.length;
  switch(G__4829) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var G__4832 = arguments.length;
  switch(G__4832) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__4431__auto___4881 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___4881, tc, fc) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___4881, tc, fc) {
          return function(state_4858) {
            var state_val_4859 = state_4858[1];
            if (state_val_4859 === 7) {
              var inst_4854 = state_4858[2];
              var state_4858__$1 = state_4858;
              var statearr_4860_4882 = state_4858__$1;
              statearr_4860_4882[2] = inst_4854;
              statearr_4860_4882[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4859 === 1) {
                var state_4858__$1 = state_4858;
                var statearr_4861_4883 = state_4858__$1;
                statearr_4861_4883[2] = null;
                statearr_4861_4883[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4859 === 4) {
                  var inst_4835 = state_4858[7];
                  var inst_4835__$1 = state_4858[2];
                  var inst_4836 = inst_4835__$1 == null;
                  var state_4858__$1 = function() {
                    var statearr_4862 = state_4858;
                    statearr_4862[7] = inst_4835__$1;
                    return statearr_4862;
                  }();
                  if (cljs.core.truth_(inst_4836)) {
                    var statearr_4863_4884 = state_4858__$1;
                    statearr_4863_4884[1] = 5;
                  } else {
                    var statearr_4864_4885 = state_4858__$1;
                    statearr_4864_4885[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4859 === 13) {
                    var state_4858__$1 = state_4858;
                    var statearr_4865_4886 = state_4858__$1;
                    statearr_4865_4886[2] = null;
                    statearr_4865_4886[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4859 === 6) {
                      var inst_4835 = state_4858[7];
                      var inst_4841 = p.call(null, inst_4835);
                      var state_4858__$1 = state_4858;
                      if (cljs.core.truth_(inst_4841)) {
                        var statearr_4866_4887 = state_4858__$1;
                        statearr_4866_4887[1] = 9;
                      } else {
                        var statearr_4867_4888 = state_4858__$1;
                        statearr_4867_4888[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4859 === 3) {
                        var inst_4856 = state_4858[2];
                        var state_4858__$1 = state_4858;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4858__$1, inst_4856);
                      } else {
                        if (state_val_4859 === 12) {
                          var state_4858__$1 = state_4858;
                          var statearr_4868_4889 = state_4858__$1;
                          statearr_4868_4889[2] = null;
                          statearr_4868_4889[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4859 === 2) {
                            var state_4858__$1 = state_4858;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4858__$1, 4, ch);
                          } else {
                            if (state_val_4859 === 11) {
                              var inst_4835 = state_4858[7];
                              var inst_4845 = state_4858[2];
                              var state_4858__$1 = state_4858;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4858__$1, 8, inst_4845, inst_4835);
                            } else {
                              if (state_val_4859 === 9) {
                                var state_4858__$1 = state_4858;
                                var statearr_4869_4890 = state_4858__$1;
                                statearr_4869_4890[2] = tc;
                                statearr_4869_4890[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4859 === 5) {
                                  var inst_4838 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_4839 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_4858__$1 = function() {
                                    var statearr_4870 = state_4858;
                                    statearr_4870[8] = inst_4838;
                                    return statearr_4870;
                                  }();
                                  var statearr_4871_4891 = state_4858__$1;
                                  statearr_4871_4891[2] = inst_4839;
                                  statearr_4871_4891[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_4859 === 14) {
                                    var inst_4852 = state_4858[2];
                                    var state_4858__$1 = state_4858;
                                    var statearr_4872_4892 = state_4858__$1;
                                    statearr_4872_4892[2] = inst_4852;
                                    statearr_4872_4892[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_4859 === 10) {
                                      var state_4858__$1 = state_4858;
                                      var statearr_4873_4893 = state_4858__$1;
                                      statearr_4873_4893[2] = fc;
                                      statearr_4873_4893[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_4859 === 8) {
                                        var inst_4847 = state_4858[2];
                                        var state_4858__$1 = state_4858;
                                        if (cljs.core.truth_(inst_4847)) {
                                          var statearr_4874_4894 = state_4858__$1;
                                          statearr_4874_4894[1] = 12;
                                        } else {
                                          var statearr_4875_4895 = state_4858__$1;
                                          statearr_4875_4895[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___4881, tc, fc);
        return function(switch__4336__auto__, c__4431__auto___4881, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_4876 = [null, null, null, null, null, null, null, null, null];
              statearr_4876[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_4876[1] = 1;
              return statearr_4876;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_4858) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4858);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4877) {
                    if (e4877 instanceof Object) {
                      var ex__4340__auto__ = e4877;
                      var statearr_4878_4896 = state_4858;
                      statearr_4878_4896[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4858);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4877;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4897 = state_4858;
                  state_4858 = G__4897;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_4858) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_4858);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___4881, tc, fc);
      }();
      var state__4433__auto__ = function() {
        var statearr_4879 = f__4432__auto__.call(null);
        statearr_4879[6] = c__4431__auto___4881;
        return statearr_4879;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___4881, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__4431__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto__) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto__) {
          return function(state_4918) {
            var state_val_4919 = state_4918[1];
            if (state_val_4919 === 7) {
              var inst_4914 = state_4918[2];
              var state_4918__$1 = state_4918;
              var statearr_4920_4938 = state_4918__$1;
              statearr_4920_4938[2] = inst_4914;
              statearr_4920_4938[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4919 === 1) {
                var inst_4898 = init;
                var state_4918__$1 = function() {
                  var statearr_4921 = state_4918;
                  statearr_4921[7] = inst_4898;
                  return statearr_4921;
                }();
                var statearr_4922_4939 = state_4918__$1;
                statearr_4922_4939[2] = null;
                statearr_4922_4939[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4919 === 4) {
                  var inst_4901 = state_4918[8];
                  var inst_4901__$1 = state_4918[2];
                  var inst_4902 = inst_4901__$1 == null;
                  var state_4918__$1 = function() {
                    var statearr_4923 = state_4918;
                    statearr_4923[8] = inst_4901__$1;
                    return statearr_4923;
                  }();
                  if (cljs.core.truth_(inst_4902)) {
                    var statearr_4924_4940 = state_4918__$1;
                    statearr_4924_4940[1] = 5;
                  } else {
                    var statearr_4925_4941 = state_4918__$1;
                    statearr_4925_4941[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_4919 === 6) {
                    var inst_4898 = state_4918[7];
                    var inst_4901 = state_4918[8];
                    var inst_4905 = state_4918[9];
                    var inst_4905__$1 = f.call(null, inst_4898, inst_4901);
                    var inst_4906 = cljs.core.reduced_QMARK_.call(null, inst_4905__$1);
                    var state_4918__$1 = function() {
                      var statearr_4926 = state_4918;
                      statearr_4926[9] = inst_4905__$1;
                      return statearr_4926;
                    }();
                    if (inst_4906) {
                      var statearr_4927_4942 = state_4918__$1;
                      statearr_4927_4942[1] = 8;
                    } else {
                      var statearr_4928_4943 = state_4918__$1;
                      statearr_4928_4943[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4919 === 3) {
                      var inst_4916 = state_4918[2];
                      var state_4918__$1 = state_4918;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4918__$1, inst_4916);
                    } else {
                      if (state_val_4919 === 2) {
                        var state_4918__$1 = state_4918;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4918__$1, 4, ch);
                      } else {
                        if (state_val_4919 === 9) {
                          var inst_4905 = state_4918[9];
                          var inst_4898 = inst_4905;
                          var state_4918__$1 = function() {
                            var statearr_4929 = state_4918;
                            statearr_4929[7] = inst_4898;
                            return statearr_4929;
                          }();
                          var statearr_4930_4944 = state_4918__$1;
                          statearr_4930_4944[2] = null;
                          statearr_4930_4944[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4919 === 5) {
                            var inst_4898 = state_4918[7];
                            var state_4918__$1 = state_4918;
                            var statearr_4931_4945 = state_4918__$1;
                            statearr_4931_4945[2] = inst_4898;
                            statearr_4931_4945[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4919 === 10) {
                              var inst_4912 = state_4918[2];
                              var state_4918__$1 = state_4918;
                              var statearr_4932_4946 = state_4918__$1;
                              statearr_4932_4946[2] = inst_4912;
                              statearr_4932_4946[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4919 === 8) {
                                var inst_4905 = state_4918[9];
                                var inst_4908 = cljs.core.deref.call(null, inst_4905);
                                var state_4918__$1 = state_4918;
                                var statearr_4933_4947 = state_4918__$1;
                                statearr_4933_4947[2] = inst_4908;
                                statearr_4933_4947[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto__);
        return function(switch__4336__auto__, c__4431__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__4337__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__4337__auto____0 = function() {
              var statearr_4934 = [null, null, null, null, null, null, null, null, null, null];
              statearr_4934[0] = cljs$core$async$reduce_$_state_machine__4337__auto__;
              statearr_4934[1] = 1;
              return statearr_4934;
            };
            var cljs$core$async$reduce_$_state_machine__4337__auto____1 = function(state_4918) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4918);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4935) {
                    if (e4935 instanceof Object) {
                      var ex__4340__auto__ = e4935;
                      var statearr_4936_4948 = state_4918;
                      statearr_4936_4948[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4918);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4935;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4949 = state_4918;
                  state_4918 = G__4949;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__4337__auto__ = function(state_4918) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__4337__auto____1.call(this, state_4918);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__4337__auto____0;
            cljs$core$async$reduce_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__4337__auto____1;
            return cljs$core$async$reduce_$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto__);
      }();
      var state__4433__auto__ = function() {
        var statearr_4937 = f__4432__auto__.call(null);
        statearr_4937[6] = c__4431__auto__;
        return statearr_4937;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto__));
  return c__4431__auto__;
};
cljs.core.async.transduce = function cljs$core$async$transduce(xform, f, init, ch) {
  var f__$1 = xform.call(null, f);
  var c__4431__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto__, f__$1) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto__, f__$1) {
          return function(state_4955) {
            var state_val_4956 = state_4955[1];
            if (state_val_4956 === 1) {
              var inst_4950 = cljs.core.async.reduce.call(null, f__$1, init, ch);
              var state_4955__$1 = state_4955;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_4955__$1, 2, inst_4950);
            } else {
              if (state_val_4956 === 2) {
                var inst_4952 = state_4955[2];
                var inst_4953 = f__$1.call(null, inst_4952);
                var state_4955__$1 = state_4955;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4955__$1, inst_4953);
              } else {
                return null;
              }
            }
          };
        }(c__4431__auto__, f__$1);
        return function(switch__4336__auto__, c__4431__auto__, f__$1) {
          return function() {
            var cljs$core$async$transduce_$_state_machine__4337__auto__ = null;
            var cljs$core$async$transduce_$_state_machine__4337__auto____0 = function() {
              var statearr_4957 = [null, null, null, null, null, null, null];
              statearr_4957[0] = cljs$core$async$transduce_$_state_machine__4337__auto__;
              statearr_4957[1] = 1;
              return statearr_4957;
            };
            var cljs$core$async$transduce_$_state_machine__4337__auto____1 = function(state_4955) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4955);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e4958) {
                    if (e4958 instanceof Object) {
                      var ex__4340__auto__ = e4958;
                      var statearr_4959_4961 = state_4955;
                      statearr_4959_4961[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4955);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e4958;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__4962 = state_4955;
                  state_4955 = G__4962;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$transduce_$_state_machine__4337__auto__ = function(state_4955) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$transduce_$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$transduce_$_state_machine__4337__auto____1.call(this, state_4955);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$transduce_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$transduce_$_state_machine__4337__auto____0;
            cljs$core$async$transduce_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$transduce_$_state_machine__4337__auto____1;
            return cljs$core$async$transduce_$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto__, f__$1);
      }();
      var state__4433__auto__ = function() {
        var statearr_4960 = f__4432__auto__.call(null);
        statearr_4960[6] = c__4431__auto__;
        return statearr_4960;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto__, f__$1));
  return c__4431__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var G__4964 = arguments.length;
  switch(G__4964) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__4431__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto__) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto__) {
          return function(state_4989) {
            var state_val_4990 = state_4989[1];
            if (state_val_4990 === 7) {
              var inst_4971 = state_4989[2];
              var state_4989__$1 = state_4989;
              var statearr_4991_5012 = state_4989__$1;
              statearr_4991_5012[2] = inst_4971;
              statearr_4991_5012[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_4990 === 1) {
                var inst_4965 = cljs.core.seq.call(null, coll);
                var inst_4966 = inst_4965;
                var state_4989__$1 = function() {
                  var statearr_4992 = state_4989;
                  statearr_4992[7] = inst_4966;
                  return statearr_4992;
                }();
                var statearr_4993_5013 = state_4989__$1;
                statearr_4993_5013[2] = null;
                statearr_4993_5013[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_4990 === 4) {
                  var inst_4966 = state_4989[7];
                  var inst_4969 = cljs.core.first.call(null, inst_4966);
                  var state_4989__$1 = state_4989;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_4989__$1, 7, ch, inst_4969);
                } else {
                  if (state_val_4990 === 13) {
                    var inst_4983 = state_4989[2];
                    var state_4989__$1 = state_4989;
                    var statearr_4994_5014 = state_4989__$1;
                    statearr_4994_5014[2] = inst_4983;
                    statearr_4994_5014[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_4990 === 6) {
                      var inst_4974 = state_4989[2];
                      var state_4989__$1 = state_4989;
                      if (cljs.core.truth_(inst_4974)) {
                        var statearr_4995_5015 = state_4989__$1;
                        statearr_4995_5015[1] = 8;
                      } else {
                        var statearr_4996_5016 = state_4989__$1;
                        statearr_4996_5016[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_4990 === 3) {
                        var inst_4987 = state_4989[2];
                        var state_4989__$1 = state_4989;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_4989__$1, inst_4987);
                      } else {
                        if (state_val_4990 === 12) {
                          var state_4989__$1 = state_4989;
                          var statearr_4997_5017 = state_4989__$1;
                          statearr_4997_5017[2] = null;
                          statearr_4997_5017[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_4990 === 2) {
                            var inst_4966 = state_4989[7];
                            var state_4989__$1 = state_4989;
                            if (cljs.core.truth_(inst_4966)) {
                              var statearr_4998_5018 = state_4989__$1;
                              statearr_4998_5018[1] = 4;
                            } else {
                              var statearr_4999_5019 = state_4989__$1;
                              statearr_4999_5019[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_4990 === 11) {
                              var inst_4980 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_4989__$1 = state_4989;
                              var statearr_5000_5020 = state_4989__$1;
                              statearr_5000_5020[2] = inst_4980;
                              statearr_5000_5020[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_4990 === 9) {
                                var state_4989__$1 = state_4989;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_5001_5021 = state_4989__$1;
                                  statearr_5001_5021[1] = 11;
                                } else {
                                  var statearr_5002_5022 = state_4989__$1;
                                  statearr_5002_5022[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_4990 === 5) {
                                  var inst_4966 = state_4989[7];
                                  var state_4989__$1 = state_4989;
                                  var statearr_5003_5023 = state_4989__$1;
                                  statearr_5003_5023[2] = inst_4966;
                                  statearr_5003_5023[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_4990 === 10) {
                                    var inst_4985 = state_4989[2];
                                    var state_4989__$1 = state_4989;
                                    var statearr_5004_5024 = state_4989__$1;
                                    statearr_5004_5024[2] = inst_4985;
                                    statearr_5004_5024[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_4990 === 8) {
                                      var inst_4966 = state_4989[7];
                                      var inst_4976 = cljs.core.next.call(null, inst_4966);
                                      var inst_4966__$1 = inst_4976;
                                      var state_4989__$1 = function() {
                                        var statearr_5005 = state_4989;
                                        statearr_5005[7] = inst_4966__$1;
                                        return statearr_5005;
                                      }();
                                      var statearr_5006_5025 = state_4989__$1;
                                      statearr_5006_5025[2] = null;
                                      statearr_5006_5025[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto__);
        return function(switch__4336__auto__, c__4431__auto__) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5007 = [null, null, null, null, null, null, null, null];
              statearr_5007[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5007[1] = 1;
              return statearr_5007;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_4989) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_4989);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5008) {
                    if (e5008 instanceof Object) {
                      var ex__4340__auto__ = e5008;
                      var statearr_5009_5026 = state_4989;
                      statearr_5009_5026[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_4989);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5008;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5027 = state_4989;
                  state_4989 = G__5027;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_4989) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_4989);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto__);
      }();
      var state__4433__auto__ = function() {
        var statearr_5010 = f__4432__auto__.call(null);
        statearr_5010[6] = c__4431__auto__;
        return statearr_5010;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto__));
  return c__4431__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4433__auto__ = _ == null ? null : _;
    var m__4434__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, _);
    } else {
      var m__4431__auto__ = cljs.core.async.muxch_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core.async.tap_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, ch);
    } else {
      var m__4431__auto__ = cljs.core.async.untap_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m);
    } else {
      var m__4431__auto__ = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5028 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5028 = function(ch, cs, meta5029) {
        this.ch = ch;
        this.cs = cs;
        this.meta5029 = meta5029;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_5030, meta5029__$1) {
          var self__ = this;
          var _5030__$1 = this;
          return new cljs.core.async.t_cljs$core$async5028(self__.ch, self__.cs, meta5029__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_5030) {
          var self__ = this;
          var _5030__$1 = this;
          return self__.meta5029;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mult$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta5029", "meta5029", 2045027453, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async5028.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5028.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5028";
      cljs.core.async.t_cljs$core$async5028.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
          return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5028");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async5028 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async5028(ch__$1, cs__$1, meta5029) {
          return new cljs.core.async.t_cljs$core$async5028(ch__$1, cs__$1, meta5029);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async5028(ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__4431__auto___5250 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5250, cs, m, dchan, dctr, done) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5250, cs, m, dchan, dctr, done) {
          return function(state_5165) {
            var state_val_5166 = state_5165[1];
            if (state_val_5166 === 7) {
              var inst_5161 = state_5165[2];
              var state_5165__$1 = state_5165;
              var statearr_5167_5251 = state_5165__$1;
              statearr_5167_5251[2] = inst_5161;
              statearr_5167_5251[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5166 === 20) {
                var inst_5064 = state_5165[7];
                var inst_5076 = cljs.core.first.call(null, inst_5064);
                var inst_5077 = cljs.core.nth.call(null, inst_5076, 0, null);
                var inst_5078 = cljs.core.nth.call(null, inst_5076, 1, null);
                var state_5165__$1 = function() {
                  var statearr_5168 = state_5165;
                  statearr_5168[8] = inst_5077;
                  return statearr_5168;
                }();
                if (cljs.core.truth_(inst_5078)) {
                  var statearr_5169_5252 = state_5165__$1;
                  statearr_5169_5252[1] = 22;
                } else {
                  var statearr_5170_5253 = state_5165__$1;
                  statearr_5170_5253[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5166 === 27) {
                  var inst_5108 = state_5165[9];
                  var inst_5113 = state_5165[10];
                  var inst_5106 = state_5165[11];
                  var inst_5033 = state_5165[12];
                  var inst_5113__$1 = cljs.core._nth.call(null, inst_5106, inst_5108);
                  var inst_5114 = cljs.core.async.put_BANG_.call(null, inst_5113__$1, inst_5033, done);
                  var state_5165__$1 = function() {
                    var statearr_5171 = state_5165;
                    statearr_5171[10] = inst_5113__$1;
                    return statearr_5171;
                  }();
                  if (cljs.core.truth_(inst_5114)) {
                    var statearr_5172_5254 = state_5165__$1;
                    statearr_5172_5254[1] = 30;
                  } else {
                    var statearr_5173_5255 = state_5165__$1;
                    statearr_5173_5255[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5166 === 1) {
                    var state_5165__$1 = state_5165;
                    var statearr_5174_5256 = state_5165__$1;
                    statearr_5174_5256[2] = null;
                    statearr_5174_5256[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5166 === 24) {
                      var inst_5064 = state_5165[7];
                      var inst_5083 = state_5165[2];
                      var inst_5084 = cljs.core.next.call(null, inst_5064);
                      var inst_5042 = inst_5084;
                      var inst_5043 = null;
                      var inst_5044 = 0;
                      var inst_5045 = 0;
                      var state_5165__$1 = function() {
                        var statearr_5175 = state_5165;
                        statearr_5175[13] = inst_5043;
                        statearr_5175[14] = inst_5083;
                        statearr_5175[15] = inst_5044;
                        statearr_5175[16] = inst_5042;
                        statearr_5175[17] = inst_5045;
                        return statearr_5175;
                      }();
                      var statearr_5176_5257 = state_5165__$1;
                      statearr_5176_5257[2] = null;
                      statearr_5176_5257[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5166 === 39) {
                        var state_5165__$1 = state_5165;
                        var statearr_5180_5258 = state_5165__$1;
                        statearr_5180_5258[2] = null;
                        statearr_5180_5258[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5166 === 4) {
                          var inst_5033 = state_5165[12];
                          var inst_5033__$1 = state_5165[2];
                          var inst_5034 = inst_5033__$1 == null;
                          var state_5165__$1 = function() {
                            var statearr_5181 = state_5165;
                            statearr_5181[12] = inst_5033__$1;
                            return statearr_5181;
                          }();
                          if (cljs.core.truth_(inst_5034)) {
                            var statearr_5182_5259 = state_5165__$1;
                            statearr_5182_5259[1] = 5;
                          } else {
                            var statearr_5183_5260 = state_5165__$1;
                            statearr_5183_5260[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5166 === 15) {
                            var inst_5043 = state_5165[13];
                            var inst_5044 = state_5165[15];
                            var inst_5042 = state_5165[16];
                            var inst_5045 = state_5165[17];
                            var inst_5060 = state_5165[2];
                            var inst_5061 = inst_5045 + 1;
                            var tmp5177 = inst_5043;
                            var tmp5178 = inst_5044;
                            var tmp5179 = inst_5042;
                            var inst_5042__$1 = tmp5179;
                            var inst_5043__$1 = tmp5177;
                            var inst_5044__$1 = tmp5178;
                            var inst_5045__$1 = inst_5061;
                            var state_5165__$1 = function() {
                              var statearr_5184 = state_5165;
                              statearr_5184[18] = inst_5060;
                              statearr_5184[13] = inst_5043__$1;
                              statearr_5184[15] = inst_5044__$1;
                              statearr_5184[16] = inst_5042__$1;
                              statearr_5184[17] = inst_5045__$1;
                              return statearr_5184;
                            }();
                            var statearr_5185_5261 = state_5165__$1;
                            statearr_5185_5261[2] = null;
                            statearr_5185_5261[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5166 === 21) {
                              var inst_5087 = state_5165[2];
                              var state_5165__$1 = state_5165;
                              var statearr_5189_5262 = state_5165__$1;
                              statearr_5189_5262[2] = inst_5087;
                              statearr_5189_5262[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5166 === 31) {
                                var inst_5113 = state_5165[10];
                                var inst_5117 = done.call(null, null);
                                var inst_5118 = cljs.core.async.untap_STAR_.call(null, m, inst_5113);
                                var state_5165__$1 = function() {
                                  var statearr_5190 = state_5165;
                                  statearr_5190[19] = inst_5117;
                                  return statearr_5190;
                                }();
                                var statearr_5191_5263 = state_5165__$1;
                                statearr_5191_5263[2] = inst_5118;
                                statearr_5191_5263[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5166 === 32) {
                                  var inst_5108 = state_5165[9];
                                  var inst_5105 = state_5165[20];
                                  var inst_5107 = state_5165[21];
                                  var inst_5106 = state_5165[11];
                                  var inst_5120 = state_5165[2];
                                  var inst_5121 = inst_5108 + 1;
                                  var tmp5186 = inst_5105;
                                  var tmp5187 = inst_5107;
                                  var tmp5188 = inst_5106;
                                  var inst_5105__$1 = tmp5186;
                                  var inst_5106__$1 = tmp5188;
                                  var inst_5107__$1 = tmp5187;
                                  var inst_5108__$1 = inst_5121;
                                  var state_5165__$1 = function() {
                                    var statearr_5192 = state_5165;
                                    statearr_5192[9] = inst_5108__$1;
                                    statearr_5192[20] = inst_5105__$1;
                                    statearr_5192[21] = inst_5107__$1;
                                    statearr_5192[22] = inst_5120;
                                    statearr_5192[11] = inst_5106__$1;
                                    return statearr_5192;
                                  }();
                                  var statearr_5193_5264 = state_5165__$1;
                                  statearr_5193_5264[2] = null;
                                  statearr_5193_5264[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5166 === 40) {
                                    var inst_5133 = state_5165[23];
                                    var inst_5137 = done.call(null, null);
                                    var inst_5138 = cljs.core.async.untap_STAR_.call(null, m, inst_5133);
                                    var state_5165__$1 = function() {
                                      var statearr_5194 = state_5165;
                                      statearr_5194[24] = inst_5137;
                                      return statearr_5194;
                                    }();
                                    var statearr_5195_5265 = state_5165__$1;
                                    statearr_5195_5265[2] = inst_5138;
                                    statearr_5195_5265[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5166 === 33) {
                                      var inst_5124 = state_5165[25];
                                      var inst_5126 = cljs.core.chunked_seq_QMARK_.call(null, inst_5124);
                                      var state_5165__$1 = state_5165;
                                      if (inst_5126) {
                                        var statearr_5196_5266 = state_5165__$1;
                                        statearr_5196_5266[1] = 36;
                                      } else {
                                        var statearr_5197_5267 = state_5165__$1;
                                        statearr_5197_5267[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_5166 === 13) {
                                        var inst_5054 = state_5165[26];
                                        var inst_5057 = cljs.core.async.close_BANG_.call(null, inst_5054);
                                        var state_5165__$1 = state_5165;
                                        var statearr_5198_5268 = state_5165__$1;
                                        statearr_5198_5268[2] = inst_5057;
                                        statearr_5198_5268[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5166 === 22) {
                                          var inst_5077 = state_5165[8];
                                          var inst_5080 = cljs.core.async.close_BANG_.call(null, inst_5077);
                                          var state_5165__$1 = state_5165;
                                          var statearr_5199_5269 = state_5165__$1;
                                          statearr_5199_5269[2] = inst_5080;
                                          statearr_5199_5269[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5166 === 36) {
                                            var inst_5124 = state_5165[25];
                                            var inst_5128 = cljs.core.chunk_first.call(null, inst_5124);
                                            var inst_5129 = cljs.core.chunk_rest.call(null, inst_5124);
                                            var inst_5130 = cljs.core.count.call(null, inst_5128);
                                            var inst_5105 = inst_5129;
                                            var inst_5106 = inst_5128;
                                            var inst_5107 = inst_5130;
                                            var inst_5108 = 0;
                                            var state_5165__$1 = function() {
                                              var statearr_5200 = state_5165;
                                              statearr_5200[9] = inst_5108;
                                              statearr_5200[20] = inst_5105;
                                              statearr_5200[21] = inst_5107;
                                              statearr_5200[11] = inst_5106;
                                              return statearr_5200;
                                            }();
                                            var statearr_5201_5270 = state_5165__$1;
                                            statearr_5201_5270[2] = null;
                                            statearr_5201_5270[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5166 === 41) {
                                              var inst_5124 = state_5165[25];
                                              var inst_5140 = state_5165[2];
                                              var inst_5141 = cljs.core.next.call(null, inst_5124);
                                              var inst_5105 = inst_5141;
                                              var inst_5106 = null;
                                              var inst_5107 = 0;
                                              var inst_5108 = 0;
                                              var state_5165__$1 = function() {
                                                var statearr_5202 = state_5165;
                                                statearr_5202[9] = inst_5108;
                                                statearr_5202[27] = inst_5140;
                                                statearr_5202[20] = inst_5105;
                                                statearr_5202[21] = inst_5107;
                                                statearr_5202[11] = inst_5106;
                                                return statearr_5202;
                                              }();
                                              var statearr_5203_5271 = state_5165__$1;
                                              statearr_5203_5271[2] = null;
                                              statearr_5203_5271[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_5166 === 43) {
                                                var state_5165__$1 = state_5165;
                                                var statearr_5204_5272 = state_5165__$1;
                                                statearr_5204_5272[2] = null;
                                                statearr_5204_5272[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5166 === 29) {
                                                  var inst_5149 = state_5165[2];
                                                  var state_5165__$1 = state_5165;
                                                  var statearr_5205_5273 = state_5165__$1;
                                                  statearr_5205_5273[2] = inst_5149;
                                                  statearr_5205_5273[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5166 === 44) {
                                                    var inst_5158 = state_5165[2];
                                                    var state_5165__$1 = function() {
                                                      var statearr_5206 = state_5165;
                                                      statearr_5206[28] = inst_5158;
                                                      return statearr_5206;
                                                    }();
                                                    var statearr_5207_5274 = state_5165__$1;
                                                    statearr_5207_5274[2] = null;
                                                    statearr_5207_5274[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5166 === 6) {
                                                      var inst_5097 = state_5165[29];
                                                      var inst_5096 = cljs.core.deref.call(null, cs);
                                                      var inst_5097__$1 = cljs.core.keys.call(null, inst_5096);
                                                      var inst_5098 = cljs.core.count.call(null, inst_5097__$1);
                                                      var inst_5099 = cljs.core.reset_BANG_.call(null, dctr, inst_5098);
                                                      var inst_5104 = cljs.core.seq.call(null, inst_5097__$1);
                                                      var inst_5105 = inst_5104;
                                                      var inst_5106 = null;
                                                      var inst_5107 = 0;
                                                      var inst_5108 = 0;
                                                      var state_5165__$1 = function() {
                                                        var statearr_5208 = state_5165;
                                                        statearr_5208[30] = inst_5099;
                                                        statearr_5208[29] = inst_5097__$1;
                                                        statearr_5208[9] = inst_5108;
                                                        statearr_5208[20] = inst_5105;
                                                        statearr_5208[21] = inst_5107;
                                                        statearr_5208[11] = inst_5106;
                                                        return statearr_5208;
                                                      }();
                                                      var statearr_5209_5275 = state_5165__$1;
                                                      statearr_5209_5275[2] = null;
                                                      statearr_5209_5275[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5166 === 28) {
                                                        var inst_5124 = state_5165[25];
                                                        var inst_5105 = state_5165[20];
                                                        var inst_5124__$1 = cljs.core.seq.call(null, inst_5105);
                                                        var state_5165__$1 = function() {
                                                          var statearr_5210 = state_5165;
                                                          statearr_5210[25] = inst_5124__$1;
                                                          return statearr_5210;
                                                        }();
                                                        if (inst_5124__$1) {
                                                          var statearr_5211_5276 = state_5165__$1;
                                                          statearr_5211_5276[1] = 33;
                                                        } else {
                                                          var statearr_5212_5277 = state_5165__$1;
                                                          statearr_5212_5277[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_5166 === 25) {
                                                          var inst_5108 = state_5165[9];
                                                          var inst_5107 = state_5165[21];
                                                          var inst_5110 = inst_5108 < inst_5107;
                                                          var inst_5111 = inst_5110;
                                                          var state_5165__$1 = state_5165;
                                                          if (cljs.core.truth_(inst_5111)) {
                                                            var statearr_5213_5278 = state_5165__$1;
                                                            statearr_5213_5278[1] = 27;
                                                          } else {
                                                            var statearr_5214_5279 = state_5165__$1;
                                                            statearr_5214_5279[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5166 === 34) {
                                                            var state_5165__$1 = state_5165;
                                                            var statearr_5215_5280 = state_5165__$1;
                                                            statearr_5215_5280[2] = null;
                                                            statearr_5215_5280[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5166 === 17) {
                                                              var state_5165__$1 = state_5165;
                                                              var statearr_5216_5281 = state_5165__$1;
                                                              statearr_5216_5281[2] = null;
                                                              statearr_5216_5281[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_5166 === 3) {
                                                                var inst_5163 = state_5165[2];
                                                                var state_5165__$1 = state_5165;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5165__$1, inst_5163);
                                                              } else {
                                                                if (state_val_5166 === 12) {
                                                                  var inst_5092 = state_5165[2];
                                                                  var state_5165__$1 = state_5165;
                                                                  var statearr_5217_5282 = state_5165__$1;
                                                                  statearr_5217_5282[2] = inst_5092;
                                                                  statearr_5217_5282[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_5166 === 2) {
                                                                    var state_5165__$1 = state_5165;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5165__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_5166 === 23) {
                                                                      var state_5165__$1 = state_5165;
                                                                      var statearr_5218_5283 = state_5165__$1;
                                                                      statearr_5218_5283[2] = null;
                                                                      statearr_5218_5283[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_5166 === 35) {
                                                                        var inst_5147 = state_5165[2];
                                                                        var state_5165__$1 = state_5165;
                                                                        var statearr_5219_5284 = state_5165__$1;
                                                                        statearr_5219_5284[2] = inst_5147;
                                                                        statearr_5219_5284[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_5166 === 19) {
                                                                          var inst_5064 = state_5165[7];
                                                                          var inst_5068 = cljs.core.chunk_first.call(null, inst_5064);
                                                                          var inst_5069 = cljs.core.chunk_rest.call(null, inst_5064);
                                                                          var inst_5070 = cljs.core.count.call(null, inst_5068);
                                                                          var inst_5042 = inst_5069;
                                                                          var inst_5043 = inst_5068;
                                                                          var inst_5044 = inst_5070;
                                                                          var inst_5045 = 0;
                                                                          var state_5165__$1 = function() {
                                                                            var statearr_5220 = state_5165;
                                                                            statearr_5220[13] = inst_5043;
                                                                            statearr_5220[15] = inst_5044;
                                                                            statearr_5220[16] = inst_5042;
                                                                            statearr_5220[17] = inst_5045;
                                                                            return statearr_5220;
                                                                          }();
                                                                          var statearr_5221_5285 = state_5165__$1;
                                                                          statearr_5221_5285[2] = null;
                                                                          statearr_5221_5285[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_5166 === 11) {
                                                                            var inst_5042 = state_5165[16];
                                                                            var inst_5064 = state_5165[7];
                                                                            var inst_5064__$1 = cljs.core.seq.call(null, inst_5042);
                                                                            var state_5165__$1 = function() {
                                                                              var statearr_5222 = state_5165;
                                                                              statearr_5222[7] = inst_5064__$1;
                                                                              return statearr_5222;
                                                                            }();
                                                                            if (inst_5064__$1) {
                                                                              var statearr_5223_5286 = state_5165__$1;
                                                                              statearr_5223_5286[1] = 16;
                                                                            } else {
                                                                              var statearr_5224_5287 = state_5165__$1;
                                                                              statearr_5224_5287[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_5166 === 9) {
                                                                              var inst_5094 = state_5165[2];
                                                                              var state_5165__$1 = state_5165;
                                                                              var statearr_5225_5288 = state_5165__$1;
                                                                              statearr_5225_5288[2] = inst_5094;
                                                                              statearr_5225_5288[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_5166 === 5) {
                                                                                var inst_5040 = cljs.core.deref.call(null, cs);
                                                                                var inst_5041 = cljs.core.seq.call(null, inst_5040);
                                                                                var inst_5042 = inst_5041;
                                                                                var inst_5043 = null;
                                                                                var inst_5044 = 0;
                                                                                var inst_5045 = 0;
                                                                                var state_5165__$1 = function() {
                                                                                  var statearr_5226 = state_5165;
                                                                                  statearr_5226[13] = inst_5043;
                                                                                  statearr_5226[15] = inst_5044;
                                                                                  statearr_5226[16] = inst_5042;
                                                                                  statearr_5226[17] = inst_5045;
                                                                                  return statearr_5226;
                                                                                }();
                                                                                var statearr_5227_5289 = state_5165__$1;
                                                                                statearr_5227_5289[2] = null;
                                                                                statearr_5227_5289[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_5166 === 14) {
                                                                                  var state_5165__$1 = state_5165;
                                                                                  var statearr_5228_5290 = state_5165__$1;
                                                                                  statearr_5228_5290[2] = null;
                                                                                  statearr_5228_5290[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_5166 === 45) {
                                                                                    var inst_5155 = state_5165[2];
                                                                                    var state_5165__$1 = state_5165;
                                                                                    var statearr_5229_5291 = state_5165__$1;
                                                                                    statearr_5229_5291[2] = inst_5155;
                                                                                    statearr_5229_5291[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_5166 === 26) {
                                                                                      var inst_5097 = state_5165[29];
                                                                                      var inst_5151 = state_5165[2];
                                                                                      var inst_5152 = cljs.core.seq.call(null, inst_5097);
                                                                                      var state_5165__$1 = function() {
                                                                                        var statearr_5230 = state_5165;
                                                                                        statearr_5230[31] = inst_5151;
                                                                                        return statearr_5230;
                                                                                      }();
                                                                                      if (inst_5152) {
                                                                                        var statearr_5231_5292 = state_5165__$1;
                                                                                        statearr_5231_5292[1] = 42;
                                                                                      } else {
                                                                                        var statearr_5232_5293 = state_5165__$1;
                                                                                        statearr_5232_5293[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_5166 === 16) {
                                                                                        var inst_5064 = state_5165[7];
                                                                                        var inst_5066 = cljs.core.chunked_seq_QMARK_.call(null, inst_5064);
                                                                                        var state_5165__$1 = state_5165;
                                                                                        if (inst_5066) {
                                                                                          var statearr_5233_5294 = state_5165__$1;
                                                                                          statearr_5233_5294[1] = 19;
                                                                                        } else {
                                                                                          var statearr_5234_5295 = state_5165__$1;
                                                                                          statearr_5234_5295[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_5166 === 38) {
                                                                                          var inst_5144 = state_5165[2];
                                                                                          var state_5165__$1 = state_5165;
                                                                                          var statearr_5235_5296 = state_5165__$1;
                                                                                          statearr_5235_5296[2] = inst_5144;
                                                                                          statearr_5235_5296[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_5166 === 30) {
                                                                                            var state_5165__$1 = state_5165;
                                                                                            var statearr_5236_5297 = state_5165__$1;
                                                                                            statearr_5236_5297[2] = null;
                                                                                            statearr_5236_5297[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_5166 === 10) {
                                                                                              var inst_5043 = state_5165[13];
                                                                                              var inst_5045 = state_5165[17];
                                                                                              var inst_5053 = cljs.core._nth.call(null, inst_5043, inst_5045);
                                                                                              var inst_5054 = cljs.core.nth.call(null, inst_5053, 0, null);
                                                                                              var inst_5055 = cljs.core.nth.call(null, inst_5053, 1, null);
                                                                                              var state_5165__$1 = function() {
                                                                                                var statearr_5237 = state_5165;
                                                                                                statearr_5237[26] = inst_5054;
                                                                                                return statearr_5237;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_5055)) {
                                                                                                var statearr_5238_5298 = state_5165__$1;
                                                                                                statearr_5238_5298[1] = 13;
                                                                                              } else {
                                                                                                var statearr_5239_5299 = state_5165__$1;
                                                                                                statearr_5239_5299[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_5166 === 18) {
                                                                                                var inst_5090 = state_5165[2];
                                                                                                var state_5165__$1 = state_5165;
                                                                                                var statearr_5240_5300 = state_5165__$1;
                                                                                                statearr_5240_5300[2] = inst_5090;
                                                                                                statearr_5240_5300[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_5166 === 42) {
                                                                                                  var state_5165__$1 = state_5165;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5165__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_5166 === 37) {
                                                                                                    var inst_5124 = state_5165[25];
                                                                                                    var inst_5133 = state_5165[23];
                                                                                                    var inst_5033 = state_5165[12];
                                                                                                    var inst_5133__$1 = cljs.core.first.call(null, inst_5124);
                                                                                                    var inst_5134 = cljs.core.async.put_BANG_.call(null, inst_5133__$1, inst_5033, done);
                                                                                                    var state_5165__$1 = function() {
                                                                                                      var statearr_5241 = state_5165;
                                                                                                      statearr_5241[23] = inst_5133__$1;
                                                                                                      return statearr_5241;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_5134)) {
                                                                                                      var statearr_5242_5301 = state_5165__$1;
                                                                                                      statearr_5242_5301[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_5243_5302 = state_5165__$1;
                                                                                                      statearr_5243_5302[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_5166 === 8) {
                                                                                                      var inst_5044 = state_5165[15];
                                                                                                      var inst_5045 = state_5165[17];
                                                                                                      var inst_5047 = inst_5045 < inst_5044;
                                                                                                      var inst_5048 = inst_5047;
                                                                                                      var state_5165__$1 = state_5165;
                                                                                                      if (cljs.core.truth_(inst_5048)) {
                                                                                                        var statearr_5244_5303 = state_5165__$1;
                                                                                                        statearr_5244_5303[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_5245_5304 = state_5165__$1;
                                                                                                        statearr_5245_5304[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5250, cs, m, dchan, dctr, done);
        return function(switch__4336__auto__, c__4431__auto___5250, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__4337__auto__ = null;
            var cljs$core$async$mult_$_state_machine__4337__auto____0 = function() {
              var statearr_5246 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5246[0] = cljs$core$async$mult_$_state_machine__4337__auto__;
              statearr_5246[1] = 1;
              return statearr_5246;
            };
            var cljs$core$async$mult_$_state_machine__4337__auto____1 = function(state_5165) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5165);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5247) {
                    if (e5247 instanceof Object) {
                      var ex__4340__auto__ = e5247;
                      var statearr_5248_5305 = state_5165;
                      statearr_5248_5305[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5165);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5247;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5306 = state_5165;
                  state_5165 = G__5306;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__4337__auto__ = function(state_5165) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__4337__auto____1.call(this, state_5165);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__4337__auto____0;
            cljs$core$async$mult_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__4337__auto____1;
            return cljs$core$async$mult_$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5250, cs, m, dchan, dctr, done);
      }();
      var state__4433__auto__ = function() {
        var statearr_5249 = f__4432__auto__.call(null);
        statearr_5249[6] = c__4431__auto___5250;
        return statearr_5249;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5250, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var G__5308 = arguments.length;
  switch(G__5308) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, ch);
    } else {
      var m__4431__auto__ = cljs.core.async.admix_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, ch);
    } else {
      var m__4431__auto__ = cljs.core.async.unmix_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m);
    } else {
      var m__4431__auto__ = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, state_map);
    } else {
      var m__4431__auto__ = cljs.core.async.toggle_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4433__auto__ = m == null ? null : m;
    var m__4434__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, m, mode);
    } else {
      var m__4431__auto__ = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5320 = arguments.length;
  var i__4731__auto___5321 = 0;
  while (true) {
    if (i__4731__auto___5321 < len__4730__auto___5320) {
      args__4736__auto__.push(arguments[i__4731__auto___5321]);
      var G__5322 = i__4731__auto___5321 + 1;
      i__4731__auto___5321 = G__5322;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 3 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4737__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__5314) {
  var map__5315 = p__5314;
  var map__5315__$1 = (!(map__5315 == null) ? map__5315.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5315.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5315) : map__5315;
  var opts = map__5315__$1;
  var statearr_5317_5323 = state;
  statearr_5317_5323[1] = cont_block;
  var temp__5720__auto__ = cljs.core.async.do_alts.call(null, function(map__5315, map__5315__$1, opts) {
    return function(val) {
      var statearr_5318_5324 = state;
      statearr_5318_5324[2] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__5315, map__5315__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var cb = temp__5720__auto__;
    var statearr_5319_5325 = state;
    statearr_5319_5325[2] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq5310) {
  var G__5311 = cljs.core.first.call(null, seq5310);
  var seq5310__$1 = cljs.core.next.call(null, seq5310);
  var G__5312 = cljs.core.first.call(null, seq5310__$1);
  var seq5310__$2 = cljs.core.next.call(null, seq5310__$1);
  var G__5313 = cljs.core.first.call(null, seq5310__$2);
  var seq5310__$3 = cljs.core.next.call(null, seq5310__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__5311, G__5312, G__5313, seq5310__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5326 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5326 = function(change, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta5327) {
        this.change = change;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta5327 = meta5327;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_5328, meta5327__$1) {
          var self__ = this;
          var _5328__$1 = this;
          return new cljs.core.async.t_cljs$core$async5326(self__.change, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta5327__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_5328) {
          var self__ = this;
          var _5328__$1 = this;
          return self__.meta5327;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error(["Assert failed: ", ["mode must be one of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)].join(""), "\n", "(solo-modes mode)"].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, 
          "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta5327", "meta5327", 1660860752, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async5326.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5326.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5326";
      cljs.core.async.t_cljs$core$async5326.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
          return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5326");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async5326 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async5326(change__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta5327) {
          return new cljs.core.async.t_cljs$core$async5326(change__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta5327);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async5326(change, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__4431__auto___5490 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_5430) {
            var state_val_5431 = state_5430[1];
            if (state_val_5431 === 7) {
              var inst_5345 = state_5430[2];
              var state_5430__$1 = state_5430;
              var statearr_5432_5491 = state_5430__$1;
              statearr_5432_5491[2] = inst_5345;
              statearr_5432_5491[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5431 === 20) {
                var inst_5357 = state_5430[7];
                var state_5430__$1 = state_5430;
                var statearr_5433_5492 = state_5430__$1;
                statearr_5433_5492[2] = inst_5357;
                statearr_5433_5492[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5431 === 27) {
                  var state_5430__$1 = state_5430;
                  var statearr_5434_5493 = state_5430__$1;
                  statearr_5434_5493[2] = null;
                  statearr_5434_5493[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5431 === 1) {
                    var inst_5332 = state_5430[8];
                    var inst_5332__$1 = calc_state.call(null);
                    var inst_5334 = inst_5332__$1 == null;
                    var inst_5335 = cljs.core.not.call(null, inst_5334);
                    var state_5430__$1 = function() {
                      var statearr_5435 = state_5430;
                      statearr_5435[8] = inst_5332__$1;
                      return statearr_5435;
                    }();
                    if (inst_5335) {
                      var statearr_5436_5494 = state_5430__$1;
                      statearr_5436_5494[1] = 2;
                    } else {
                      var statearr_5437_5495 = state_5430__$1;
                      statearr_5437_5495[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5431 === 24) {
                      var inst_5381 = state_5430[9];
                      var inst_5390 = state_5430[10];
                      var inst_5404 = state_5430[11];
                      var inst_5404__$1 = inst_5381.call(null, inst_5390);
                      var state_5430__$1 = function() {
                        var statearr_5438 = state_5430;
                        statearr_5438[11] = inst_5404__$1;
                        return statearr_5438;
                      }();
                      if (cljs.core.truth_(inst_5404__$1)) {
                        var statearr_5439_5496 = state_5430__$1;
                        statearr_5439_5496[1] = 29;
                      } else {
                        var statearr_5440_5497 = state_5430__$1;
                        statearr_5440_5497[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5431 === 4) {
                        var inst_5348 = state_5430[2];
                        var state_5430__$1 = state_5430;
                        if (cljs.core.truth_(inst_5348)) {
                          var statearr_5441_5498 = state_5430__$1;
                          statearr_5441_5498[1] = 8;
                        } else {
                          var statearr_5442_5499 = state_5430__$1;
                          statearr_5442_5499[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5431 === 15) {
                          var inst_5375 = state_5430[2];
                          var state_5430__$1 = state_5430;
                          if (cljs.core.truth_(inst_5375)) {
                            var statearr_5443_5500 = state_5430__$1;
                            statearr_5443_5500[1] = 19;
                          } else {
                            var statearr_5444_5501 = state_5430__$1;
                            statearr_5444_5501[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5431 === 21) {
                            var inst_5380 = state_5430[12];
                            var inst_5380__$1 = state_5430[2];
                            var inst_5381 = cljs.core.get.call(null, inst_5380__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_5382 = cljs.core.get.call(null, inst_5380__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_5383 = cljs.core.get.call(null, inst_5380__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_5430__$1 = function() {
                              var statearr_5445 = state_5430;
                              statearr_5445[9] = inst_5381;
                              statearr_5445[12] = inst_5380__$1;
                              statearr_5445[13] = inst_5382;
                              return statearr_5445;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_5430__$1, 22, inst_5383);
                          } else {
                            if (state_val_5431 === 31) {
                              var inst_5412 = state_5430[2];
                              var state_5430__$1 = state_5430;
                              if (cljs.core.truth_(inst_5412)) {
                                var statearr_5446_5502 = state_5430__$1;
                                statearr_5446_5502[1] = 32;
                              } else {
                                var statearr_5447_5503 = state_5430__$1;
                                statearr_5447_5503[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5431 === 32) {
                                var inst_5389 = state_5430[14];
                                var state_5430__$1 = state_5430;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5430__$1, 35, out, inst_5389);
                              } else {
                                if (state_val_5431 === 33) {
                                  var inst_5380 = state_5430[12];
                                  var inst_5357 = inst_5380;
                                  var state_5430__$1 = function() {
                                    var statearr_5448 = state_5430;
                                    statearr_5448[7] = inst_5357;
                                    return statearr_5448;
                                  }();
                                  var statearr_5449_5504 = state_5430__$1;
                                  statearr_5449_5504[2] = null;
                                  statearr_5449_5504[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5431 === 13) {
                                    var inst_5357 = state_5430[7];
                                    var inst_5364 = inst_5357.cljs$lang$protocol_mask$partition0$;
                                    var inst_5365 = inst_5364 & 64;
                                    var inst_5366 = inst_5357.cljs$core$ISeq$;
                                    var inst_5367 = cljs.core.PROTOCOL_SENTINEL === inst_5366;
                                    var inst_5368 = inst_5365 || inst_5367;
                                    var state_5430__$1 = state_5430;
                                    if (cljs.core.truth_(inst_5368)) {
                                      var statearr_5450_5505 = state_5430__$1;
                                      statearr_5450_5505[1] = 16;
                                    } else {
                                      var statearr_5451_5506 = state_5430__$1;
                                      statearr_5451_5506[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5431 === 22) {
                                      var inst_5390 = state_5430[10];
                                      var inst_5389 = state_5430[14];
                                      var inst_5388 = state_5430[2];
                                      var inst_5389__$1 = cljs.core.nth.call(null, inst_5388, 0, null);
                                      var inst_5390__$1 = cljs.core.nth.call(null, inst_5388, 1, null);
                                      var inst_5391 = inst_5389__$1 == null;
                                      var inst_5392 = cljs.core._EQ_.call(null, inst_5390__$1, change);
                                      var inst_5393 = inst_5391 || inst_5392;
                                      var state_5430__$1 = function() {
                                        var statearr_5452 = state_5430;
                                        statearr_5452[10] = inst_5390__$1;
                                        statearr_5452[14] = inst_5389__$1;
                                        return statearr_5452;
                                      }();
                                      if (cljs.core.truth_(inst_5393)) {
                                        var statearr_5453_5507 = state_5430__$1;
                                        statearr_5453_5507[1] = 23;
                                      } else {
                                        var statearr_5454_5508 = state_5430__$1;
                                        statearr_5454_5508[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_5431 === 36) {
                                        var inst_5380 = state_5430[12];
                                        var inst_5357 = inst_5380;
                                        var state_5430__$1 = function() {
                                          var statearr_5455 = state_5430;
                                          statearr_5455[7] = inst_5357;
                                          return statearr_5455;
                                        }();
                                        var statearr_5456_5509 = state_5430__$1;
                                        statearr_5456_5509[2] = null;
                                        statearr_5456_5509[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5431 === 29) {
                                          var inst_5404 = state_5430[11];
                                          var state_5430__$1 = state_5430;
                                          var statearr_5457_5510 = state_5430__$1;
                                          statearr_5457_5510[2] = inst_5404;
                                          statearr_5457_5510[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5431 === 6) {
                                            var state_5430__$1 = state_5430;
                                            var statearr_5458_5511 = state_5430__$1;
                                            statearr_5458_5511[2] = false;
                                            statearr_5458_5511[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5431 === 28) {
                                              var inst_5400 = state_5430[2];
                                              var inst_5401 = calc_state.call(null);
                                              var inst_5357 = inst_5401;
                                              var state_5430__$1 = function() {
                                                var statearr_5459 = state_5430;
                                                statearr_5459[7] = inst_5357;
                                                statearr_5459[15] = inst_5400;
                                                return statearr_5459;
                                              }();
                                              var statearr_5460_5512 = state_5430__$1;
                                              statearr_5460_5512[2] = null;
                                              statearr_5460_5512[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_5431 === 25) {
                                                var inst_5426 = state_5430[2];
                                                var state_5430__$1 = state_5430;
                                                var statearr_5461_5513 = state_5430__$1;
                                                statearr_5461_5513[2] = inst_5426;
                                                statearr_5461_5513[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5431 === 34) {
                                                  var inst_5424 = state_5430[2];
                                                  var state_5430__$1 = state_5430;
                                                  var statearr_5462_5514 = state_5430__$1;
                                                  statearr_5462_5514[2] = inst_5424;
                                                  statearr_5462_5514[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5431 === 17) {
                                                    var state_5430__$1 = state_5430;
                                                    var statearr_5463_5515 = state_5430__$1;
                                                    statearr_5463_5515[2] = false;
                                                    statearr_5463_5515[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5431 === 3) {
                                                      var state_5430__$1 = state_5430;
                                                      var statearr_5464_5516 = state_5430__$1;
                                                      statearr_5464_5516[2] = false;
                                                      statearr_5464_5516[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5431 === 12) {
                                                        var inst_5428 = state_5430[2];
                                                        var state_5430__$1 = state_5430;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5430__$1, inst_5428);
                                                      } else {
                                                        if (state_val_5431 === 2) {
                                                          var inst_5332 = state_5430[8];
                                                          var inst_5337 = inst_5332.cljs$lang$protocol_mask$partition0$;
                                                          var inst_5338 = inst_5337 & 64;
                                                          var inst_5339 = inst_5332.cljs$core$ISeq$;
                                                          var inst_5340 = cljs.core.PROTOCOL_SENTINEL === inst_5339;
                                                          var inst_5341 = inst_5338 || inst_5340;
                                                          var state_5430__$1 = state_5430;
                                                          if (cljs.core.truth_(inst_5341)) {
                                                            var statearr_5465_5517 = state_5430__$1;
                                                            statearr_5465_5517[1] = 5;
                                                          } else {
                                                            var statearr_5466_5518 = state_5430__$1;
                                                            statearr_5466_5518[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5431 === 23) {
                                                            var inst_5389 = state_5430[14];
                                                            var inst_5395 = inst_5389 == null;
                                                            var state_5430__$1 = state_5430;
                                                            if (cljs.core.truth_(inst_5395)) {
                                                              var statearr_5467_5519 = state_5430__$1;
                                                              statearr_5467_5519[1] = 26;
                                                            } else {
                                                              var statearr_5468_5520 = state_5430__$1;
                                                              statearr_5468_5520[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5431 === 35) {
                                                              var inst_5415 = state_5430[2];
                                                              var state_5430__$1 = state_5430;
                                                              if (cljs.core.truth_(inst_5415)) {
                                                                var statearr_5469_5521 = state_5430__$1;
                                                                statearr_5469_5521[1] = 36;
                                                              } else {
                                                                var statearr_5470_5522 = state_5430__$1;
                                                                statearr_5470_5522[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_5431 === 19) {
                                                                var inst_5357 = state_5430[7];
                                                                var inst_5377 = cljs.core.apply.call(null, cljs.core.hash_map, inst_5357);
                                                                var state_5430__$1 = state_5430;
                                                                var statearr_5471_5523 = state_5430__$1;
                                                                statearr_5471_5523[2] = inst_5377;
                                                                statearr_5471_5523[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_5431 === 11) {
                                                                  var inst_5357 = state_5430[7];
                                                                  var inst_5361 = inst_5357 == null;
                                                                  var inst_5362 = cljs.core.not.call(null, inst_5361);
                                                                  var state_5430__$1 = state_5430;
                                                                  if (inst_5362) {
                                                                    var statearr_5472_5524 = state_5430__$1;
                                                                    statearr_5472_5524[1] = 13;
                                                                  } else {
                                                                    var statearr_5473_5525 = state_5430__$1;
                                                                    statearr_5473_5525[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_5431 === 9) {
                                                                    var inst_5332 = state_5430[8];
                                                                    var state_5430__$1 = state_5430;
                                                                    var statearr_5474_5526 = state_5430__$1;
                                                                    statearr_5474_5526[2] = inst_5332;
                                                                    statearr_5474_5526[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_5431 === 5) {
                                                                      var state_5430__$1 = state_5430;
                                                                      var statearr_5475_5527 = state_5430__$1;
                                                                      statearr_5475_5527[2] = true;
                                                                      statearr_5475_5527[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_5431 === 14) {
                                                                        var state_5430__$1 = state_5430;
                                                                        var statearr_5476_5528 = state_5430__$1;
                                                                        statearr_5476_5528[2] = false;
                                                                        statearr_5476_5528[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_5431 === 26) {
                                                                          var inst_5390 = state_5430[10];
                                                                          var inst_5397 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_5390);
                                                                          var state_5430__$1 = state_5430;
                                                                          var statearr_5477_5529 = state_5430__$1;
                                                                          statearr_5477_5529[2] = inst_5397;
                                                                          statearr_5477_5529[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_5431 === 16) {
                                                                            var state_5430__$1 = state_5430;
                                                                            var statearr_5478_5530 = state_5430__$1;
                                                                            statearr_5478_5530[2] = true;
                                                                            statearr_5478_5530[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_5431 === 38) {
                                                                              var inst_5420 = state_5430[2];
                                                                              var state_5430__$1 = state_5430;
                                                                              var statearr_5479_5531 = state_5430__$1;
                                                                              statearr_5479_5531[2] = inst_5420;
                                                                              statearr_5479_5531[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_5431 === 30) {
                                                                                var inst_5381 = state_5430[9];
                                                                                var inst_5390 = state_5430[10];
                                                                                var inst_5382 = state_5430[13];
                                                                                var inst_5407 = cljs.core.empty_QMARK_.call(null, inst_5381);
                                                                                var inst_5408 = inst_5382.call(null, inst_5390);
                                                                                var inst_5409 = cljs.core.not.call(null, inst_5408);
                                                                                var inst_5410 = inst_5407 && inst_5409;
                                                                                var state_5430__$1 = state_5430;
                                                                                var statearr_5480_5532 = state_5430__$1;
                                                                                statearr_5480_5532[2] = inst_5410;
                                                                                statearr_5480_5532[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_5431 === 10) {
                                                                                  var inst_5332 = state_5430[8];
                                                                                  var inst_5353 = state_5430[2];
                                                                                  var inst_5354 = cljs.core.get.call(null, inst_5353, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_5355 = cljs.core.get.call(null, inst_5353, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_5356 = cljs.core.get.call(null, inst_5353, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_5357 = inst_5332;
                                                                                  var state_5430__$1 = function() {
                                                                                    var statearr_5481 = state_5430;
                                                                                    statearr_5481[16] = inst_5356;
                                                                                    statearr_5481[7] = inst_5357;
                                                                                    statearr_5481[17] = inst_5355;
                                                                                    statearr_5481[18] = inst_5354;
                                                                                    return statearr_5481;
                                                                                  }();
                                                                                  var statearr_5482_5533 = state_5430__$1;
                                                                                  statearr_5482_5533[2] = null;
                                                                                  statearr_5482_5533[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_5431 === 18) {
                                                                                    var inst_5372 = state_5430[2];
                                                                                    var state_5430__$1 = state_5430;
                                                                                    var statearr_5483_5534 = state_5430__$1;
                                                                                    statearr_5483_5534[2] = inst_5372;
                                                                                    statearr_5483_5534[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_5431 === 37) {
                                                                                      var state_5430__$1 = state_5430;
                                                                                      var statearr_5484_5535 = state_5430__$1;
                                                                                      statearr_5484_5535[2] = null;
                                                                                      statearr_5484_5535[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_5431 === 8) {
                                                                                        var inst_5332 = state_5430[8];
                                                                                        var inst_5350 = cljs.core.apply.call(null, cljs.core.hash_map, inst_5332);
                                                                                        var state_5430__$1 = state_5430;
                                                                                        var statearr_5485_5536 = state_5430__$1;
                                                                                        statearr_5485_5536[2] = inst_5350;
                                                                                        statearr_5485_5536[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__4336__auto__, c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__4337__auto__ = null;
            var cljs$core$async$mix_$_state_machine__4337__auto____0 = function() {
              var statearr_5486 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5486[0] = cljs$core$async$mix_$_state_machine__4337__auto__;
              statearr_5486[1] = 1;
              return statearr_5486;
            };
            var cljs$core$async$mix_$_state_machine__4337__auto____1 = function(state_5430) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5430);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5487) {
                    if (e5487 instanceof Object) {
                      var ex__4340__auto__ = e5487;
                      var statearr_5488_5537 = state_5430;
                      statearr_5488_5537[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5430);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5487;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5538 = state_5430;
                  state_5430 = G__5538;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__4337__auto__ = function(state_5430) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__4337__auto____1.call(this, state_5430);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__4337__auto____0;
            cljs$core$async$mix_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__4337__auto____1;
            return cljs$core$async$mix_$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__4433__auto__ = function() {
        var statearr_5489 = f__4432__auto__.call(null);
        statearr_5489[6] = c__4431__auto___5490;
        return statearr_5489;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5490, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4433__auto__ = p == null ? null : p;
    var m__4434__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core.async.sub_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4433__auto__ = p == null ? null : p;
    var m__4434__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, p, v, ch);
    } else {
      var m__4431__auto__ = cljs.core.async.unsub_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var G__5540 = arguments.length;
  switch(G__5540) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__4433__auto__ = p == null ? null : p;
    var m__4434__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, p);
    } else {
      var m__4431__auto__ = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__4433__auto__ = p == null ? null : p;
    var m__4434__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.call(null, p, v);
    } else {
      var m__4431__auto__ = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var G__5544 = arguments.length;
  switch(G__5544) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4131__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4131__auto__, mults) {
          return function(p1__5542_SHARP_) {
            if (cljs.core.truth_(p1__5542_SHARP_.call(null, topic))) {
              return p1__5542_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__5542_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4131__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5545 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async5545 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta5546) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta5546 = meta5546;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_5547, meta5546__$1) {
          var self__ = this;
          var _5547__$1 = this;
          return new cljs.core.async.t_cljs$core$async5545(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta5546__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_5547) {
          var self__ = this;
          var _5547__$1 = this;
          return self__.meta5546;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Pub$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__5720__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__5720__auto__)) {
            var m = temp__5720__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta5546", "meta5546", 466375713, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async5545.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async5545.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5545";
      cljs.core.async.t_cljs$core$async5545.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
          return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5545");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async5545 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async5545(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta5546) {
          return new cljs.core.async.t_cljs$core$async5545(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta5546);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async5545(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__4431__auto___5665 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5665, mults, ensure_mult, p) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5665, mults, ensure_mult, p) {
          return function(state_5619) {
            var state_val_5620 = state_5619[1];
            if (state_val_5620 === 7) {
              var inst_5615 = state_5619[2];
              var state_5619__$1 = state_5619;
              var statearr_5621_5666 = state_5619__$1;
              statearr_5621_5666[2] = inst_5615;
              statearr_5621_5666[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5620 === 20) {
                var state_5619__$1 = state_5619;
                var statearr_5622_5667 = state_5619__$1;
                statearr_5622_5667[2] = null;
                statearr_5622_5667[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5620 === 1) {
                  var state_5619__$1 = state_5619;
                  var statearr_5623_5668 = state_5619__$1;
                  statearr_5623_5668[2] = null;
                  statearr_5623_5668[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5620 === 24) {
                    var inst_5598 = state_5619[7];
                    var inst_5607 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_5598);
                    var state_5619__$1 = state_5619;
                    var statearr_5624_5669 = state_5619__$1;
                    statearr_5624_5669[2] = inst_5607;
                    statearr_5624_5669[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5620 === 4) {
                      var inst_5550 = state_5619[8];
                      var inst_5550__$1 = state_5619[2];
                      var inst_5551 = inst_5550__$1 == null;
                      var state_5619__$1 = function() {
                        var statearr_5625 = state_5619;
                        statearr_5625[8] = inst_5550__$1;
                        return statearr_5625;
                      }();
                      if (cljs.core.truth_(inst_5551)) {
                        var statearr_5626_5670 = state_5619__$1;
                        statearr_5626_5670[1] = 5;
                      } else {
                        var statearr_5627_5671 = state_5619__$1;
                        statearr_5627_5671[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5620 === 15) {
                        var inst_5592 = state_5619[2];
                        var state_5619__$1 = state_5619;
                        var statearr_5628_5672 = state_5619__$1;
                        statearr_5628_5672[2] = inst_5592;
                        statearr_5628_5672[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5620 === 21) {
                          var inst_5612 = state_5619[2];
                          var state_5619__$1 = function() {
                            var statearr_5629 = state_5619;
                            statearr_5629[9] = inst_5612;
                            return statearr_5629;
                          }();
                          var statearr_5630_5673 = state_5619__$1;
                          statearr_5630_5673[2] = null;
                          statearr_5630_5673[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5620 === 13) {
                            var inst_5574 = state_5619[10];
                            var inst_5576 = cljs.core.chunked_seq_QMARK_.call(null, inst_5574);
                            var state_5619__$1 = state_5619;
                            if (inst_5576) {
                              var statearr_5631_5674 = state_5619__$1;
                              statearr_5631_5674[1] = 16;
                            } else {
                              var statearr_5632_5675 = state_5619__$1;
                              statearr_5632_5675[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5620 === 22) {
                              var inst_5604 = state_5619[2];
                              var state_5619__$1 = state_5619;
                              if (cljs.core.truth_(inst_5604)) {
                                var statearr_5633_5676 = state_5619__$1;
                                statearr_5633_5676[1] = 23;
                              } else {
                                var statearr_5634_5677 = state_5619__$1;
                                statearr_5634_5677[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5620 === 6) {
                                var inst_5600 = state_5619[11];
                                var inst_5550 = state_5619[8];
                                var inst_5598 = state_5619[7];
                                var inst_5598__$1 = topic_fn.call(null, inst_5550);
                                var inst_5599 = cljs.core.deref.call(null, mults);
                                var inst_5600__$1 = cljs.core.get.call(null, inst_5599, inst_5598__$1);
                                var state_5619__$1 = function() {
                                  var statearr_5635 = state_5619;
                                  statearr_5635[11] = inst_5600__$1;
                                  statearr_5635[7] = inst_5598__$1;
                                  return statearr_5635;
                                }();
                                if (cljs.core.truth_(inst_5600__$1)) {
                                  var statearr_5636_5678 = state_5619__$1;
                                  statearr_5636_5678[1] = 19;
                                } else {
                                  var statearr_5637_5679 = state_5619__$1;
                                  statearr_5637_5679[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5620 === 25) {
                                  var inst_5609 = state_5619[2];
                                  var state_5619__$1 = state_5619;
                                  var statearr_5638_5680 = state_5619__$1;
                                  statearr_5638_5680[2] = inst_5609;
                                  statearr_5638_5680[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5620 === 17) {
                                    var inst_5574 = state_5619[10];
                                    var inst_5583 = cljs.core.first.call(null, inst_5574);
                                    var inst_5584 = cljs.core.async.muxch_STAR_.call(null, inst_5583);
                                    var inst_5585 = cljs.core.async.close_BANG_.call(null, inst_5584);
                                    var inst_5586 = cljs.core.next.call(null, inst_5574);
                                    var inst_5560 = inst_5586;
                                    var inst_5561 = null;
                                    var inst_5562 = 0;
                                    var inst_5563 = 0;
                                    var state_5619__$1 = function() {
                                      var statearr_5639 = state_5619;
                                      statearr_5639[12] = inst_5562;
                                      statearr_5639[13] = inst_5563;
                                      statearr_5639[14] = inst_5585;
                                      statearr_5639[15] = inst_5561;
                                      statearr_5639[16] = inst_5560;
                                      return statearr_5639;
                                    }();
                                    var statearr_5640_5681 = state_5619__$1;
                                    statearr_5640_5681[2] = null;
                                    statearr_5640_5681[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_5620 === 3) {
                                      var inst_5617 = state_5619[2];
                                      var state_5619__$1 = state_5619;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5619__$1, inst_5617);
                                    } else {
                                      if (state_val_5620 === 12) {
                                        var inst_5594 = state_5619[2];
                                        var state_5619__$1 = state_5619;
                                        var statearr_5641_5682 = state_5619__$1;
                                        statearr_5641_5682[2] = inst_5594;
                                        statearr_5641_5682[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5620 === 2) {
                                          var state_5619__$1 = state_5619;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5619__$1, 4, ch);
                                        } else {
                                          if (state_val_5620 === 23) {
                                            var state_5619__$1 = state_5619;
                                            var statearr_5642_5683 = state_5619__$1;
                                            statearr_5642_5683[2] = null;
                                            statearr_5642_5683[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_5620 === 19) {
                                              var inst_5600 = state_5619[11];
                                              var inst_5550 = state_5619[8];
                                              var inst_5602 = cljs.core.async.muxch_STAR_.call(null, inst_5600);
                                              var state_5619__$1 = state_5619;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5619__$1, 22, inst_5602, inst_5550);
                                            } else {
                                              if (state_val_5620 === 11) {
                                                var inst_5574 = state_5619[10];
                                                var inst_5560 = state_5619[16];
                                                var inst_5574__$1 = cljs.core.seq.call(null, inst_5560);
                                                var state_5619__$1 = function() {
                                                  var statearr_5643 = state_5619;
                                                  statearr_5643[10] = inst_5574__$1;
                                                  return statearr_5643;
                                                }();
                                                if (inst_5574__$1) {
                                                  var statearr_5644_5684 = state_5619__$1;
                                                  statearr_5644_5684[1] = 13;
                                                } else {
                                                  var statearr_5645_5685 = state_5619__$1;
                                                  statearr_5645_5685[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_5620 === 9) {
                                                  var inst_5596 = state_5619[2];
                                                  var state_5619__$1 = state_5619;
                                                  var statearr_5646_5686 = state_5619__$1;
                                                  statearr_5646_5686[2] = inst_5596;
                                                  statearr_5646_5686[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_5620 === 5) {
                                                    var inst_5557 = cljs.core.deref.call(null, mults);
                                                    var inst_5558 = cljs.core.vals.call(null, inst_5557);
                                                    var inst_5559 = cljs.core.seq.call(null, inst_5558);
                                                    var inst_5560 = inst_5559;
                                                    var inst_5561 = null;
                                                    var inst_5562 = 0;
                                                    var inst_5563 = 0;
                                                    var state_5619__$1 = function() {
                                                      var statearr_5647 = state_5619;
                                                      statearr_5647[12] = inst_5562;
                                                      statearr_5647[13] = inst_5563;
                                                      statearr_5647[15] = inst_5561;
                                                      statearr_5647[16] = inst_5560;
                                                      return statearr_5647;
                                                    }();
                                                    var statearr_5648_5687 = state_5619__$1;
                                                    statearr_5648_5687[2] = null;
                                                    statearr_5648_5687[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_5620 === 14) {
                                                      var state_5619__$1 = state_5619;
                                                      var statearr_5652_5688 = state_5619__$1;
                                                      statearr_5652_5688[2] = null;
                                                      statearr_5652_5688[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_5620 === 16) {
                                                        var inst_5574 = state_5619[10];
                                                        var inst_5578 = cljs.core.chunk_first.call(null, inst_5574);
                                                        var inst_5579 = cljs.core.chunk_rest.call(null, inst_5574);
                                                        var inst_5580 = cljs.core.count.call(null, inst_5578);
                                                        var inst_5560 = inst_5579;
                                                        var inst_5561 = inst_5578;
                                                        var inst_5562 = inst_5580;
                                                        var inst_5563 = 0;
                                                        var state_5619__$1 = function() {
                                                          var statearr_5653 = state_5619;
                                                          statearr_5653[12] = inst_5562;
                                                          statearr_5653[13] = inst_5563;
                                                          statearr_5653[15] = inst_5561;
                                                          statearr_5653[16] = inst_5560;
                                                          return statearr_5653;
                                                        }();
                                                        var statearr_5654_5689 = state_5619__$1;
                                                        statearr_5654_5689[2] = null;
                                                        statearr_5654_5689[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_5620 === 10) {
                                                          var inst_5562 = state_5619[12];
                                                          var inst_5563 = state_5619[13];
                                                          var inst_5561 = state_5619[15];
                                                          var inst_5560 = state_5619[16];
                                                          var inst_5568 = cljs.core._nth.call(null, inst_5561, inst_5563);
                                                          var inst_5569 = cljs.core.async.muxch_STAR_.call(null, inst_5568);
                                                          var inst_5570 = cljs.core.async.close_BANG_.call(null, inst_5569);
                                                          var inst_5571 = inst_5563 + 1;
                                                          var tmp5649 = inst_5562;
                                                          var tmp5650 = inst_5561;
                                                          var tmp5651 = inst_5560;
                                                          var inst_5560__$1 = tmp5651;
                                                          var inst_5561__$1 = tmp5650;
                                                          var inst_5562__$1 = tmp5649;
                                                          var inst_5563__$1 = inst_5571;
                                                          var state_5619__$1 = function() {
                                                            var statearr_5655 = state_5619;
                                                            statearr_5655[12] = inst_5562__$1;
                                                            statearr_5655[13] = inst_5563__$1;
                                                            statearr_5655[15] = inst_5561__$1;
                                                            statearr_5655[16] = inst_5560__$1;
                                                            statearr_5655[17] = inst_5570;
                                                            return statearr_5655;
                                                          }();
                                                          var statearr_5656_5690 = state_5619__$1;
                                                          statearr_5656_5690[2] = null;
                                                          statearr_5656_5690[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_5620 === 18) {
                                                            var inst_5589 = state_5619[2];
                                                            var state_5619__$1 = state_5619;
                                                            var statearr_5657_5691 = state_5619__$1;
                                                            statearr_5657_5691[2] = inst_5589;
                                                            statearr_5657_5691[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_5620 === 8) {
                                                              var inst_5562 = state_5619[12];
                                                              var inst_5563 = state_5619[13];
                                                              var inst_5565 = inst_5563 < inst_5562;
                                                              var inst_5566 = inst_5565;
                                                              var state_5619__$1 = state_5619;
                                                              if (cljs.core.truth_(inst_5566)) {
                                                                var statearr_5658_5692 = state_5619__$1;
                                                                statearr_5658_5692[1] = 10;
                                                              } else {
                                                                var statearr_5659_5693 = state_5619__$1;
                                                                statearr_5659_5693[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5665, mults, ensure_mult, p);
        return function(switch__4336__auto__, c__4431__auto___5665, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5660 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5660[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5660[1] = 1;
              return statearr_5660;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_5619) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5619);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5661) {
                    if (e5661 instanceof Object) {
                      var ex__4340__auto__ = e5661;
                      var statearr_5662_5694 = state_5619;
                      statearr_5662_5694[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5619);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5661;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5695 = state_5619;
                  state_5619 = G__5695;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_5619) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_5619);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5665, mults, ensure_mult, p);
      }();
      var state__4433__auto__ = function() {
        var statearr_5663 = f__4432__auto__.call(null);
        statearr_5663[6] = c__4431__auto___5665;
        return statearr_5663;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5665, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var G__5697 = arguments.length;
  switch(G__5697) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var G__5700 = arguments.length;
  switch(G__5700) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var G__5703 = arguments.length;
  switch(G__5703) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__4431__auto___5770 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_5742) {
            var state_val_5743 = state_5742[1];
            if (state_val_5743 === 7) {
              var state_5742__$1 = state_5742;
              var statearr_5744_5771 = state_5742__$1;
              statearr_5744_5771[2] = null;
              statearr_5744_5771[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5743 === 1) {
                var state_5742__$1 = state_5742;
                var statearr_5745_5772 = state_5742__$1;
                statearr_5745_5772[2] = null;
                statearr_5745_5772[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5743 === 4) {
                  var inst_5706 = state_5742[7];
                  var inst_5708 = inst_5706 < cnt;
                  var state_5742__$1 = state_5742;
                  if (cljs.core.truth_(inst_5708)) {
                    var statearr_5746_5773 = state_5742__$1;
                    statearr_5746_5773[1] = 6;
                  } else {
                    var statearr_5747_5774 = state_5742__$1;
                    statearr_5747_5774[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5743 === 15) {
                    var inst_5738 = state_5742[2];
                    var state_5742__$1 = state_5742;
                    var statearr_5748_5775 = state_5742__$1;
                    statearr_5748_5775[2] = inst_5738;
                    statearr_5748_5775[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5743 === 13) {
                      var inst_5731 = cljs.core.async.close_BANG_.call(null, out);
                      var state_5742__$1 = state_5742;
                      var statearr_5749_5776 = state_5742__$1;
                      statearr_5749_5776[2] = inst_5731;
                      statearr_5749_5776[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_5743 === 6) {
                        var state_5742__$1 = state_5742;
                        var statearr_5750_5777 = state_5742__$1;
                        statearr_5750_5777[2] = null;
                        statearr_5750_5777[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5743 === 3) {
                          var inst_5740 = state_5742[2];
                          var state_5742__$1 = state_5742;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5742__$1, inst_5740);
                        } else {
                          if (state_val_5743 === 12) {
                            var inst_5728 = state_5742[8];
                            var inst_5728__$1 = state_5742[2];
                            var inst_5729 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_5728__$1);
                            var state_5742__$1 = function() {
                              var statearr_5751 = state_5742;
                              statearr_5751[8] = inst_5728__$1;
                              return statearr_5751;
                            }();
                            if (cljs.core.truth_(inst_5729)) {
                              var statearr_5752_5778 = state_5742__$1;
                              statearr_5752_5778[1] = 13;
                            } else {
                              var statearr_5753_5779 = state_5742__$1;
                              statearr_5753_5779[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5743 === 2) {
                              var inst_5705 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_5706 = 0;
                              var state_5742__$1 = function() {
                                var statearr_5754 = state_5742;
                                statearr_5754[7] = inst_5706;
                                statearr_5754[9] = inst_5705;
                                return statearr_5754;
                              }();
                              var statearr_5755_5780 = state_5742__$1;
                              statearr_5755_5780[2] = null;
                              statearr_5755_5780[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5743 === 11) {
                                var inst_5706 = state_5742[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_5742, 10, Object, null, 9);
                                var inst_5715 = chs__$1.call(null, inst_5706);
                                var inst_5716 = done.call(null, inst_5706);
                                var inst_5717 = cljs.core.async.take_BANG_.call(null, inst_5715, inst_5716);
                                var state_5742__$1 = state_5742;
                                var statearr_5756_5781 = state_5742__$1;
                                statearr_5756_5781[2] = inst_5717;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5742__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5743 === 9) {
                                  var inst_5706 = state_5742[7];
                                  var inst_5719 = state_5742[2];
                                  var inst_5720 = inst_5706 + 1;
                                  var inst_5706__$1 = inst_5720;
                                  var state_5742__$1 = function() {
                                    var statearr_5757 = state_5742;
                                    statearr_5757[7] = inst_5706__$1;
                                    statearr_5757[10] = inst_5719;
                                    return statearr_5757;
                                  }();
                                  var statearr_5758_5782 = state_5742__$1;
                                  statearr_5758_5782[2] = null;
                                  statearr_5758_5782[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_5743 === 5) {
                                    var inst_5726 = state_5742[2];
                                    var state_5742__$1 = function() {
                                      var statearr_5759 = state_5742;
                                      statearr_5759[11] = inst_5726;
                                      return statearr_5759;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5742__$1, 12, dchan);
                                  } else {
                                    if (state_val_5743 === 14) {
                                      var inst_5728 = state_5742[8];
                                      var inst_5733 = cljs.core.apply.call(null, f, inst_5728);
                                      var state_5742__$1 = state_5742;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5742__$1, 16, out, inst_5733);
                                    } else {
                                      if (state_val_5743 === 16) {
                                        var inst_5735 = state_5742[2];
                                        var state_5742__$1 = function() {
                                          var statearr_5760 = state_5742;
                                          statearr_5760[12] = inst_5735;
                                          return statearr_5760;
                                        }();
                                        var statearr_5761_5783 = state_5742__$1;
                                        statearr_5761_5783[2] = null;
                                        statearr_5761_5783[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_5743 === 10) {
                                          var inst_5710 = state_5742[2];
                                          var inst_5711 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_5742__$1 = function() {
                                            var statearr_5762 = state_5742;
                                            statearr_5762[13] = inst_5710;
                                            return statearr_5762;
                                          }();
                                          var statearr_5763_5784 = state_5742__$1;
                                          statearr_5763_5784[2] = inst_5711;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5742__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_5743 === 8) {
                                            var inst_5724 = state_5742[2];
                                            var state_5742__$1 = state_5742;
                                            var statearr_5764_5785 = state_5742__$1;
                                            statearr_5764_5785[2] = inst_5724;
                                            statearr_5764_5785[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__4336__auto__, c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5765 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5765[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5765[1] = 1;
              return statearr_5765;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_5742) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5742);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5766) {
                    if (e5766 instanceof Object) {
                      var ex__4340__auto__ = e5766;
                      var statearr_5767_5786 = state_5742;
                      statearr_5767_5786[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5742);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5766;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5787 = state_5742;
                  state_5742 = G__5787;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_5742) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_5742);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__4433__auto__ = function() {
        var statearr_5768 = f__4432__auto__.call(null);
        statearr_5768[6] = c__4431__auto___5770;
        return statearr_5768;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5770, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var G__5790 = arguments.length;
  switch(G__5790) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___5844 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5844, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5844, out) {
          return function(state_5822) {
            var state_val_5823 = state_5822[1];
            if (state_val_5823 === 7) {
              var inst_5801 = state_5822[7];
              var inst_5802 = state_5822[8];
              var inst_5801__$1 = state_5822[2];
              var inst_5802__$1 = cljs.core.nth.call(null, inst_5801__$1, 0, null);
              var inst_5803 = cljs.core.nth.call(null, inst_5801__$1, 1, null);
              var inst_5804 = inst_5802__$1 == null;
              var state_5822__$1 = function() {
                var statearr_5824 = state_5822;
                statearr_5824[7] = inst_5801__$1;
                statearr_5824[9] = inst_5803;
                statearr_5824[8] = inst_5802__$1;
                return statearr_5824;
              }();
              if (cljs.core.truth_(inst_5804)) {
                var statearr_5825_5845 = state_5822__$1;
                statearr_5825_5845[1] = 8;
              } else {
                var statearr_5826_5846 = state_5822__$1;
                statearr_5826_5846[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5823 === 1) {
                var inst_5791 = cljs.core.vec.call(null, chs);
                var inst_5792 = inst_5791;
                var state_5822__$1 = function() {
                  var statearr_5827 = state_5822;
                  statearr_5827[10] = inst_5792;
                  return statearr_5827;
                }();
                var statearr_5828_5847 = state_5822__$1;
                statearr_5828_5847[2] = null;
                statearr_5828_5847[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5823 === 4) {
                  var inst_5792 = state_5822[10];
                  var state_5822__$1 = state_5822;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_5822__$1, 7, inst_5792);
                } else {
                  if (state_val_5823 === 6) {
                    var inst_5818 = state_5822[2];
                    var state_5822__$1 = state_5822;
                    var statearr_5829_5848 = state_5822__$1;
                    statearr_5829_5848[2] = inst_5818;
                    statearr_5829_5848[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5823 === 3) {
                      var inst_5820 = state_5822[2];
                      var state_5822__$1 = state_5822;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5822__$1, inst_5820);
                    } else {
                      if (state_val_5823 === 2) {
                        var inst_5792 = state_5822[10];
                        var inst_5794 = cljs.core.count.call(null, inst_5792);
                        var inst_5795 = inst_5794 > 0;
                        var state_5822__$1 = state_5822;
                        if (cljs.core.truth_(inst_5795)) {
                          var statearr_5831_5849 = state_5822__$1;
                          statearr_5831_5849[1] = 4;
                        } else {
                          var statearr_5832_5850 = state_5822__$1;
                          statearr_5832_5850[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5823 === 11) {
                          var inst_5792 = state_5822[10];
                          var inst_5811 = state_5822[2];
                          var tmp5830 = inst_5792;
                          var inst_5792__$1 = tmp5830;
                          var state_5822__$1 = function() {
                            var statearr_5833 = state_5822;
                            statearr_5833[10] = inst_5792__$1;
                            statearr_5833[11] = inst_5811;
                            return statearr_5833;
                          }();
                          var statearr_5834_5851 = state_5822__$1;
                          statearr_5834_5851[2] = null;
                          statearr_5834_5851[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5823 === 9) {
                            var inst_5802 = state_5822[8];
                            var state_5822__$1 = state_5822;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5822__$1, 11, out, inst_5802);
                          } else {
                            if (state_val_5823 === 5) {
                              var inst_5816 = cljs.core.async.close_BANG_.call(null, out);
                              var state_5822__$1 = state_5822;
                              var statearr_5835_5852 = state_5822__$1;
                              statearr_5835_5852[2] = inst_5816;
                              statearr_5835_5852[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5823 === 10) {
                                var inst_5814 = state_5822[2];
                                var state_5822__$1 = state_5822;
                                var statearr_5836_5853 = state_5822__$1;
                                statearr_5836_5853[2] = inst_5814;
                                statearr_5836_5853[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5823 === 8) {
                                  var inst_5792 = state_5822[10];
                                  var inst_5801 = state_5822[7];
                                  var inst_5803 = state_5822[9];
                                  var inst_5802 = state_5822[8];
                                  var inst_5806 = function() {
                                    var cs = inst_5792;
                                    var vec__5797 = inst_5801;
                                    var v = inst_5802;
                                    var c = inst_5803;
                                    return function(cs, vec__5797, v, c, inst_5792, inst_5801, inst_5803, inst_5802, state_val_5823, c__4431__auto___5844, out) {
                                      return function(p1__5788_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__5788_SHARP_);
                                      };
                                    }(cs, vec__5797, v, c, inst_5792, inst_5801, inst_5803, inst_5802, state_val_5823, c__4431__auto___5844, out);
                                  }();
                                  var inst_5807 = cljs.core.filterv.call(null, inst_5806, inst_5792);
                                  var inst_5792__$1 = inst_5807;
                                  var state_5822__$1 = function() {
                                    var statearr_5837 = state_5822;
                                    statearr_5837[10] = inst_5792__$1;
                                    return statearr_5837;
                                  }();
                                  var statearr_5838_5854 = state_5822__$1;
                                  statearr_5838_5854[2] = null;
                                  statearr_5838_5854[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5844, out);
        return function(switch__4336__auto__, c__4431__auto___5844, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5839 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_5839[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5839[1] = 1;
              return statearr_5839;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_5822) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5822);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5840) {
                    if (e5840 instanceof Object) {
                      var ex__4340__auto__ = e5840;
                      var statearr_5841_5855 = state_5822;
                      statearr_5841_5855[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5822);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5840;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5856 = state_5822;
                  state_5822 = G__5856;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_5822) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_5822);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5844, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_5842 = f__4432__auto__.call(null);
        statearr_5842[6] = c__4431__auto___5844;
        return statearr_5842;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5844, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var G__5858 = arguments.length;
  switch(G__5858) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___5903 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5903, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5903, out) {
          return function(state_5882) {
            var state_val_5883 = state_5882[1];
            if (state_val_5883 === 7) {
              var inst_5864 = state_5882[7];
              var inst_5864__$1 = state_5882[2];
              var inst_5865 = inst_5864__$1 == null;
              var inst_5866 = cljs.core.not.call(null, inst_5865);
              var state_5882__$1 = function() {
                var statearr_5884 = state_5882;
                statearr_5884[7] = inst_5864__$1;
                return statearr_5884;
              }();
              if (inst_5866) {
                var statearr_5885_5904 = state_5882__$1;
                statearr_5885_5904[1] = 8;
              } else {
                var statearr_5886_5905 = state_5882__$1;
                statearr_5886_5905[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5883 === 1) {
                var inst_5859 = 0;
                var state_5882__$1 = function() {
                  var statearr_5887 = state_5882;
                  statearr_5887[8] = inst_5859;
                  return statearr_5887;
                }();
                var statearr_5888_5906 = state_5882__$1;
                statearr_5888_5906[2] = null;
                statearr_5888_5906[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5883 === 4) {
                  var state_5882__$1 = state_5882;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5882__$1, 7, ch);
                } else {
                  if (state_val_5883 === 6) {
                    var inst_5877 = state_5882[2];
                    var state_5882__$1 = state_5882;
                    var statearr_5889_5907 = state_5882__$1;
                    statearr_5889_5907[2] = inst_5877;
                    statearr_5889_5907[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5883 === 3) {
                      var inst_5879 = state_5882[2];
                      var inst_5880 = cljs.core.async.close_BANG_.call(null, out);
                      var state_5882__$1 = function() {
                        var statearr_5890 = state_5882;
                        statearr_5890[9] = inst_5879;
                        return statearr_5890;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5882__$1, inst_5880);
                    } else {
                      if (state_val_5883 === 2) {
                        var inst_5859 = state_5882[8];
                        var inst_5861 = inst_5859 < n;
                        var state_5882__$1 = state_5882;
                        if (cljs.core.truth_(inst_5861)) {
                          var statearr_5891_5908 = state_5882__$1;
                          statearr_5891_5908[1] = 4;
                        } else {
                          var statearr_5892_5909 = state_5882__$1;
                          statearr_5892_5909[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_5883 === 11) {
                          var inst_5859 = state_5882[8];
                          var inst_5869 = state_5882[2];
                          var inst_5870 = inst_5859 + 1;
                          var inst_5859__$1 = inst_5870;
                          var state_5882__$1 = function() {
                            var statearr_5893 = state_5882;
                            statearr_5893[10] = inst_5869;
                            statearr_5893[8] = inst_5859__$1;
                            return statearr_5893;
                          }();
                          var statearr_5894_5910 = state_5882__$1;
                          statearr_5894_5910[2] = null;
                          statearr_5894_5910[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5883 === 9) {
                            var state_5882__$1 = state_5882;
                            var statearr_5895_5911 = state_5882__$1;
                            statearr_5895_5911[2] = null;
                            statearr_5895_5911[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5883 === 5) {
                              var state_5882__$1 = state_5882;
                              var statearr_5896_5912 = state_5882__$1;
                              statearr_5896_5912[2] = null;
                              statearr_5896_5912[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5883 === 10) {
                                var inst_5874 = state_5882[2];
                                var state_5882__$1 = state_5882;
                                var statearr_5897_5913 = state_5882__$1;
                                statearr_5897_5913[2] = inst_5874;
                                statearr_5897_5913[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5883 === 8) {
                                  var inst_5864 = state_5882[7];
                                  var state_5882__$1 = state_5882;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5882__$1, 11, out, inst_5864);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5903, out);
        return function(switch__4336__auto__, c__4431__auto___5903, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5898 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_5898[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5898[1] = 1;
              return statearr_5898;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_5882) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5882);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5899) {
                    if (e5899 instanceof Object) {
                      var ex__4340__auto__ = e5899;
                      var statearr_5900_5914 = state_5882;
                      statearr_5900_5914[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5882);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5899;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5915 = state_5882;
                  state_5882 = G__5915;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_5882) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_5882);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5903, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_5901 = f__4432__auto__.call(null);
        statearr_5901[6] = c__4431__auto___5903;
        return statearr_5901;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5903, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5917 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async5917 = function(f, ch, meta5918) {
      this.f = f;
      this.ch = ch;
      this.meta5918 = meta5918;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5919, meta5918__$1) {
      var self__ = this;
      var _5919__$1 = this;
      return new cljs.core.async.t_cljs$core$async5917(self__.f, self__.ch, meta5918__$1);
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5919) {
      var self__ = this;
      var _5919__$1 = this;
      return self__.meta5918;
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5920 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async5920 = function(f, ch, meta5918, _, fn1, meta5921) {
            this.f = f;
            this.ch = ch;
            this.meta5918 = meta5918;
            this._ = _;
            this.fn1 = fn1;
            this.meta5921 = meta5921;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_5922, meta5921__$1) {
              var self__ = this;
              var _5922__$1 = this;
              return new cljs.core.async.t_cljs$core$async5920(self__.f, self__.ch, self__.meta5918, self__._, self__.fn1, meta5921__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_5922) {
              var self__ = this;
              var _5922__$1 = this;
              return self__.meta5921;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__5916_SHARP_) {
                  return f1.call(null, p1__5916_SHARP_ == null ? null : self__.f.call(null, p1__5916_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta5918", "meta5918", 2106771815, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", 
              "t_cljs$core$async5917", "cljs.core.async/t_cljs$core$async5917", 1302774004, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta5921", "meta5921", 924674485, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async5920.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async5920.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5920";
          cljs.core.async.t_cljs$core$async5920.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
              return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5920");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async5920 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async5920(f__$1, ch__$1, meta5918__$1, ___$2, fn1__$1, meta5921) {
              return new cljs.core.async.t_cljs$core$async5920(f__$1, ch__$1, meta5918__$1, ___$2, fn1__$1, meta5921);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async5920(self__.f, self__.ch, self__.meta5918, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = ret;
        if (cljs.core.truth_(and__4120__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4120__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5917.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async5917.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta5918", "meta5918", 2106771815, null)], null);
    };
    cljs.core.async.t_cljs$core$async5917.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async5917.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5917";
    cljs.core.async.t_cljs$core$async5917.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5917");
    };
    cljs.core.async.__GT_t_cljs$core$async5917 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async5917(f__$1, ch__$1, meta5918) {
      return new cljs.core.async.t_cljs$core$async5917(f__$1, ch__$1, meta5918);
    };
  }
  return new cljs.core.async.t_cljs$core$async5917(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5923 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async5923 = function(f, ch, meta5924) {
      this.f = f;
      this.ch = ch;
      this.meta5924 = meta5924;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5925, meta5924__$1) {
      var self__ = this;
      var _5925__$1 = this;
      return new cljs.core.async.t_cljs$core$async5923(self__.f, self__.ch, meta5924__$1);
    };
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5925) {
      var self__ = this;
      var _5925__$1 = this;
      return self__.meta5924;
    };
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5923.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async5923.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta5924", "meta5924", 1290312389, null)], null);
    };
    cljs.core.async.t_cljs$core$async5923.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async5923.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5923";
    cljs.core.async.t_cljs$core$async5923.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5923");
    };
    cljs.core.async.__GT_t_cljs$core$async5923 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async5923(f__$1, ch__$1, meta5924) {
      return new cljs.core.async.t_cljs$core$async5923(f__$1, ch__$1, meta5924);
    };
  }
  return new cljs.core.async.t_cljs$core$async5923(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.async !== "undefined" && typeof cljs.core.async.t_cljs$core$async5926 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async5926 = function(p, ch, meta5927) {
      this.p = p;
      this.ch = ch;
      this.meta5927 = meta5927;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5928, meta5927__$1) {
      var self__ = this;
      var _5928__$1 = this;
      return new cljs.core.async.t_cljs$core$async5926(self__.p, self__.ch, meta5927__$1);
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5928) {
      var self__ = this;
      var _5928__$1 = this;
      return self__.meta5927;
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async5926.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async5926.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta5927", "meta5927", 1089702527, null)], null);
    };
    cljs.core.async.t_cljs$core$async5926.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async5926.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async5926";
    cljs.core.async.t_cljs$core$async5926.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write.call(null, writer__4375__auto__, "cljs.core.async/t_cljs$core$async5926");
    };
    cljs.core.async.__GT_t_cljs$core$async5926 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async5926(p__$1, ch__$1, meta5927) {
      return new cljs.core.async.t_cljs$core$async5926(p__$1, ch__$1, meta5927);
    };
  }
  return new cljs.core.async.t_cljs$core$async5926(p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var G__5930 = arguments.length;
  switch(G__5930) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___5970 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___5970, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___5970, out) {
          return function(state_5951) {
            var state_val_5952 = state_5951[1];
            if (state_val_5952 === 7) {
              var inst_5947 = state_5951[2];
              var state_5951__$1 = state_5951;
              var statearr_5953_5971 = state_5951__$1;
              statearr_5953_5971[2] = inst_5947;
              statearr_5953_5971[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_5952 === 1) {
                var state_5951__$1 = state_5951;
                var statearr_5954_5972 = state_5951__$1;
                statearr_5954_5972[2] = null;
                statearr_5954_5972[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_5952 === 4) {
                  var inst_5933 = state_5951[7];
                  var inst_5933__$1 = state_5951[2];
                  var inst_5934 = inst_5933__$1 == null;
                  var state_5951__$1 = function() {
                    var statearr_5955 = state_5951;
                    statearr_5955[7] = inst_5933__$1;
                    return statearr_5955;
                  }();
                  if (cljs.core.truth_(inst_5934)) {
                    var statearr_5956_5973 = state_5951__$1;
                    statearr_5956_5973[1] = 5;
                  } else {
                    var statearr_5957_5974 = state_5951__$1;
                    statearr_5957_5974[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_5952 === 6) {
                    var inst_5933 = state_5951[7];
                    var inst_5938 = p.call(null, inst_5933);
                    var state_5951__$1 = state_5951;
                    if (cljs.core.truth_(inst_5938)) {
                      var statearr_5958_5975 = state_5951__$1;
                      statearr_5958_5975[1] = 8;
                    } else {
                      var statearr_5959_5976 = state_5951__$1;
                      statearr_5959_5976[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_5952 === 3) {
                      var inst_5949 = state_5951[2];
                      var state_5951__$1 = state_5951;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5951__$1, inst_5949);
                    } else {
                      if (state_val_5952 === 2) {
                        var state_5951__$1 = state_5951;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5951__$1, 4, ch);
                      } else {
                        if (state_val_5952 === 11) {
                          var inst_5941 = state_5951[2];
                          var state_5951__$1 = state_5951;
                          var statearr_5960_5977 = state_5951__$1;
                          statearr_5960_5977[2] = inst_5941;
                          statearr_5960_5977[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_5952 === 9) {
                            var state_5951__$1 = state_5951;
                            var statearr_5961_5978 = state_5951__$1;
                            statearr_5961_5978[2] = null;
                            statearr_5961_5978[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_5952 === 5) {
                              var inst_5936 = cljs.core.async.close_BANG_.call(null, out);
                              var state_5951__$1 = state_5951;
                              var statearr_5962_5979 = state_5951__$1;
                              statearr_5962_5979[2] = inst_5936;
                              statearr_5962_5979[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_5952 === 10) {
                                var inst_5944 = state_5951[2];
                                var state_5951__$1 = function() {
                                  var statearr_5963 = state_5951;
                                  statearr_5963[8] = inst_5944;
                                  return statearr_5963;
                                }();
                                var statearr_5964_5980 = state_5951__$1;
                                statearr_5964_5980[2] = null;
                                statearr_5964_5980[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_5952 === 8) {
                                  var inst_5933 = state_5951[7];
                                  var state_5951__$1 = state_5951;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5951__$1, 11, out, inst_5933);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___5970, out);
        return function(switch__4336__auto__, c__4431__auto___5970, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_5965 = [null, null, null, null, null, null, null, null, null];
              statearr_5965[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_5965[1] = 1;
              return statearr_5965;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_5951) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_5951);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e5966) {
                    if (e5966 instanceof Object) {
                      var ex__4340__auto__ = e5966;
                      var statearr_5967_5981 = state_5951;
                      statearr_5967_5981[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_5951);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e5966;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__5982 = state_5951;
                  state_5951 = G__5982;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_5951) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_5951);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___5970, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_5968 = f__4432__auto__.call(null);
        statearr_5968[6] = c__4431__auto___5970;
        return statearr_5968;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___5970, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var G__5984 = arguments.length;
  switch(G__5984) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__4431__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto__) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto__) {
          return function(state_6047) {
            var state_val_6048 = state_6047[1];
            if (state_val_6048 === 7) {
              var inst_6043 = state_6047[2];
              var state_6047__$1 = state_6047;
              var statearr_6049_6087 = state_6047__$1;
              statearr_6049_6087[2] = inst_6043;
              statearr_6049_6087[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6048 === 20) {
                var inst_6013 = state_6047[7];
                var inst_6024 = state_6047[2];
                var inst_6025 = cljs.core.next.call(null, inst_6013);
                var inst_5999 = inst_6025;
                var inst_6000 = null;
                var inst_6001 = 0;
                var inst_6002 = 0;
                var state_6047__$1 = function() {
                  var statearr_6050 = state_6047;
                  statearr_6050[8] = inst_6000;
                  statearr_6050[9] = inst_5999;
                  statearr_6050[10] = inst_6024;
                  statearr_6050[11] = inst_6002;
                  statearr_6050[12] = inst_6001;
                  return statearr_6050;
                }();
                var statearr_6051_6088 = state_6047__$1;
                statearr_6051_6088[2] = null;
                statearr_6051_6088[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6048 === 1) {
                  var state_6047__$1 = state_6047;
                  var statearr_6052_6089 = state_6047__$1;
                  statearr_6052_6089[2] = null;
                  statearr_6052_6089[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6048 === 4) {
                    var inst_5988 = state_6047[13];
                    var inst_5988__$1 = state_6047[2];
                    var inst_5989 = inst_5988__$1 == null;
                    var state_6047__$1 = function() {
                      var statearr_6053 = state_6047;
                      statearr_6053[13] = inst_5988__$1;
                      return statearr_6053;
                    }();
                    if (cljs.core.truth_(inst_5989)) {
                      var statearr_6054_6090 = state_6047__$1;
                      statearr_6054_6090[1] = 5;
                    } else {
                      var statearr_6055_6091 = state_6047__$1;
                      statearr_6055_6091[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6048 === 15) {
                      var state_6047__$1 = state_6047;
                      var statearr_6059_6092 = state_6047__$1;
                      statearr_6059_6092[2] = null;
                      statearr_6059_6092[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6048 === 21) {
                        var state_6047__$1 = state_6047;
                        var statearr_6060_6093 = state_6047__$1;
                        statearr_6060_6093[2] = null;
                        statearr_6060_6093[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6048 === 13) {
                          var inst_6000 = state_6047[8];
                          var inst_5999 = state_6047[9];
                          var inst_6002 = state_6047[11];
                          var inst_6001 = state_6047[12];
                          var inst_6009 = state_6047[2];
                          var inst_6010 = inst_6002 + 1;
                          var tmp6056 = inst_6000;
                          var tmp6057 = inst_5999;
                          var tmp6058 = inst_6001;
                          var inst_5999__$1 = tmp6057;
                          var inst_6000__$1 = tmp6056;
                          var inst_6001__$1 = tmp6058;
                          var inst_6002__$1 = inst_6010;
                          var state_6047__$1 = function() {
                            var statearr_6061 = state_6047;
                            statearr_6061[8] = inst_6000__$1;
                            statearr_6061[9] = inst_5999__$1;
                            statearr_6061[14] = inst_6009;
                            statearr_6061[11] = inst_6002__$1;
                            statearr_6061[12] = inst_6001__$1;
                            return statearr_6061;
                          }();
                          var statearr_6062_6094 = state_6047__$1;
                          statearr_6062_6094[2] = null;
                          statearr_6062_6094[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6048 === 22) {
                            var state_6047__$1 = state_6047;
                            var statearr_6063_6095 = state_6047__$1;
                            statearr_6063_6095[2] = null;
                            statearr_6063_6095[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_6048 === 6) {
                              var inst_5988 = state_6047[13];
                              var inst_5997 = f.call(null, inst_5988);
                              var inst_5998 = cljs.core.seq.call(null, inst_5997);
                              var inst_5999 = inst_5998;
                              var inst_6000 = null;
                              var inst_6001 = 0;
                              var inst_6002 = 0;
                              var state_6047__$1 = function() {
                                var statearr_6064 = state_6047;
                                statearr_6064[8] = inst_6000;
                                statearr_6064[9] = inst_5999;
                                statearr_6064[11] = inst_6002;
                                statearr_6064[12] = inst_6001;
                                return statearr_6064;
                              }();
                              var statearr_6065_6096 = state_6047__$1;
                              statearr_6065_6096[2] = null;
                              statearr_6065_6096[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6048 === 17) {
                                var inst_6013 = state_6047[7];
                                var inst_6017 = cljs.core.chunk_first.call(null, inst_6013);
                                var inst_6018 = cljs.core.chunk_rest.call(null, inst_6013);
                                var inst_6019 = cljs.core.count.call(null, inst_6017);
                                var inst_5999 = inst_6018;
                                var inst_6000 = inst_6017;
                                var inst_6001 = inst_6019;
                                var inst_6002 = 0;
                                var state_6047__$1 = function() {
                                  var statearr_6066 = state_6047;
                                  statearr_6066[8] = inst_6000;
                                  statearr_6066[9] = inst_5999;
                                  statearr_6066[11] = inst_6002;
                                  statearr_6066[12] = inst_6001;
                                  return statearr_6066;
                                }();
                                var statearr_6067_6097 = state_6047__$1;
                                statearr_6067_6097[2] = null;
                                statearr_6067_6097[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6048 === 3) {
                                  var inst_6045 = state_6047[2];
                                  var state_6047__$1 = state_6047;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6047__$1, inst_6045);
                                } else {
                                  if (state_val_6048 === 12) {
                                    var inst_6033 = state_6047[2];
                                    var state_6047__$1 = state_6047;
                                    var statearr_6068_6098 = state_6047__$1;
                                    statearr_6068_6098[2] = inst_6033;
                                    statearr_6068_6098[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6048 === 2) {
                                      var state_6047__$1 = state_6047;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6047__$1, 4, in$);
                                    } else {
                                      if (state_val_6048 === 23) {
                                        var inst_6041 = state_6047[2];
                                        var state_6047__$1 = state_6047;
                                        var statearr_6069_6099 = state_6047__$1;
                                        statearr_6069_6099[2] = inst_6041;
                                        statearr_6069_6099[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6048 === 19) {
                                          var inst_6028 = state_6047[2];
                                          var state_6047__$1 = state_6047;
                                          var statearr_6070_6100 = state_6047__$1;
                                          statearr_6070_6100[2] = inst_6028;
                                          statearr_6070_6100[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_6048 === 11) {
                                            var inst_6013 = state_6047[7];
                                            var inst_5999 = state_6047[9];
                                            var inst_6013__$1 = cljs.core.seq.call(null, inst_5999);
                                            var state_6047__$1 = function() {
                                              var statearr_6071 = state_6047;
                                              statearr_6071[7] = inst_6013__$1;
                                              return statearr_6071;
                                            }();
                                            if (inst_6013__$1) {
                                              var statearr_6072_6101 = state_6047__$1;
                                              statearr_6072_6101[1] = 14;
                                            } else {
                                              var statearr_6073_6102 = state_6047__$1;
                                              statearr_6073_6102[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_6048 === 9) {
                                              var inst_6035 = state_6047[2];
                                              var inst_6036 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_6047__$1 = function() {
                                                var statearr_6074 = state_6047;
                                                statearr_6074[15] = inst_6035;
                                                return statearr_6074;
                                              }();
                                              if (cljs.core.truth_(inst_6036)) {
                                                var statearr_6075_6103 = state_6047__$1;
                                                statearr_6075_6103[1] = 21;
                                              } else {
                                                var statearr_6076_6104 = state_6047__$1;
                                                statearr_6076_6104[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_6048 === 5) {
                                                var inst_5991 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_6047__$1 = state_6047;
                                                var statearr_6077_6105 = state_6047__$1;
                                                statearr_6077_6105[2] = inst_5991;
                                                statearr_6077_6105[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_6048 === 14) {
                                                  var inst_6013 = state_6047[7];
                                                  var inst_6015 = cljs.core.chunked_seq_QMARK_.call(null, inst_6013);
                                                  var state_6047__$1 = state_6047;
                                                  if (inst_6015) {
                                                    var statearr_6078_6106 = state_6047__$1;
                                                    statearr_6078_6106[1] = 17;
                                                  } else {
                                                    var statearr_6079_6107 = state_6047__$1;
                                                    statearr_6079_6107[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_6048 === 16) {
                                                    var inst_6031 = state_6047[2];
                                                    var state_6047__$1 = state_6047;
                                                    var statearr_6080_6108 = state_6047__$1;
                                                    statearr_6080_6108[2] = inst_6031;
                                                    statearr_6080_6108[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_6048 === 10) {
                                                      var inst_6000 = state_6047[8];
                                                      var inst_6002 = state_6047[11];
                                                      var inst_6007 = cljs.core._nth.call(null, inst_6000, inst_6002);
                                                      var state_6047__$1 = state_6047;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6047__$1, 13, out, inst_6007);
                                                    } else {
                                                      if (state_val_6048 === 18) {
                                                        var inst_6013 = state_6047[7];
                                                        var inst_6022 = cljs.core.first.call(null, inst_6013);
                                                        var state_6047__$1 = state_6047;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6047__$1, 20, out, inst_6022);
                                                      } else {
                                                        if (state_val_6048 === 8) {
                                                          var inst_6002 = state_6047[11];
                                                          var inst_6001 = state_6047[12];
                                                          var inst_6004 = inst_6002 < inst_6001;
                                                          var inst_6005 = inst_6004;
                                                          var state_6047__$1 = state_6047;
                                                          if (cljs.core.truth_(inst_6005)) {
                                                            var statearr_6081_6109 = state_6047__$1;
                                                            statearr_6081_6109[1] = 10;
                                                          } else {
                                                            var statearr_6082_6110 = state_6047__$1;
                                                            statearr_6082_6110[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto__);
        return function(switch__4336__auto__, c__4431__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____0 = function() {
              var statearr_6083 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6083[0] = cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__;
              statearr_6083[1] = 1;
              return statearr_6083;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____1 = function(state_6047) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_6047);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e6084) {
                    if (e6084 instanceof Object) {
                      var ex__4340__auto__ = e6084;
                      var statearr_6085_6111 = state_6047;
                      statearr_6085_6111[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6047);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6084;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6112 = state_6047;
                  state_6047 = G__6112;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__ = function(state_6047) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____1.call(this, state_6047);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__4337__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto__);
      }();
      var state__4433__auto__ = function() {
        var statearr_6086 = f__4432__auto__.call(null);
        statearr_6086[6] = c__4431__auto__;
        return statearr_6086;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto__));
  return c__4431__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var G__6114 = arguments.length;
  switch(G__6114) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var G__6117 = arguments.length;
  switch(G__6117) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var G__6120 = arguments.length;
  switch(G__6120) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___6167 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___6167, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___6167, out) {
          return function(state_6144) {
            var state_val_6145 = state_6144[1];
            if (state_val_6145 === 7) {
              var inst_6139 = state_6144[2];
              var state_6144__$1 = state_6144;
              var statearr_6146_6168 = state_6144__$1;
              statearr_6146_6168[2] = inst_6139;
              statearr_6146_6168[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6145 === 1) {
                var inst_6121 = null;
                var state_6144__$1 = function() {
                  var statearr_6147 = state_6144;
                  statearr_6147[7] = inst_6121;
                  return statearr_6147;
                }();
                var statearr_6148_6169 = state_6144__$1;
                statearr_6148_6169[2] = null;
                statearr_6148_6169[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6145 === 4) {
                  var inst_6124 = state_6144[8];
                  var inst_6124__$1 = state_6144[2];
                  var inst_6125 = inst_6124__$1 == null;
                  var inst_6126 = cljs.core.not.call(null, inst_6125);
                  var state_6144__$1 = function() {
                    var statearr_6149 = state_6144;
                    statearr_6149[8] = inst_6124__$1;
                    return statearr_6149;
                  }();
                  if (inst_6126) {
                    var statearr_6150_6170 = state_6144__$1;
                    statearr_6150_6170[1] = 5;
                  } else {
                    var statearr_6151_6171 = state_6144__$1;
                    statearr_6151_6171[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6145 === 6) {
                    var state_6144__$1 = state_6144;
                    var statearr_6152_6172 = state_6144__$1;
                    statearr_6152_6172[2] = null;
                    statearr_6152_6172[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6145 === 3) {
                      var inst_6141 = state_6144[2];
                      var inst_6142 = cljs.core.async.close_BANG_.call(null, out);
                      var state_6144__$1 = function() {
                        var statearr_6153 = state_6144;
                        statearr_6153[9] = inst_6141;
                        return statearr_6153;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6144__$1, inst_6142);
                    } else {
                      if (state_val_6145 === 2) {
                        var state_6144__$1 = state_6144;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6144__$1, 4, ch);
                      } else {
                        if (state_val_6145 === 11) {
                          var inst_6124 = state_6144[8];
                          var inst_6133 = state_6144[2];
                          var inst_6121 = inst_6124;
                          var state_6144__$1 = function() {
                            var statearr_6154 = state_6144;
                            statearr_6154[7] = inst_6121;
                            statearr_6154[10] = inst_6133;
                            return statearr_6154;
                          }();
                          var statearr_6155_6173 = state_6144__$1;
                          statearr_6155_6173[2] = null;
                          statearr_6155_6173[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_6145 === 9) {
                            var inst_6124 = state_6144[8];
                            var state_6144__$1 = state_6144;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6144__$1, 11, out, inst_6124);
                          } else {
                            if (state_val_6145 === 5) {
                              var inst_6121 = state_6144[7];
                              var inst_6124 = state_6144[8];
                              var inst_6128 = cljs.core._EQ_.call(null, inst_6124, inst_6121);
                              var state_6144__$1 = state_6144;
                              if (inst_6128) {
                                var statearr_6157_6174 = state_6144__$1;
                                statearr_6157_6174[1] = 8;
                              } else {
                                var statearr_6158_6175 = state_6144__$1;
                                statearr_6158_6175[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_6145 === 10) {
                                var inst_6136 = state_6144[2];
                                var state_6144__$1 = state_6144;
                                var statearr_6159_6176 = state_6144__$1;
                                statearr_6159_6176[2] = inst_6136;
                                statearr_6159_6176[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6145 === 8) {
                                  var inst_6121 = state_6144[7];
                                  var tmp6156 = inst_6121;
                                  var inst_6121__$1 = tmp6156;
                                  var state_6144__$1 = function() {
                                    var statearr_6160 = state_6144;
                                    statearr_6160[7] = inst_6121__$1;
                                    return statearr_6160;
                                  }();
                                  var statearr_6161_6177 = state_6144__$1;
                                  statearr_6161_6177[2] = null;
                                  statearr_6161_6177[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___6167, out);
        return function(switch__4336__auto__, c__4431__auto___6167, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_6162 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_6162[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_6162[1] = 1;
              return statearr_6162;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_6144) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_6144);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e6163) {
                    if (e6163 instanceof Object) {
                      var ex__4340__auto__ = e6163;
                      var statearr_6164_6178 = state_6144;
                      statearr_6164_6178[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6144);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6163;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6179 = state_6144;
                  state_6144 = G__6179;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_6144) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_6144);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___6167, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_6165 = f__4432__auto__.call(null);
        statearr_6165[6] = c__4431__auto___6167;
        return statearr_6165;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___6167, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var G__6181 = arguments.length;
  switch(G__6181) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___6247 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___6247, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___6247, out) {
          return function(state_6219) {
            var state_val_6220 = state_6219[1];
            if (state_val_6220 === 7) {
              var inst_6215 = state_6219[2];
              var state_6219__$1 = state_6219;
              var statearr_6221_6248 = state_6219__$1;
              statearr_6221_6248[2] = inst_6215;
              statearr_6221_6248[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6220 === 1) {
                var inst_6182 = new Array(n);
                var inst_6183 = inst_6182;
                var inst_6184 = 0;
                var state_6219__$1 = function() {
                  var statearr_6222 = state_6219;
                  statearr_6222[7] = inst_6183;
                  statearr_6222[8] = inst_6184;
                  return statearr_6222;
                }();
                var statearr_6223_6249 = state_6219__$1;
                statearr_6223_6249[2] = null;
                statearr_6223_6249[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6220 === 4) {
                  var inst_6187 = state_6219[9];
                  var inst_6187__$1 = state_6219[2];
                  var inst_6188 = inst_6187__$1 == null;
                  var inst_6189 = cljs.core.not.call(null, inst_6188);
                  var state_6219__$1 = function() {
                    var statearr_6224 = state_6219;
                    statearr_6224[9] = inst_6187__$1;
                    return statearr_6224;
                  }();
                  if (inst_6189) {
                    var statearr_6225_6250 = state_6219__$1;
                    statearr_6225_6250[1] = 5;
                  } else {
                    var statearr_6226_6251 = state_6219__$1;
                    statearr_6226_6251[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6220 === 15) {
                    var inst_6209 = state_6219[2];
                    var state_6219__$1 = state_6219;
                    var statearr_6227_6252 = state_6219__$1;
                    statearr_6227_6252[2] = inst_6209;
                    statearr_6227_6252[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6220 === 13) {
                      var state_6219__$1 = state_6219;
                      var statearr_6228_6253 = state_6219__$1;
                      statearr_6228_6253[2] = null;
                      statearr_6228_6253[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6220 === 6) {
                        var inst_6184 = state_6219[8];
                        var inst_6205 = inst_6184 > 0;
                        var state_6219__$1 = state_6219;
                        if (cljs.core.truth_(inst_6205)) {
                          var statearr_6229_6254 = state_6219__$1;
                          statearr_6229_6254[1] = 12;
                        } else {
                          var statearr_6230_6255 = state_6219__$1;
                          statearr_6230_6255[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6220 === 3) {
                          var inst_6217 = state_6219[2];
                          var state_6219__$1 = state_6219;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6219__$1, inst_6217);
                        } else {
                          if (state_val_6220 === 12) {
                            var inst_6183 = state_6219[7];
                            var inst_6207 = cljs.core.vec.call(null, inst_6183);
                            var state_6219__$1 = state_6219;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6219__$1, 15, out, inst_6207);
                          } else {
                            if (state_val_6220 === 2) {
                              var state_6219__$1 = state_6219;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6219__$1, 4, ch);
                            } else {
                              if (state_val_6220 === 11) {
                                var inst_6199 = state_6219[2];
                                var inst_6200 = new Array(n);
                                var inst_6183 = inst_6200;
                                var inst_6184 = 0;
                                var state_6219__$1 = function() {
                                  var statearr_6231 = state_6219;
                                  statearr_6231[7] = inst_6183;
                                  statearr_6231[8] = inst_6184;
                                  statearr_6231[10] = inst_6199;
                                  return statearr_6231;
                                }();
                                var statearr_6232_6256 = state_6219__$1;
                                statearr_6232_6256[2] = null;
                                statearr_6232_6256[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6220 === 9) {
                                  var inst_6183 = state_6219[7];
                                  var inst_6197 = cljs.core.vec.call(null, inst_6183);
                                  var state_6219__$1 = state_6219;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6219__$1, 11, out, inst_6197);
                                } else {
                                  if (state_val_6220 === 5) {
                                    var inst_6183 = state_6219[7];
                                    var inst_6187 = state_6219[9];
                                    var inst_6192 = state_6219[11];
                                    var inst_6184 = state_6219[8];
                                    var inst_6191 = inst_6183[inst_6184] = inst_6187;
                                    var inst_6192__$1 = inst_6184 + 1;
                                    var inst_6193 = inst_6192__$1 < n;
                                    var state_6219__$1 = function() {
                                      var statearr_6233 = state_6219;
                                      statearr_6233[12] = inst_6191;
                                      statearr_6233[11] = inst_6192__$1;
                                      return statearr_6233;
                                    }();
                                    if (cljs.core.truth_(inst_6193)) {
                                      var statearr_6234_6257 = state_6219__$1;
                                      statearr_6234_6257[1] = 8;
                                    } else {
                                      var statearr_6235_6258 = state_6219__$1;
                                      statearr_6235_6258[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6220 === 14) {
                                      var inst_6212 = state_6219[2];
                                      var inst_6213 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_6219__$1 = function() {
                                        var statearr_6237 = state_6219;
                                        statearr_6237[13] = inst_6212;
                                        return statearr_6237;
                                      }();
                                      var statearr_6238_6259 = state_6219__$1;
                                      statearr_6238_6259[2] = inst_6213;
                                      statearr_6238_6259[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_6220 === 10) {
                                        var inst_6203 = state_6219[2];
                                        var state_6219__$1 = state_6219;
                                        var statearr_6239_6260 = state_6219__$1;
                                        statearr_6239_6260[2] = inst_6203;
                                        statearr_6239_6260[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6220 === 8) {
                                          var inst_6183 = state_6219[7];
                                          var inst_6192 = state_6219[11];
                                          var tmp6236 = inst_6183;
                                          var inst_6183__$1 = tmp6236;
                                          var inst_6184 = inst_6192;
                                          var state_6219__$1 = function() {
                                            var statearr_6240 = state_6219;
                                            statearr_6240[7] = inst_6183__$1;
                                            statearr_6240[8] = inst_6184;
                                            return statearr_6240;
                                          }();
                                          var statearr_6241_6261 = state_6219__$1;
                                          statearr_6241_6261[2] = null;
                                          statearr_6241_6261[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___6247, out);
        return function(switch__4336__auto__, c__4431__auto___6247, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_6242 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6242[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_6242[1] = 1;
              return statearr_6242;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_6219) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_6219);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e6243) {
                    if (e6243 instanceof Object) {
                      var ex__4340__auto__ = e6243;
                      var statearr_6244_6262 = state_6219;
                      statearr_6244_6262[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6219);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6243;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6263 = state_6219;
                  state_6219 = G__6263;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_6219) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_6219);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___6247, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_6245 = f__4432__auto__.call(null);
        statearr_6245[6] = c__4431__auto___6247;
        return statearr_6245;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___6247, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var G__6265 = arguments.length;
  switch(G__6265) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__4431__auto___6335 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___6335, out) {
    return function() {
      var f__4432__auto__ = function() {
        var switch__4336__auto__ = function(c__4431__auto___6335, out) {
          return function(state_6307) {
            var state_val_6308 = state_6307[1];
            if (state_val_6308 === 7) {
              var inst_6303 = state_6307[2];
              var state_6307__$1 = state_6307;
              var statearr_6309_6336 = state_6307__$1;
              statearr_6309_6336[2] = inst_6303;
              statearr_6309_6336[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_6308 === 1) {
                var inst_6266 = [];
                var inst_6267 = inst_6266;
                var inst_6268 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_6307__$1 = function() {
                  var statearr_6310 = state_6307;
                  statearr_6310[7] = inst_6268;
                  statearr_6310[8] = inst_6267;
                  return statearr_6310;
                }();
                var statearr_6311_6337 = state_6307__$1;
                statearr_6311_6337[2] = null;
                statearr_6311_6337[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_6308 === 4) {
                  var inst_6271 = state_6307[9];
                  var inst_6271__$1 = state_6307[2];
                  var inst_6272 = inst_6271__$1 == null;
                  var inst_6273 = cljs.core.not.call(null, inst_6272);
                  var state_6307__$1 = function() {
                    var statearr_6312 = state_6307;
                    statearr_6312[9] = inst_6271__$1;
                    return statearr_6312;
                  }();
                  if (inst_6273) {
                    var statearr_6313_6338 = state_6307__$1;
                    statearr_6313_6338[1] = 5;
                  } else {
                    var statearr_6314_6339 = state_6307__$1;
                    statearr_6314_6339[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6308 === 15) {
                    var inst_6297 = state_6307[2];
                    var state_6307__$1 = state_6307;
                    var statearr_6315_6340 = state_6307__$1;
                    statearr_6315_6340[2] = inst_6297;
                    statearr_6315_6340[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6308 === 13) {
                      var state_6307__$1 = state_6307;
                      var statearr_6316_6341 = state_6307__$1;
                      statearr_6316_6341[2] = null;
                      statearr_6316_6341[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6308 === 6) {
                        var inst_6267 = state_6307[8];
                        var inst_6292 = inst_6267.length;
                        var inst_6293 = inst_6292 > 0;
                        var state_6307__$1 = state_6307;
                        if (cljs.core.truth_(inst_6293)) {
                          var statearr_6317_6342 = state_6307__$1;
                          statearr_6317_6342[1] = 12;
                        } else {
                          var statearr_6318_6343 = state_6307__$1;
                          statearr_6318_6343[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_6308 === 3) {
                          var inst_6305 = state_6307[2];
                          var state_6307__$1 = state_6307;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6307__$1, inst_6305);
                        } else {
                          if (state_val_6308 === 12) {
                            var inst_6267 = state_6307[8];
                            var inst_6295 = cljs.core.vec.call(null, inst_6267);
                            var state_6307__$1 = state_6307;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6307__$1, 15, out, inst_6295);
                          } else {
                            if (state_val_6308 === 2) {
                              var state_6307__$1 = state_6307;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6307__$1, 4, ch);
                            } else {
                              if (state_val_6308 === 11) {
                                var inst_6275 = state_6307[10];
                                var inst_6271 = state_6307[9];
                                var inst_6285 = state_6307[2];
                                var inst_6286 = [];
                                var inst_6287 = inst_6286.push(inst_6271);
                                var inst_6267 = inst_6286;
                                var inst_6268 = inst_6275;
                                var state_6307__$1 = function() {
                                  var statearr_6319 = state_6307;
                                  statearr_6319[7] = inst_6268;
                                  statearr_6319[11] = inst_6287;
                                  statearr_6319[8] = inst_6267;
                                  statearr_6319[12] = inst_6285;
                                  return statearr_6319;
                                }();
                                var statearr_6320_6344 = state_6307__$1;
                                statearr_6320_6344[2] = null;
                                statearr_6320_6344[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_6308 === 9) {
                                  var inst_6267 = state_6307[8];
                                  var inst_6283 = cljs.core.vec.call(null, inst_6267);
                                  var state_6307__$1 = state_6307;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_6307__$1, 11, out, inst_6283);
                                } else {
                                  if (state_val_6308 === 5) {
                                    var inst_6268 = state_6307[7];
                                    var inst_6275 = state_6307[10];
                                    var inst_6271 = state_6307[9];
                                    var inst_6275__$1 = f.call(null, inst_6271);
                                    var inst_6276 = cljs.core._EQ_.call(null, inst_6275__$1, inst_6268);
                                    var inst_6277 = cljs.core.keyword_identical_QMARK_.call(null, inst_6268, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_6278 = inst_6276 || inst_6277;
                                    var state_6307__$1 = function() {
                                      var statearr_6321 = state_6307;
                                      statearr_6321[10] = inst_6275__$1;
                                      return statearr_6321;
                                    }();
                                    if (cljs.core.truth_(inst_6278)) {
                                      var statearr_6322_6345 = state_6307__$1;
                                      statearr_6322_6345[1] = 8;
                                    } else {
                                      var statearr_6323_6346 = state_6307__$1;
                                      statearr_6323_6346[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_6308 === 14) {
                                      var inst_6300 = state_6307[2];
                                      var inst_6301 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_6307__$1 = function() {
                                        var statearr_6325 = state_6307;
                                        statearr_6325[13] = inst_6300;
                                        return statearr_6325;
                                      }();
                                      var statearr_6326_6347 = state_6307__$1;
                                      statearr_6326_6347[2] = inst_6301;
                                      statearr_6326_6347[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_6308 === 10) {
                                        var inst_6290 = state_6307[2];
                                        var state_6307__$1 = state_6307;
                                        var statearr_6327_6348 = state_6307__$1;
                                        statearr_6327_6348[2] = inst_6290;
                                        statearr_6327_6348[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_6308 === 8) {
                                          var inst_6267 = state_6307[8];
                                          var inst_6275 = state_6307[10];
                                          var inst_6271 = state_6307[9];
                                          var inst_6280 = inst_6267.push(inst_6271);
                                          var tmp6324 = inst_6267;
                                          var inst_6267__$1 = tmp6324;
                                          var inst_6268 = inst_6275;
                                          var state_6307__$1 = function() {
                                            var statearr_6328 = state_6307;
                                            statearr_6328[7] = inst_6268;
                                            statearr_6328[8] = inst_6267__$1;
                                            statearr_6328[14] = inst_6280;
                                            return statearr_6328;
                                          }();
                                          var statearr_6329_6349 = state_6307__$1;
                                          statearr_6329_6349[2] = null;
                                          statearr_6329_6349[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__4431__auto___6335, out);
        return function(switch__4336__auto__, c__4431__auto___6335, out) {
          return function() {
            var cljs$core$async$state_machine__4337__auto__ = null;
            var cljs$core$async$state_machine__4337__auto____0 = function() {
              var statearr_6330 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_6330[0] = cljs$core$async$state_machine__4337__auto__;
              statearr_6330[1] = 1;
              return statearr_6330;
            };
            var cljs$core$async$state_machine__4337__auto____1 = function(state_6307) {
              while (true) {
                var ret_value__4338__auto__ = function() {
                  try {
                    while (true) {
                      var result__4339__auto__ = switch__4336__auto__.call(null, state_6307);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__4339__auto__;
                      }
                      break;
                    }
                  } catch (e6331) {
                    if (e6331 instanceof Object) {
                      var ex__4340__auto__ = e6331;
                      var statearr_6332_6350 = state_6307;
                      statearr_6332_6350[5] = ex__4340__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6307);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e6331;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__6351 = state_6307;
                  state_6307 = G__6351;
                  continue;
                } else {
                  return ret_value__4338__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__4337__auto__ = function(state_6307) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__4337__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__4337__auto____1.call(this, state_6307);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__4337__auto____0;
            cljs$core$async$state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__4337__auto____1;
            return cljs$core$async$state_machine__4337__auto__;
          }();
        }(switch__4336__auto__, c__4431__auto___6335, out);
      }();
      var state__4433__auto__ = function() {
        var statearr_6333 = f__4432__auto__.call(null);
        statearr_6333[6] = c__4431__auto___6335;
        return statearr_6333;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
    };
  }(c__4431__auto___6335, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("cljs_http.core");
goog.require("cljs.core");
goog.require("goog.net.EventType");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.XhrIo");
goog.require("goog.net.Jsonp");
goog.require("cljs_http.util");
goog.require("cljs.core.async");
goog.require("clojure.string");
cljs_http.core.pending_requests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cljs_http.core.abort_BANG_ = function cljs_http$core$abort_BANG_(channel) {
  var temp__5720__auto__ = cljs.core.deref.call(null, cljs_http.core.pending_requests).call(null, channel);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var req = temp__5720__auto__;
    cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
    cljs.core.async.close_BANG_.call(null, channel);
    if (cljs.core.truth_(req.hasOwnProperty("abort"))) {
      return req.abort();
    } else {
      return (new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588)).cljs$core$IFn$_invoke$arity$1(req).cancel((new cljs.core.Keyword(null, "request", "request", 1772954723)).cljs$core$IFn$_invoke$arity$1(req));
    }
  } else {
    return null;
  }
};
cljs_http.core.aborted_QMARK_ = function cljs_http$core$aborted_QMARK_(xhr) {
  return cljs.core._EQ_.call(null, xhr.getLastErrorCode(), goog.net.ErrorCode.ABORT);
};
cljs_http.core.apply_default_headers_BANG_ = function cljs_http$core$apply_default_headers_BANG_(xhr, headers) {
  var formatted_h = cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs_http.util.camelize, cljs.core.keys.call(null, headers)), cljs.core.vals.call(null, headers));
  return cljs.core.dorun.call(null, cljs.core.map.call(null, function(formatted_h) {
    return function(p__6373) {
      var vec__6374 = p__6373;
      var k = cljs.core.nth.call(null, vec__6374, 0, null);
      var v = cljs.core.nth.call(null, vec__6374, 1, null);
      return xhr.headers.set(k, v);
    };
  }(formatted_h), formatted_h));
};
cljs_http.core.apply_response_type_BANG_ = function cljs_http$core$apply_response_type_BANG_(xhr, response_type) {
  return xhr.setResponseType(function() {
    var G__6377 = response_type;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "array-buffer", "array-buffer", 519008380), G__6377)) {
      return goog.net.XhrIo.ResponseType.ARRAY_BUFFER;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "blob", "blob", 1636965233), G__6377)) {
        return goog.net.XhrIo.ResponseType.BLOB;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "document", "document", -1329188687), G__6377)) {
          return goog.net.XhrIo.ResponseType.DOCUMENT;
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), G__6377)) {
            return goog.net.XhrIo.ResponseType.TEXT;
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), G__6377)) {
              return goog.net.XhrIo.ResponseType.DEFAULT;
            } else {
              if (cljs.core._EQ_.call(null, null, G__6377)) {
                return goog.net.XhrIo.ResponseType.DEFAULT;
              } else {
                throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__6377)].join(""));
              }
            }
          }
        }
      }
    }
  }());
};
cljs_http.core.build_xhr = function cljs_http$core$build_xhr(p__6378) {
  var map__6379 = p__6378;
  var map__6379__$1 = (!(map__6379 == null) ? map__6379.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6379.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6379) : map__6379;
  var request = map__6379__$1;
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__6379__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var default_headers = cljs.core.get.call(null, map__6379__$1, new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094));
  var response_type = cljs.core.get.call(null, map__6379__$1, new cljs.core.Keyword(null, "response-type", "response-type", -1493770458));
  var timeout = function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return 0;
    }
  }();
  var send_credentials = with_credentials_QMARK_ == null ? true : with_credentials_QMARK_;
  var G__6381 = new goog.net.XhrIo;
  cljs_http.core.apply_default_headers_BANG_.call(null, G__6381, default_headers);
  cljs_http.core.apply_response_type_BANG_.call(null, G__6381, response_type);
  G__6381.setTimeoutInterval(timeout);
  G__6381.setWithCredentials(send_credentials);
  return G__6381;
};
cljs_http.core.error_kw = cljs.core.PersistentHashMap.fromArrays([0, 7, 1, 4, 6, 3, 2, 9, 5, 8], [new cljs.core.Keyword(null, "no-error", "no-error", 1984610064), new cljs.core.Keyword(null, "abort", "abort", 521193198), new cljs.core.Keyword(null, "access-denied", "access-denied", 959449406), new cljs.core.Keyword(null, "custom-error", "custom-error", -1565161123), new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), new cljs.core.Keyword(null, "ff-silent-error", "ff-silent-error", 
189390514), new cljs.core.Keyword(null, "file-not-found", "file-not-found", -65398940), new cljs.core.Keyword(null, "offline", "offline", -107631935), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "timeout", "timeout", -318625318)]);
cljs_http.core.xhr = function cljs_http$core$xhr(p__6382) {
  var map__6383 = p__6382;
  var map__6383__$1 = (!(map__6383 == null) ? map__6383.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6383.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6383) : map__6383;
  var request = map__6383__$1;
  var request_method = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  var headers = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var body = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "body", "body", -2049205669));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var cancel = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "cancel", "cancel", -1964088360));
  var progress = cljs.core.get.call(null, map__6383__$1, new cljs.core.Keyword(null, "progress", "progress", 244323547));
  var channel = cljs.core.async.chan.call(null);
  var request_url = cljs_http.util.build_url.call(null, request);
  var method = cljs.core.name.call(null, function() {
    var or__4131__auto__ = request_method;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return new cljs.core.Keyword(null, "get", "get", 1683182755);
    }
  }());
  var headers__$1 = cljs_http.util.build_headers.call(null, headers);
  var xhr = cljs_http.core.build_xhr.call(null, request);
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, xhr);
  xhr.listen(goog.net.EventType.COMPLETE, function(channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
    return function(evt) {
      var target = evt.target;
      var response = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "status", "status", -1997798413), target.getStatus(), new cljs.core.Keyword(null, "success", "success", 1890645906), target.isSuccess(), new cljs.core.Keyword(null, "body", "body", -2049205669), target.getResponse(), new cljs.core.Keyword(null, "headers", "headers", -835030129), cljs_http.util.parse_headers.call(null, target.getAllResponseHeaders()), new cljs.core.Keyword(null, "trace-redirects", "trace-redirects", 
      -1149427907), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [request_url, target.getLastUri()], null), new cljs.core.Keyword(null, "error-code", "error-code", 180497232), cljs_http.core.error_kw.call(null, target.getLastErrorCode()), new cljs.core.Keyword(null, "error-text", "error-text", 2021893718), target.getLastError()], null);
      if (!cljs_http.core.aborted_QMARK_.call(null, xhr)) {
        cljs.core.async.put_BANG_.call(null, channel, response);
      } else {
      }
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress));
  if (cljs.core.truth_(progress)) {
    var listener_6407 = function(channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
      return function(direction, evt) {
        return cljs.core.async.put_BANG_.call(null, progress, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "direction", "direction", -633359395), direction, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), evt.loaded], null), cljs.core.truth_(evt.lengthComputable) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "total", "total", 1916810418), evt.total], null) : null));
      };
    }(channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
    var G__6385_6408 = xhr;
    G__6385_6408.setProgressEventsEnabled(true);
    G__6385_6408.listen(goog.net.EventType.UPLOAD_PROGRESS, cljs.core.partial.call(null, listener_6407, new cljs.core.Keyword(null, "upload", "upload", -255769218)));
    G__6385_6408.listen(goog.net.EventType.DOWNLOAD_PROGRESS, cljs.core.partial.call(null, listener_6407, new cljs.core.Keyword(null, "download", "download", -300081668)));
  } else {
  }
  xhr.send(request_url, method, body, headers__$1);
  if (cljs.core.truth_(cancel)) {
    var c__4431__auto___6409 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
      return function() {
        var f__4432__auto__ = function() {
          var switch__4336__auto__ = function(c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
            return function(state_6396) {
              var state_val_6397 = state_6396[1];
              if (state_val_6397 === 1) {
                var state_6396__$1 = state_6396;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6396__$1, 2, cancel);
              } else {
                if (state_val_6397 === 2) {
                  var inst_6387 = state_6396[2];
                  var inst_6388 = xhr.isComplete();
                  var inst_6389 = cljs.core.not.call(null, inst_6388);
                  var state_6396__$1 = function() {
                    var statearr_6398 = state_6396;
                    statearr_6398[7] = inst_6387;
                    return statearr_6398;
                  }();
                  if (inst_6389) {
                    var statearr_6399_6410 = state_6396__$1;
                    statearr_6399_6410[1] = 3;
                  } else {
                    var statearr_6400_6411 = state_6396__$1;
                    statearr_6400_6411[1] = 4;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_6397 === 3) {
                    var inst_6391 = xhr.abort();
                    var state_6396__$1 = state_6396;
                    var statearr_6401_6412 = state_6396__$1;
                    statearr_6401_6412[2] = inst_6391;
                    statearr_6401_6412[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_6397 === 4) {
                      var state_6396__$1 = state_6396;
                      var statearr_6402_6413 = state_6396__$1;
                      statearr_6402_6413[2] = null;
                      statearr_6402_6413[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_6397 === 5) {
                        var inst_6394 = state_6396[2];
                        var state_6396__$1 = state_6396;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6396__$1, inst_6394);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
          return function(switch__4336__auto__, c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress) {
            return function() {
              var cljs_http$core$xhr_$_state_machine__4337__auto__ = null;
              var cljs_http$core$xhr_$_state_machine__4337__auto____0 = function() {
                var statearr_6403 = [null, null, null, null, null, null, null, null];
                statearr_6403[0] = cljs_http$core$xhr_$_state_machine__4337__auto__;
                statearr_6403[1] = 1;
                return statearr_6403;
              };
              var cljs_http$core$xhr_$_state_machine__4337__auto____1 = function(state_6396) {
                while (true) {
                  var ret_value__4338__auto__ = function() {
                    try {
                      while (true) {
                        var result__4339__auto__ = switch__4336__auto__.call(null, state_6396);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__4339__auto__;
                        }
                        break;
                      }
                    } catch (e6404) {
                      if (e6404 instanceof Object) {
                        var ex__4340__auto__ = e6404;
                        var statearr_6405_6414 = state_6396;
                        statearr_6405_6414[5] = ex__4340__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6396);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6404;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6415 = state_6396;
                    state_6396 = G__6415;
                    continue;
                  } else {
                    return ret_value__4338__auto__;
                  }
                  break;
                }
              };
              cljs_http$core$xhr_$_state_machine__4337__auto__ = function(state_6396) {
                switch(arguments.length) {
                  case 0:
                    return cljs_http$core$xhr_$_state_machine__4337__auto____0.call(this);
                  case 1:
                    return cljs_http$core$xhr_$_state_machine__4337__auto____1.call(this, state_6396);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs_http$core$xhr_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs_http$core$xhr_$_state_machine__4337__auto____0;
              cljs_http$core$xhr_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs_http$core$xhr_$_state_machine__4337__auto____1;
              return cljs_http$core$xhr_$_state_machine__4337__auto__;
            }();
          }(switch__4336__auto__, c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress);
        }();
        var state__4433__auto__ = function() {
          var statearr_6406 = f__4432__auto__.call(null);
          statearr_6406[6] = c__4431__auto___6409;
          return statearr_6406;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
      };
    }(c__4431__auto___6409, channel, request_url, method, headers__$1, xhr, map__6383, map__6383__$1, request, request_method, headers, body, with_credentials_QMARK_, cancel, progress));
  } else {
  }
  return channel;
};
cljs_http.core.jsonp = function cljs_http$core$jsonp(p__6416) {
  var map__6417 = p__6416;
  var map__6417__$1 = (!(map__6417 == null) ? map__6417.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6417.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6417) : map__6417;
  var request = map__6417__$1;
  var timeout = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "timeout", "timeout", -318625318));
  var callback_name = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "callback-name", "callback-name", 336964714));
  var cancel = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "cancel", "cancel", -1964088360));
  var keywordize_keys_QMARK_ = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "keywordize-keys?", "keywordize-keys?", -254545987), true);
  var channel = cljs.core.async.chan.call(null);
  var jsonp = new goog.net.Jsonp(cljs_http.util.build_url.call(null, request), callback_name);
  jsonp.setRequestTimeout(timeout);
  var req_6430 = jsonp.send(null, function(channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
    return function cljs_http$core$jsonp_$_success_callback(data) {
      var response = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), 200, new cljs.core.Keyword(null, "success", "success", 1890645906), true, new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.js__GT_clj.call(null, data, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), keywordize_keys_QMARK_)], null);
      cljs.core.async.put_BANG_.call(null, channel, response);
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_), function(channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
    return function cljs_http$core$jsonp_$_error_callback() {
      cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.dissoc, channel);
      if (cljs.core.truth_(cancel)) {
        cljs.core.async.close_BANG_.call(null, cancel);
      } else {
      }
      return cljs.core.async.close_BANG_.call(null, channel);
    };
  }(channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_));
  cljs.core.swap_BANG_.call(null, cljs_http.core.pending_requests, cljs.core.assoc, channel, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588), jsonp, new cljs.core.Keyword(null, "request", "request", 1772954723), req_6430], null));
  if (cljs.core.truth_(cancel)) {
    var c__4431__auto___6431 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
      return function() {
        var f__4432__auto__ = function() {
          var switch__4336__auto__ = function(c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
            return function(state_6423) {
              var state_val_6424 = state_6423[1];
              if (state_val_6424 === 1) {
                var state_6423__$1 = state_6423;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6423__$1, 2, cancel);
              } else {
                if (state_val_6424 === 2) {
                  var inst_6420 = state_6423[2];
                  var inst_6421 = jsonp.cancel(req_6430);
                  var state_6423__$1 = function() {
                    var statearr_6425 = state_6423;
                    statearr_6425[7] = inst_6420;
                    return statearr_6425;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6423__$1, inst_6421);
                } else {
                  return null;
                }
              }
            };
          }(c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_);
          return function(switch__4336__auto__, c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_) {
            return function() {
              var cljs_http$core$jsonp_$_state_machine__4337__auto__ = null;
              var cljs_http$core$jsonp_$_state_machine__4337__auto____0 = function() {
                var statearr_6426 = [null, null, null, null, null, null, null, null];
                statearr_6426[0] = cljs_http$core$jsonp_$_state_machine__4337__auto__;
                statearr_6426[1] = 1;
                return statearr_6426;
              };
              var cljs_http$core$jsonp_$_state_machine__4337__auto____1 = function(state_6423) {
                while (true) {
                  var ret_value__4338__auto__ = function() {
                    try {
                      while (true) {
                        var result__4339__auto__ = switch__4336__auto__.call(null, state_6423);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__4339__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__4339__auto__;
                        }
                        break;
                      }
                    } catch (e6427) {
                      if (e6427 instanceof Object) {
                        var ex__4340__auto__ = e6427;
                        var statearr_6428_6432 = state_6423;
                        statearr_6428_6432[5] = ex__4340__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_6423);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e6427;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__4338__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__6433 = state_6423;
                    state_6423 = G__6433;
                    continue;
                  } else {
                    return ret_value__4338__auto__;
                  }
                  break;
                }
              };
              cljs_http$core$jsonp_$_state_machine__4337__auto__ = function(state_6423) {
                switch(arguments.length) {
                  case 0:
                    return cljs_http$core$jsonp_$_state_machine__4337__auto____0.call(this);
                  case 1:
                    return cljs_http$core$jsonp_$_state_machine__4337__auto____1.call(this, state_6423);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              cljs_http$core$jsonp_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$0 = cljs_http$core$jsonp_$_state_machine__4337__auto____0;
              cljs_http$core$jsonp_$_state_machine__4337__auto__.cljs$core$IFn$_invoke$arity$1 = cljs_http$core$jsonp_$_state_machine__4337__auto____1;
              return cljs_http$core$jsonp_$_state_machine__4337__auto__;
            }();
          }(switch__4336__auto__, c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_);
        }();
        var state__4433__auto__ = function() {
          var statearr_6429 = f__4432__auto__.call(null);
          statearr_6429[6] = c__4431__auto___6431;
          return statearr_6429;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__4433__auto__);
      };
    }(c__4431__auto___6431, req_6430, channel, jsonp, map__6417, map__6417__$1, request, timeout, callback_name, cancel, keywordize_keys_QMARK_));
  } else {
  }
  return channel;
};
cljs_http.core.request = function cljs_http$core$request(p__6434) {
  var map__6435 = p__6434;
  var map__6435__$1 = (!(map__6435 == null) ? map__6435.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6435.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6435) : map__6435;
  var request = map__6435__$1;
  var request_method = cljs.core.get.call(null, map__6435__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
  if (cljs.core._EQ_.call(null, request_method, new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588))) {
    return cljs_http.core.jsonp.call(null, request);
  } else {
    return cljs_http.core.xhr.call(null, request);
  }
};
goog.provide("cljs_http.client");
goog.require("cljs.core");
goog.require("cljs_http.core");
goog.require("cljs_http.util");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("goog.Uri");
goog.require("no.en.core");
cljs_http.client.if_pos = function cljs_http$client$if_pos(v) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = v;
    if (cljs.core.truth_(and__4120__auto__)) {
      return v > 0;
    } else {
      return and__4120__auto__;
    }
  }())) {
    return v;
  } else {
    return null;
  }
};
cljs_http.client.acc_param = function cljs_http$client$acc_param(o, v) {
  if (cljs.core.coll_QMARK_.call(null, o)) {
    return cljs.core.conj.call(null, o, v);
  } else {
    if (!(o == null)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o, v], null);
    } else {
      return v;
    }
  }
};
cljs_http.client.parse_query_params = function cljs_http$client$parse_query_params(s) {
  if (!clojure.string.blank_QMARK_.call(null, s)) {
    return cljs.core.reduce.call(null, function(p1__6440_SHARP_, p2__6439_SHARP_) {
      var vec__6441 = clojure.string.split.call(null, p2__6439_SHARP_, /=/);
      var k = cljs.core.nth.call(null, vec__6441, 0, null);
      var v = cljs.core.nth.call(null, vec__6441, 1, null);
      return cljs.core.update.call(null, p1__6440_SHARP_, cljs.core.keyword.call(null, no.en.core.url_decode.call(null, k)), cljs_http.client.acc_param, no.en.core.url_decode.call(null, v));
    }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), /&/));
  } else {
    return null;
  }
};
cljs_http.client.parse_url = function cljs_http$client$parse_url(url) {
  if (!clojure.string.blank_QMARK_.call(null, url)) {
    var uri = goog.Uri.parse(url);
    var query_data = uri.getQueryData();
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), cljs.core.keyword.call(null, uri.getScheme()), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), uri.getDomain(), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), cljs_http.client.if_pos.call(null, uri.getPort()), new cljs.core.Keyword(null, "uri", "uri", -774711847), uri.getPath(), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), 
    cljs.core.not.call(null, query_data.isEmpty()) ? cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_data) : null, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), cljs.core.not.call(null, query_data.isEmpty()) ? cljs_http.client.parse_query_params.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_data)) : null], null);
  } else {
    return null;
  }
};
cljs_http.client.unexceptional_status_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [205, null, 206, null, 300, null, 204, null, 307, null, 303, null, 301, null, 201, null, 302, null, 202, null, 200, null, 203, null, 207, null], null), null);
cljs_http.client.encode_val = function cljs_http$client$encode_val(k, v) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.url_encode.call(null, cljs.core.name.call(null, k))), "\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.url_encode.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)))].join("");
};
cljs_http.client.encode_vals = function cljs_http$client$encode_vals(k, vs) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p1__6444_SHARP_) {
    return cljs_http.client.encode_val.call(null, k, p1__6444_SHARP_);
  }, vs));
};
cljs_http.client.encode_param = function cljs_http$client$encode_param(p__6445) {
  var vec__6446 = p__6445;
  var k = cljs.core.nth.call(null, vec__6446, 0, null);
  var v = cljs.core.nth.call(null, vec__6446, 1, null);
  if (cljs.core.coll_QMARK_.call(null, v)) {
    return cljs_http.client.encode_vals.call(null, k, v);
  } else {
    return cljs_http.client.encode_val.call(null, k, v);
  }
};
cljs_http.client.generate_query_string = function cljs_http$client$generate_query_string(params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, cljs_http.client.encode_param, params));
};
cljs_http.client.regex_char_esc_smap = function() {
  var esc_chars = "()*\x26^%$#!+";
  return cljs.core.zipmap.call(null, esc_chars, cljs.core.map.call(null, function(esc_chars) {
    return function(p1__6449_SHARP_) {
      return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__6449_SHARP_)].join("");
    };
  }(esc_chars), esc_chars));
}();
cljs_http.client.escape_special = function cljs_http$client$escape_special(string) {
  return cljs.core.reduce.call(null, cljs.core.str, cljs.core.replace.call(null, cljs_http.client.regex_char_esc_smap, string));
};
cljs_http.client.decode_body = function cljs_http$client$decode_body(response, decode_fn, content_type, request_method) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "head", "head", -771383919), request_method);
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.not_EQ_.call(null, 204, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(response));
      if (and__4120__auto____$1) {
        return cljs.core.re_find.call(null, cljs.core.re_pattern.call(null, ["(?i)", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_http.client.escape_special.call(null, content_type))].join("")), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(response), "content-type", "")));
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.core.update_in.call(null, response, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "body", "body", -2049205669)], null), decode_fn);
  } else {
    return response;
  }
};
cljs_http.client.wrap_edn_params = function cljs_http$client$wrap_edn_params(client) {
  return function(request) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var params = temp__5718__auto__;
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/edn"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "edn-params", "edn-params", 894273052)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.pr_str.call(null, params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_edn_response = function cljs_http$client$wrap_edn_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__6450_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__6450_SHARP_, cljs.reader.read_string, "application/edn", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_default_headers = function cljs_http$client$wrap_default_headers(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6457 = arguments.length;
  var i__4731__auto___6458 = 0;
  while (true) {
    if (i__4731__auto___6458 < len__4730__auto___6457) {
      args__4736__auto__.push(arguments[i__4731__auto___6458]);
      var G__6459 = i__4731__auto___6458 + 1;
      i__4731__auto___6458 = G__6459;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_default_headers.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.wrap_default_headers.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6453) {
  var vec__6454 = p__6453;
  var default_headers = cljs.core.nth.call(null, vec__6454, 0, null);
  return function(vec__6454, default_headers) {
    return function(request) {
      var temp__5718__auto__ = function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return default_headers;
        }
      }();
      if (cljs.core.truth_(temp__5718__auto__)) {
        var default_headers__$1 = temp__5718__auto__;
        return client.call(null, cljs.core.assoc.call(null, request, new cljs.core.Keyword(null, "default-headers", "default-headers", -43146094), default_headers__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6454, default_headers);
};
cljs_http.client.wrap_default_headers.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_default_headers.cljs$lang$applyTo = function(seq6451) {
  var G__6452 = cljs.core.first.call(null, seq6451);
  var seq6451__$1 = cljs.core.next.call(null, seq6451);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6452, seq6451__$1);
};
cljs_http.client.wrap_accept = function cljs_http$client$wrap_accept(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6466 = arguments.length;
  var i__4731__auto___6467 = 0;
  while (true) {
    if (i__4731__auto___6467 < len__4730__auto___6466) {
      args__4736__auto__.push(arguments[i__4731__auto___6467]);
      var G__6468 = i__4731__auto___6467 + 1;
      i__4731__auto___6467 = G__6468;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_accept.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.wrap_accept.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6462) {
  var vec__6463 = p__6462;
  var accept = cljs.core.nth.call(null, vec__6463, 0, null);
  return function(vec__6463, accept) {
    return function(request) {
      var temp__5718__auto__ = function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "accept", "accept", 1874130431)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return accept;
        }
      }();
      if (cljs.core.truth_(temp__5718__auto__)) {
        var accept__$1 = temp__5718__auto__;
        return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "accept"], null), accept__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6463, accept);
};
cljs_http.client.wrap_accept.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_accept.cljs$lang$applyTo = function(seq6460) {
  var G__6461 = cljs.core.first.call(null, seq6460);
  var seq6460__$1 = cljs.core.next.call(null, seq6460);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6461, seq6460__$1);
};
cljs_http.client.wrap_content_type = function cljs_http$client$wrap_content_type(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6475 = arguments.length;
  var i__4731__auto___6476 = 0;
  while (true) {
    if (i__4731__auto___6476 < len__4730__auto___6475) {
      args__4736__auto__.push(arguments[i__4731__auto___6476]);
      var G__6477 = i__4731__auto___6476 + 1;
      i__4731__auto___6476 = G__6477;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_content_type.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.wrap_content_type.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6471) {
  var vec__6472 = p__6471;
  var content_type = cljs.core.nth.call(null, vec__6472, 0, null);
  return function(vec__6472, content_type) {
    return function(request) {
      var temp__5718__auto__ = function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "content-type", "content-type", -508222634)).cljs$core$IFn$_invoke$arity$1(request);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return content_type;
        }
      }();
      if (cljs.core.truth_(temp__5718__auto__)) {
        var content_type__$1 = temp__5718__auto__;
        return client.call(null, cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "content-type"], null), content_type__$1));
      } else {
        return client.call(null, request);
      }
    };
  }(vec__6472, content_type);
};
cljs_http.client.wrap_content_type.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_content_type.cljs$lang$applyTo = function(seq6469) {
  var G__6470 = cljs.core.first.call(null, seq6469);
  var seq6469__$1 = cljs.core.next.call(null, seq6469);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6470, seq6469__$1);
};
cljs_http.client.default_transit_opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "decoding", "decoding", -568180903), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 
1050289140), cljs.core.PersistentArrayMap.EMPTY], null);
cljs_http.client.wrap_transit_params = function cljs_http$client$wrap_transit_params(client) {
  return function(request) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var params = temp__5718__auto__;
      var map__6478 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
      var map__6478__$1 = (!(map__6478 == null) ? map__6478.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6478.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6478) : map__6478;
      var encoding = cljs.core.get.call(null, map__6478__$1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272));
      var encoding_opts = cljs.core.get.call(null, map__6478__$1, new cljs.core.Keyword(null, "encoding-opts", "encoding-opts", -1805664631));
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/transit+json"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "transit-params", "transit-params", 357261095)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.transit_encode.call(null, params, encoding, encoding_opts)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_transit_response = function cljs_http$client$wrap_transit_response(client) {
  return function(request) {
    var map__6482 = cljs.core.merge.call(null, cljs_http.client.default_transit_opts, (new cljs.core.Keyword(null, "transit-opts", "transit-opts", 1104386010)).cljs$core$IFn$_invoke$arity$1(request));
    var map__6482__$1 = (!(map__6482 == null) ? map__6482.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6482.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6482) : map__6482;
    var decoding = cljs.core.get.call(null, map__6482__$1, new cljs.core.Keyword(null, "decoding", "decoding", -568180903));
    var decoding_opts = cljs.core.get.call(null, map__6482__$1, new cljs.core.Keyword(null, "decoding-opts", "decoding-opts", 1050289140));
    var transit_decode = function(map__6482, map__6482__$1, decoding, decoding_opts) {
      return function(p1__6480_SHARP_) {
        return cljs_http.util.transit_decode.call(null, p1__6480_SHARP_, decoding, decoding_opts);
      };
    }(map__6482, map__6482__$1, decoding, decoding_opts);
    return cljs.core.async.map.call(null, function(map__6482, map__6482__$1, decoding, decoding_opts, transit_decode) {
      return function(p1__6481_SHARP_) {
        return cljs_http.client.decode_body.call(null, p1__6481_SHARP_, transit_decode, "application/transit+json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
      };
    }(map__6482, map__6482__$1, decoding, decoding_opts, transit_decode), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_json_params = function cljs_http$client$wrap_json_params(client) {
  return function(request) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var params = temp__5718__auto__;
      var headers = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/json"], null), (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(request));
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "json-params", "json-params", -1112693596)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.util.json_encode.call(null, params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_json_response = function cljs_http$client$wrap_json_response(client) {
  return function(request) {
    return cljs.core.async.map.call(null, function(p1__6484_SHARP_) {
      return cljs_http.client.decode_body.call(null, p1__6484_SHARP_, cljs_http.util.json_decode, "application/json", (new cljs.core.Keyword(null, "request-method", "request-method", 1764796830)).cljs$core$IFn$_invoke$arity$1(request));
    }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [client.call(null, request)], null));
  };
};
cljs_http.client.wrap_query_params = function cljs_http$client$wrap_query_params(client) {
  return function(p__6485) {
    var map__6486 = p__6485;
    var map__6486__$1 = (!(map__6486 == null) ? map__6486.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6486.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6486) : map__6486;
    var req = map__6486__$1;
    var query_params = cljs.core.get.call(null, map__6486__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    if (cljs.core.truth_(query_params)) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "query-params", "query-params", 900640534)), new cljs.core.Keyword(null, "query-string", "query-string", -1018845061), cljs_http.client.generate_query_string.call(null, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_form_params = function cljs_http$client$wrap_form_params(client) {
  return function(p__6488) {
    var map__6489 = p__6488;
    var map__6489__$1 = (!(map__6489 == null) ? map__6489.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6489.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6489) : map__6489;
    var request = map__6489__$1;
    var form_params = cljs.core.get.call(null, map__6489__$1, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467));
    var request_method = cljs.core.get.call(null, map__6489__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    var headers = cljs.core.get.call(null, map__6489__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = form_params;
      if (cljs.core.truth_(and__4120__auto__)) {
        return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__4120__auto__;
      }
    }())) {
      var headers__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["content-type", "application/x-www-form-urlencoded"], null), headers);
      return client.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "form-params", "form-params", 1884296467)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_query_string.call(null, form_params)), new cljs.core.Keyword(null, "headers", "headers", -835030129), headers__$1));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.generate_form_data = function cljs_http$client$generate_form_data(params) {
  var form_data = new FormData;
  var seq__6491_6507 = cljs.core.seq.call(null, params);
  var chunk__6492_6508 = null;
  var count__6493_6509 = 0;
  var i__6494_6510 = 0;
  while (true) {
    if (i__6494_6510 < count__6493_6509) {
      var vec__6501_6511 = cljs.core._nth.call(null, chunk__6492_6508, i__6494_6510);
      var k_6512 = cljs.core.nth.call(null, vec__6501_6511, 0, null);
      var v_6513 = cljs.core.nth.call(null, vec__6501_6511, 1, null);
      if (cljs.core.coll_QMARK_.call(null, v_6513)) {
        form_data.append(cljs.core.name.call(null, k_6512), cljs.core.first.call(null, v_6513), cljs.core.second.call(null, v_6513));
      } else {
        form_data.append(cljs.core.name.call(null, k_6512), v_6513);
      }
      var G__6514 = seq__6491_6507;
      var G__6515 = chunk__6492_6508;
      var G__6516 = count__6493_6509;
      var G__6517 = i__6494_6510 + 1;
      seq__6491_6507 = G__6514;
      chunk__6492_6508 = G__6515;
      count__6493_6509 = G__6516;
      i__6494_6510 = G__6517;
      continue;
    } else {
      var temp__5720__auto___6518 = cljs.core.seq.call(null, seq__6491_6507);
      if (temp__5720__auto___6518) {
        var seq__6491_6519__$1 = temp__5720__auto___6518;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6491_6519__$1)) {
          var c__4550__auto___6520 = cljs.core.chunk_first.call(null, seq__6491_6519__$1);
          var G__6521 = cljs.core.chunk_rest.call(null, seq__6491_6519__$1);
          var G__6522 = c__4550__auto___6520;
          var G__6523 = cljs.core.count.call(null, c__4550__auto___6520);
          var G__6524 = 0;
          seq__6491_6507 = G__6521;
          chunk__6492_6508 = G__6522;
          count__6493_6509 = G__6523;
          i__6494_6510 = G__6524;
          continue;
        } else {
          var vec__6504_6525 = cljs.core.first.call(null, seq__6491_6519__$1);
          var k_6526 = cljs.core.nth.call(null, vec__6504_6525, 0, null);
          var v_6527 = cljs.core.nth.call(null, vec__6504_6525, 1, null);
          if (cljs.core.coll_QMARK_.call(null, v_6527)) {
            form_data.append(cljs.core.name.call(null, k_6526), cljs.core.first.call(null, v_6527), cljs.core.second.call(null, v_6527));
          } else {
            form_data.append(cljs.core.name.call(null, k_6526), v_6527);
          }
          var G__6528 = cljs.core.next.call(null, seq__6491_6519__$1);
          var G__6529 = null;
          var G__6530 = 0;
          var G__6531 = 0;
          seq__6491_6507 = G__6528;
          chunk__6492_6508 = G__6529;
          count__6493_6509 = G__6530;
          i__6494_6510 = G__6531;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return form_data;
};
cljs_http.client.wrap_multipart_params = function cljs_http$client$wrap_multipart_params(client) {
  return function(p__6532) {
    var map__6533 = p__6532;
    var map__6533__$1 = (!(map__6533 == null) ? map__6533.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6533.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6533) : map__6533;
    var request = map__6533__$1;
    var multipart_params = cljs.core.get.call(null, map__6533__$1, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707));
    var request_method = cljs.core.get.call(null, map__6533__$1, new cljs.core.Keyword(null, "request-method", "request-method", 1764796830));
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = multipart_params;
      if (cljs.core.truth_(and__4120__auto__)) {
        return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "patch", "patch", 380775109), null, new cljs.core.Keyword(null, "delete", "delete", -1768633620), null, new cljs.core.Keyword(null, "post", "post", 269697687), null, new cljs.core.Keyword(null, "put", "put", 1299772570), null], null), null)).call(null, request_method);
      } else {
        return and__4120__auto__;
      }
    }())) {
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, request, new cljs.core.Keyword(null, "multipart-params", "multipart-params", -1033508707)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs_http.client.generate_form_data.call(null, multipart_params)));
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_method = function cljs_http$client$wrap_method(client) {
  return function(req) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "method", "method", 55703592)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var m = temp__5718__auto__;
      return client.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "method", "method", 55703592)), new cljs.core.Keyword(null, "request-method", "request-method", 1764796830), m));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_server_name = function cljs_http$client$wrap_server_name(client, server_name) {
  return function(p1__6535_SHARP_) {
    return client.call(null, cljs.core.assoc.call(null, p1__6535_SHARP_, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), server_name));
  };
};
cljs_http.client.wrap_url = function cljs_http$client$wrap_url(client) {
  return function(p__6537) {
    var map__6538 = p__6537;
    var map__6538__$1 = (!(map__6538 == null) ? map__6538.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__6538.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6538) : map__6538;
    var req = map__6538__$1;
    var query_params = cljs.core.get.call(null, map__6538__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var temp__5718__auto__ = cljs_http.client.parse_url.call(null, (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(req));
    if (cljs.core.truth_(temp__5718__auto__)) {
      var spec = temp__5718__auto__;
      return client.call(null, cljs.core.update_in.call(null, cljs.core.dissoc.call(null, cljs.core.merge.call(null, req, spec), new cljs.core.Keyword(null, "url", "url", 276297046)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534)], null), function(spec, temp__5718__auto__, map__6538, map__6538__$1, req, query_params) {
        return function(p1__6536_SHARP_) {
          return cljs.core.merge.call(null, p1__6536_SHARP_, query_params);
        };
      }(spec, temp__5718__auto__, map__6538, map__6538__$1, req, query_params)));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_basic_auth = function cljs_http$client$wrap_basic_auth(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6546 = arguments.length;
  var i__4731__auto___6547 = 0;
  while (true) {
    if (i__4731__auto___6547 < len__4730__auto___6546) {
      args__4736__auto__.push(arguments[i__4731__auto___6547]);
      var G__6548 = i__4731__auto___6547 + 1;
      i__4731__auto___6547 = G__6548;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.wrap_basic_auth.cljs$core$IFn$_invoke$arity$variadic = function(client, p__6542) {
  var vec__6543 = p__6542;
  var credentials = cljs.core.nth.call(null, vec__6543, 0, null);
  return function(vec__6543, credentials) {
    return function(req) {
      var credentials__$1 = function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)).cljs$core$IFn$_invoke$arity$1(req);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return credentials;
        }
      }();
      if (!cljs.core.empty_QMARK_.call(null, credentials__$1)) {
        return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "basic-auth", "basic-auth", -673163332)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), cljs_http.util.basic_auth.call(null, credentials__$1)));
      } else {
        return client.call(null, req);
      }
    };
  }(vec__6543, credentials);
};
cljs_http.client.wrap_basic_auth.cljs$lang$maxFixedArity = 1;
cljs_http.client.wrap_basic_auth.cljs$lang$applyTo = function(seq6540) {
  var G__6541 = cljs.core.first.call(null, seq6540);
  var seq6540__$1 = cljs.core.next.call(null, seq6540);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6541, seq6540__$1);
};
cljs_http.client.wrap_oauth = function cljs_http$client$wrap_oauth(client) {
  return function(req) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)).cljs$core$IFn$_invoke$arity$1(req);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var oauth_token = temp__5718__auto__;
      return client.call(null, cljs.core.assoc_in.call(null, cljs.core.dissoc.call(null, req, new cljs.core.Keyword(null, "oauth-token", "oauth-token", 311415191)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", -835030129), "authorization"], null), ["Bearer ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(oauth_token)].join("")));
    } else {
      return client.call(null, req);
    }
  };
};
cljs_http.client.wrap_channel_from_request_map = function cljs_http$client$wrap_channel_from_request_map(client) {
  return function(request) {
    var temp__5718__auto__ = (new cljs.core.Keyword(null, "channel", "channel", 734187692)).cljs$core$IFn$_invoke$arity$1(request);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var custom_channel = temp__5718__auto__;
      return cljs.core.async.pipe.call(null, client.call(null, request), custom_channel);
    } else {
      return client.call(null, request);
    }
  };
};
cljs_http.client.wrap_request = function cljs_http$client$wrap_request(request) {
  return cljs_http.client.wrap_default_headers.call(null, cljs_http.client.wrap_channel_from_request_map.call(null, cljs_http.client.wrap_url.call(null, cljs_http.client.wrap_method.call(null, cljs_http.client.wrap_oauth.call(null, cljs_http.client.wrap_basic_auth.call(null, cljs_http.client.wrap_query_params.call(null, cljs_http.client.wrap_content_type.call(null, cljs_http.client.wrap_json_response.call(null, cljs_http.client.wrap_json_params.call(null, cljs_http.client.wrap_transit_response.call(null, 
  cljs_http.client.wrap_transit_params.call(null, cljs_http.client.wrap_edn_response.call(null, cljs_http.client.wrap_edn_params.call(null, cljs_http.client.wrap_multipart_params.call(null, cljs_http.client.wrap_form_params.call(null, cljs_http.client.wrap_accept.call(null, request)))))))))))))))));
};
cljs_http.client.request = cljs_http.client.wrap_request.call(null, cljs_http.core.request);
cljs_http.client.delete$ = function cljs_http$client$delete(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6555 = arguments.length;
  var i__4731__auto___6556 = 0;
  while (true) {
    if (i__4731__auto___6556 < len__4730__auto___6555) {
      args__4736__auto__.push(arguments[i__4731__auto___6556]);
      var G__6557 = i__4731__auto___6556 + 1;
      i__4731__auto___6556 = G__6557;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.delete$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.delete$.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6551) {
  var vec__6552 = p__6551;
  var req = cljs.core.nth.call(null, vec__6552, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.delete$.cljs$lang$maxFixedArity = 1;
cljs_http.client.delete$.cljs$lang$applyTo = function(seq6549) {
  var G__6550 = cljs.core.first.call(null, seq6549);
  var seq6549__$1 = cljs.core.next.call(null, seq6549);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6550, seq6549__$1);
};
cljs_http.client.get = function cljs_http$client$get(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6564 = arguments.length;
  var i__4731__auto___6565 = 0;
  while (true) {
    if (i__4731__auto___6565 < len__4730__auto___6564) {
      args__4736__auto__.push(arguments[i__4731__auto___6565]);
      var G__6566 = i__4731__auto___6565 + 1;
      i__4731__auto___6565 = G__6566;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6560) {
  var vec__6561 = p__6560;
  var req = cljs.core.nth.call(null, vec__6561, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.get.cljs$lang$maxFixedArity = 1;
cljs_http.client.get.cljs$lang$applyTo = function(seq6558) {
  var G__6559 = cljs.core.first.call(null, seq6558);
  var seq6558__$1 = cljs.core.next.call(null, seq6558);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6559, seq6558__$1);
};
cljs_http.client.head = function cljs_http$client$head(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6573 = arguments.length;
  var i__4731__auto___6574 = 0;
  while (true) {
    if (i__4731__auto___6574 < len__4730__auto___6573) {
      args__4736__auto__.push(arguments[i__4731__auto___6574]);
      var G__6575 = i__4731__auto___6574 + 1;
      i__4731__auto___6574 = G__6575;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.head.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6569) {
  var vec__6570 = p__6569;
  var req = cljs.core.nth.call(null, vec__6570, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.head.cljs$lang$maxFixedArity = 1;
cljs_http.client.head.cljs$lang$applyTo = function(seq6567) {
  var G__6568 = cljs.core.first.call(null, seq6567);
  var seq6567__$1 = cljs.core.next.call(null, seq6567);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6568, seq6567__$1);
};
cljs_http.client.jsonp = function cljs_http$client$jsonp(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6582 = arguments.length;
  var i__4731__auto___6583 = 0;
  while (true) {
    if (i__4731__auto___6583 < len__4730__auto___6582) {
      args__4736__auto__.push(arguments[i__4731__auto___6583]);
      var G__6584 = i__4731__auto___6583 + 1;
      i__4731__auto___6583 = G__6584;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.jsonp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.jsonp.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6578) {
  var vec__6579 = p__6578;
  var req = cljs.core.nth.call(null, vec__6579, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "jsonp", "jsonp", 226119588), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.jsonp.cljs$lang$maxFixedArity = 1;
cljs_http.client.jsonp.cljs$lang$applyTo = function(seq6576) {
  var G__6577 = cljs.core.first.call(null, seq6576);
  var seq6576__$1 = cljs.core.next.call(null, seq6576);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6577, seq6576__$1);
};
cljs_http.client.move = function cljs_http$client$move(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6591 = arguments.length;
  var i__4731__auto___6592 = 0;
  while (true) {
    if (i__4731__auto___6592 < len__4730__auto___6591) {
      args__4736__auto__.push(arguments[i__4731__auto___6592]);
      var G__6593 = i__4731__auto___6592 + 1;
      i__4731__auto___6592 = G__6593;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.move.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.move.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6587) {
  var vec__6588 = p__6587;
  var req = cljs.core.nth.call(null, vec__6588, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "move", "move", -2110884309), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.move.cljs$lang$maxFixedArity = 1;
cljs_http.client.move.cljs$lang$applyTo = function(seq6585) {
  var G__6586 = cljs.core.first.call(null, seq6585);
  var seq6585__$1 = cljs.core.next.call(null, seq6585);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6586, seq6585__$1);
};
cljs_http.client.options = function cljs_http$client$options(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6600 = arguments.length;
  var i__4731__auto___6601 = 0;
  while (true) {
    if (i__4731__auto___6601 < len__4730__auto___6600) {
      args__4736__auto__.push(arguments[i__4731__auto___6601]);
      var G__6602 = i__4731__auto___6601 + 1;
      i__4731__auto___6601 = G__6602;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.options.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.options.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6596) {
  var vec__6597 = p__6596;
  var req = cljs.core.nth.call(null, vec__6597, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.options.cljs$lang$maxFixedArity = 1;
cljs_http.client.options.cljs$lang$applyTo = function(seq6594) {
  var G__6595 = cljs.core.first.call(null, seq6594);
  var seq6594__$1 = cljs.core.next.call(null, seq6594);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6595, seq6594__$1);
};
cljs_http.client.patch = function cljs_http$client$patch(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6609 = arguments.length;
  var i__4731__auto___6610 = 0;
  while (true) {
    if (i__4731__auto___6610 < len__4730__auto___6609) {
      args__4736__auto__.push(arguments[i__4731__auto___6610]);
      var G__6611 = i__4731__auto___6610 + 1;
      i__4731__auto___6610 = G__6611;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.patch.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.patch.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6605) {
  var vec__6606 = p__6605;
  var req = cljs.core.nth.call(null, vec__6606, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "patch", "patch", 380775109), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.patch.cljs$lang$maxFixedArity = 1;
cljs_http.client.patch.cljs$lang$applyTo = function(seq6603) {
  var G__6604 = cljs.core.first.call(null, seq6603);
  var seq6603__$1 = cljs.core.next.call(null, seq6603);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6604, seq6603__$1);
};
cljs_http.client.post = function cljs_http$client$post(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6618 = arguments.length;
  var i__4731__auto___6619 = 0;
  while (true) {
    if (i__4731__auto___6619 < len__4730__auto___6618) {
      args__4736__auto__.push(arguments[i__4731__auto___6619]);
      var G__6620 = i__4731__auto___6619 + 1;
      i__4731__auto___6619 = G__6620;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.post.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.post.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6614) {
  var vec__6615 = p__6614;
  var req = cljs.core.nth.call(null, vec__6615, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.post.cljs$lang$maxFixedArity = 1;
cljs_http.client.post.cljs$lang$applyTo = function(seq6612) {
  var G__6613 = cljs.core.first.call(null, seq6612);
  var seq6612__$1 = cljs.core.next.call(null, seq6612);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6613, seq6612__$1);
};
cljs_http.client.put = function cljs_http$client$put(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___6627 = arguments.length;
  var i__4731__auto___6628 = 0;
  while (true) {
    if (i__4731__auto___6628 < len__4730__auto___6627) {
      args__4736__auto__.push(arguments[i__4731__auto___6628]);
      var G__6629 = i__4731__auto___6628 + 1;
      i__4731__auto___6628 = G__6629;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs_http.client.put.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs_http.client.put.cljs$core$IFn$_invoke$arity$variadic = function(url, p__6623) {
  var vec__6624 = p__6623;
  var req = cljs.core.nth.call(null, vec__6624, 0, null);
  return cljs_http.client.request.call(null, cljs.core.merge.call(null, req, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "put", "put", 1299772570), new cljs.core.Keyword(null, "url", "url", 276297046), url], null)));
};
cljs_http.client.put.cljs$lang$maxFixedArity = 1;
cljs_http.client.put.cljs$lang$applyTo = function(seq6621) {
  var G__6622 = cljs.core.first.call(null, seq6621);
  var seq6621__$1 = cljs.core.next.call(null, seq6621);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6622, seq6621__$1);
};
goog.provide("cheshire_cat.core");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
goog.require("cljs_http.client");
goog.require("cljs.core.async");
cheshire_cat.core.init = function cheshire_cat$core$init() {
  clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
  var c__6001__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6001__auto__) {
    return function() {
      var f__6002__auto__ = function() {
        var switch__5950__auto__ = function(c__6001__auto__) {
          return function(state_7696) {
            var state_val_7697 = state_7696[1];
            if (state_val_7697 === 1) {
              var inst_7690 = cljs_http.client.get.call(null, "/cheshire-cat");
              var state_7696__$1 = state_7696;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7696__$1, 2, inst_7690);
            } else {
              if (state_val_7697 === 2) {
                var inst_7692 = state_7696[2];
                var inst_7693 = (new cljs.core.Keyword(null, "body", "body", -2049205669)).cljs$core$IFn$_invoke$arity$1(inst_7692);
                var inst_7694 = alert(inst_7693);
                var state_7696__$1 = state_7696;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7696__$1, inst_7694);
              } else {
                return null;
              }
            }
          };
        }(c__6001__auto__);
        return function(switch__5950__auto__, c__6001__auto__) {
          return function() {
            var cheshire_cat$core$init_$_state_machine__5951__auto__ = null;
            var cheshire_cat$core$init_$_state_machine__5951__auto____0 = function() {
              var statearr_7698 = [null, null, null, null, null, null, null];
              statearr_7698[0] = cheshire_cat$core$init_$_state_machine__5951__auto__;
              statearr_7698[1] = 1;
              return statearr_7698;
            };
            var cheshire_cat$core$init_$_state_machine__5951__auto____1 = function(state_7696) {
              while (true) {
                var ret_value__5952__auto__ = function() {
                  try {
                    while (true) {
                      var result__5953__auto__ = switch__5950__auto__.call(null, state_7696);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5953__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5953__auto__;
                      }
                      break;
                    }
                  } catch (e7699) {
                    if (e7699 instanceof Object) {
                      var ex__5954__auto__ = e7699;
                      var statearr_7700_7702 = state_7696;
                      statearr_7700_7702[5] = ex__5954__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7696);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7699;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5952__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7703 = state_7696;
                  state_7696 = G__7703;
                  continue;
                } else {
                  return ret_value__5952__auto__;
                }
                break;
              }
            };
            cheshire_cat$core$init_$_state_machine__5951__auto__ = function(state_7696) {
              switch(arguments.length) {
                case 0:
                  return cheshire_cat$core$init_$_state_machine__5951__auto____0.call(this);
                case 1:
                  return cheshire_cat$core$init_$_state_machine__5951__auto____1.call(this, state_7696);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cheshire_cat$core$init_$_state_machine__5951__auto__.cljs$core$IFn$_invoke$arity$0 = cheshire_cat$core$init_$_state_machine__5951__auto____0;
            cheshire_cat$core$init_$_state_machine__5951__auto__.cljs$core$IFn$_invoke$arity$1 = cheshire_cat$core$init_$_state_machine__5951__auto____1;
            return cheshire_cat$core$init_$_state_machine__5951__auto__;
          }();
        }(switch__5950__auto__, c__6001__auto__);
      }();
      var state__6003__auto__ = function() {
        var statearr_7701 = f__6002__auto__.call(null);
        statearr_7701[6] = c__6001__auto__;
        return statearr_7701;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6003__auto__);
    };
  }(c__6001__auto__));
  return c__6001__auto__;
};
goog.exportSymbol("cheshire_cat.core.init", cheshire_cat.core.init);
